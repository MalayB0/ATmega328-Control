
AnalogToDigital.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000f08  00000f7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f08  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000160  00000000  00000000  00000f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000001d3  00000000  00000000  000010f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001e50  00000000  00000000  000012c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00001037  00000000  00000000  00003117  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000102d  00000000  00000000  0000414e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001c0  00000000  00000000  0000517c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000362  00000000  00000000  0000533c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000007ce  00000000  00000000  0000569e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00005e6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__vector_1>
   8:	0c 94 a2 01 	jmp	0x344	; 0x344 <__vector_2>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e0       	ldi	r30, 0x08	; 8
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
  8a:	0e 94 c5 01 	call	0x38a	; 0x38a <main>
  8e:	0c 94 82 07 	jmp	0xf04	; 0xf04 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <GetADCData>:
#include <avr/interrupt.h>
#include <math.h>
unsigned char Seg_Arr[16] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x27,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71};

unsigned int GetADCData(uint8_t aIn)
{
  96:	df 93       	push	r29
  98:	cf 93       	push	r28
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	61 97       	sbiw	r28, 0x11	; 17
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
  aa:	89 8b       	std	Y+17, r24	; 0x11
	volatile unsigned int result;
	ADMUX = aIn;
  ac:	ec e7       	ldi	r30, 0x7C	; 124
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	89 89       	ldd	r24, Y+17	; 0x11
  b2:	80 83       	st	Z, r24
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1);
  b4:	ea e7       	ldi	r30, 0x7A	; 122
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	86 e8       	ldi	r24, 0x86	; 134
  ba:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
  bc:	aa e7       	ldi	r26, 0x7A	; 122
  be:	b0 e0       	ldi	r27, 0x00	; 0
  c0:	ea e7       	ldi	r30, 0x7A	; 122
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	80 64       	ori	r24, 0x40	; 64
  c8:	8c 93       	st	X, r24
	while(!(ADCSRA&(1<<ADIF)));
  ca:	ea e7       	ldi	r30, 0x7A	; 122
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 2f       	mov	r24, r24
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	80 71       	andi	r24, 0x10	; 16
  d6:	90 70       	andi	r25, 0x00	; 0
  d8:	00 97       	sbiw	r24, 0x00	; 0
  da:	b9 f3       	breq	.-18     	; 0xca <GetADCData+0x34>
	//starting converser
	//ADIF가 셋이 될때까지 기다린다 
	result = ADCL + (ADCH<<8); // 16비트는 그대로, 8비트는 상위값으로 옮겨줌
  dc:	e8 e7       	ldi	r30, 0x78	; 120
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	28 2f       	mov	r18, r24
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	e9 e7       	ldi	r30, 0x79	; 121
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	88 2f       	mov	r24, r24
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	98 2f       	mov	r25, r24
  f2:	88 27       	eor	r24, r24
  f4:	82 0f       	add	r24, r18
  f6:	93 1f       	adc	r25, r19
  f8:	98 8b       	std	Y+16, r25	; 0x10
  fa:	8f 87       	std	Y+15, r24	; 0x0f
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	a0 e8       	ldi	r26, 0x80	; 128
 102:	bf e3       	ldi	r27, 0x3F	; 63
 104:	8b 87       	std	Y+11, r24	; 0x0b
 106:	9c 87       	std	Y+12, r25	; 0x0c
 108:	ad 87       	std	Y+13, r26	; 0x0d
 10a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 10c:	6b 85       	ldd	r22, Y+11	; 0x0b
 10e:	7c 85       	ldd	r23, Y+12	; 0x0c
 110:	8d 85       	ldd	r24, Y+13	; 0x0d
 112:	9e 85       	ldd	r25, Y+14	; 0x0e
 114:	20 e0       	ldi	r18, 0x00	; 0
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	4a e7       	ldi	r20, 0x7A	; 122
 11a:	55 e4       	ldi	r21, 0x45	; 69
 11c:	0e 94 c7 03 	call	0x78e	; 0x78e <__mulsf3>
 120:	dc 01       	movw	r26, r24
 122:	cb 01       	movw	r24, r22
 124:	8f 83       	std	Y+7, r24	; 0x07
 126:	98 87       	std	Y+8, r25	; 0x08
 128:	a9 87       	std	Y+9, r26	; 0x09
 12a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 12c:	6f 81       	ldd	r22, Y+7	; 0x07
 12e:	78 85       	ldd	r23, Y+8	; 0x08
 130:	89 85       	ldd	r24, Y+9	; 0x09
 132:	9a 85       	ldd	r25, Y+10	; 0x0a
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	40 e8       	ldi	r20, 0x80	; 128
 13a:	5f e3       	ldi	r21, 0x3F	; 63
 13c:	0e 94 21 05 	call	0xa42	; 0xa42 <__ltsf2>
 140:	88 23       	and	r24, r24
 142:	2c f4       	brge	.+10     	; 0x14e <GetADCData+0xb8>
		__ticks = 1;
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	9e 83       	std	Y+6, r25	; 0x06
 14a:	8d 83       	std	Y+5, r24	; 0x05
 14c:	3f c0       	rjmp	.+126    	; 0x1cc <GetADCData+0x136>
	else if (__tmp > 65535)
 14e:	6f 81       	ldd	r22, Y+7	; 0x07
 150:	78 85       	ldd	r23, Y+8	; 0x08
 152:	89 85       	ldd	r24, Y+9	; 0x09
 154:	9a 85       	ldd	r25, Y+10	; 0x0a
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	3f ef       	ldi	r19, 0xFF	; 255
 15a:	4f e7       	ldi	r20, 0x7F	; 127
 15c:	57 e4       	ldi	r21, 0x47	; 71
 15e:	0e 94 c1 04 	call	0x982	; 0x982 <__gtsf2>
 162:	18 16       	cp	r1, r24
 164:	4c f5       	brge	.+82     	; 0x1b8 <GetADCData+0x122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 166:	6b 85       	ldd	r22, Y+11	; 0x0b
 168:	7c 85       	ldd	r23, Y+12	; 0x0c
 16a:	8d 85       	ldd	r24, Y+13	; 0x0d
 16c:	9e 85       	ldd	r25, Y+14	; 0x0e
 16e:	20 e0       	ldi	r18, 0x00	; 0
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	40 e2       	ldi	r20, 0x20	; 32
 174:	51 e4       	ldi	r21, 0x41	; 65
 176:	0e 94 c7 03 	call	0x78e	; 0x78e <__mulsf3>
 17a:	dc 01       	movw	r26, r24
 17c:	cb 01       	movw	r24, r22
 17e:	bc 01       	movw	r22, r24
 180:	cd 01       	movw	r24, r26
 182:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 186:	dc 01       	movw	r26, r24
 188:	cb 01       	movw	r24, r22
 18a:	9e 83       	std	Y+6, r25	; 0x06
 18c:	8d 83       	std	Y+5, r24	; 0x05
 18e:	0f c0       	rjmp	.+30     	; 0x1ae <GetADCData+0x118>
 190:	80 e9       	ldi	r24, 0x90	; 144
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	9c 83       	std	Y+4, r25	; 0x04
 196:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 198:	8b 81       	ldd	r24, Y+3	; 0x03
 19a:	9c 81       	ldd	r25, Y+4	; 0x04
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <GetADCData+0x106>
 1a0:	9c 83       	std	Y+4, r25	; 0x04
 1a2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1a4:	8d 81       	ldd	r24, Y+5	; 0x05
 1a6:	9e 81       	ldd	r25, Y+6	; 0x06
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	9e 83       	std	Y+6, r25	; 0x06
 1ac:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ae:	8d 81       	ldd	r24, Y+5	; 0x05
 1b0:	9e 81       	ldd	r25, Y+6	; 0x06
 1b2:	00 97       	sbiw	r24, 0x00	; 0
 1b4:	69 f7       	brne	.-38     	; 0x190 <GetADCData+0xfa>
 1b6:	14 c0       	rjmp	.+40     	; 0x1e0 <GetADCData+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1b8:	6f 81       	ldd	r22, Y+7	; 0x07
 1ba:	78 85       	ldd	r23, Y+8	; 0x08
 1bc:	89 85       	ldd	r24, Y+9	; 0x09
 1be:	9a 85       	ldd	r25, Y+10	; 0x0a
 1c0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fixunssfsi>
 1c4:	dc 01       	movw	r26, r24
 1c6:	cb 01       	movw	r24, r22
 1c8:	9e 83       	std	Y+6, r25	; 0x06
 1ca:	8d 83       	std	Y+5, r24	; 0x05
 1cc:	8d 81       	ldd	r24, Y+5	; 0x05
 1ce:	9e 81       	ldd	r25, Y+6	; 0x06
 1d0:	9a 83       	std	Y+2, r25	; 0x02
 1d2:	89 83       	std	Y+1, r24	; 0x01
 1d4:	89 81       	ldd	r24, Y+1	; 0x01
 1d6:	9a 81       	ldd	r25, Y+2	; 0x02
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <GetADCData+0x142>
 1dc:	9a 83       	std	Y+2, r25	; 0x02
 1de:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	ADCSRA = 0x00;
 1e0:	ea e7       	ldi	r30, 0x7A	; 122
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	10 82       	st	Z, r1
	return result;
 1e6:	8f 85       	ldd	r24, Y+15	; 0x0f
 1e8:	98 89       	ldd	r25, Y+16	; 0x10

}
 1ea:	61 96       	adiw	r28, 0x11	; 17
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	f8 94       	cli
 1f0:	de bf       	out	0x3e, r29	; 62
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	cd bf       	out	0x3d, r28	; 61
 1f6:	cf 91       	pop	r28
 1f8:	df 91       	pop	r29
 1fa:	08 95       	ret

000001fc <segmentdsp>:

segmentdsp(unsigned char input)
{
 1fc:	df 93       	push	r29
 1fe:	cf 93       	push	r28
 200:	cd b7       	in	r28, 0x3d	; 61
 202:	de b7       	in	r29, 0x3e	; 62
 204:	27 97       	sbiw	r28, 0x07	; 7
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	f8 94       	cli
 20a:	de bf       	out	0x3e, r29	; 62
 20c:	0f be       	out	0x3f, r0	; 63
 20e:	cd bf       	out	0x3d, r28	; 61
 210:	8d 83       	std	Y+5, r24	; 0x05
	unsigned int left = input/16;
 212:	8d 81       	ldd	r24, Y+5	; 0x05
 214:	82 95       	swap	r24
 216:	8f 70       	andi	r24, 0x0F	; 15
 218:	88 2f       	mov	r24, r24
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	9c 83       	std	Y+4, r25	; 0x04
 21e:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int right =input%16;
 220:	8d 81       	ldd	r24, Y+5	; 0x05
 222:	88 2f       	mov	r24, r24
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	8f 70       	andi	r24, 0x0F	; 15
 228:	90 70       	andi	r25, 0x00	; 0
 22a:	9a 83       	std	Y+2, r25	; 0x02
 22c:	89 83       	std	Y+1, r24	; 0x01
	PORTD = (Seg_Arr[left]<<4)|(Seg_Arr[right]>>5);
 22e:	ab e2       	ldi	r26, 0x2B	; 43
 230:	b0 e0       	ldi	r27, 0x00	; 0
 232:	8b 81       	ldd	r24, Y+3	; 0x03
 234:	9c 81       	ldd	r25, Y+4	; 0x04
 236:	fc 01       	movw	r30, r24
 238:	e0 50       	subi	r30, 0x00	; 0
 23a:	ff 4f       	sbci	r31, 0xFF	; 255
 23c:	80 81       	ld	r24, Z
 23e:	88 2f       	mov	r24, r24
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	82 95       	swap	r24
 244:	92 95       	swap	r25
 246:	90 7f       	andi	r25, 0xF0	; 240
 248:	98 27       	eor	r25, r24
 24a:	80 7f       	andi	r24, 0xF0	; 240
 24c:	98 27       	eor	r25, r24
 24e:	28 2f       	mov	r18, r24
 250:	89 81       	ldd	r24, Y+1	; 0x01
 252:	9a 81       	ldd	r25, Y+2	; 0x02
 254:	fc 01       	movw	r30, r24
 256:	e0 50       	subi	r30, 0x00	; 0
 258:	ff 4f       	sbci	r31, 0xFF	; 255
 25a:	80 81       	ld	r24, Z
 25c:	82 95       	swap	r24
 25e:	86 95       	lsr	r24
 260:	87 70       	andi	r24, 0x07	; 7
 262:	82 2b       	or	r24, r18
 264:	8c 93       	st	X, r24
	PORTB = (Seg_Arr[left]>>4)|((Seg_Arr[right]>>3)&0x10);
 266:	a5 e2       	ldi	r26, 0x25	; 37
 268:	b0 e0       	ldi	r27, 0x00	; 0
 26a:	8b 81       	ldd	r24, Y+3	; 0x03
 26c:	9c 81       	ldd	r25, Y+4	; 0x04
 26e:	fc 01       	movw	r30, r24
 270:	e0 50       	subi	r30, 0x00	; 0
 272:	ff 4f       	sbci	r31, 0xFF	; 255
 274:	80 81       	ld	r24, Z
 276:	82 95       	swap	r24
 278:	8f 70       	andi	r24, 0x0F	; 15
 27a:	28 2f       	mov	r18, r24
 27c:	89 81       	ldd	r24, Y+1	; 0x01
 27e:	9a 81       	ldd	r25, Y+2	; 0x02
 280:	fc 01       	movw	r30, r24
 282:	e0 50       	subi	r30, 0x00	; 0
 284:	ff 4f       	sbci	r31, 0xFF	; 255
 286:	80 81       	ld	r24, Z
 288:	86 95       	lsr	r24
 28a:	86 95       	lsr	r24
 28c:	86 95       	lsr	r24
 28e:	80 71       	andi	r24, 0x10	; 16
 290:	82 2b       	or	r24, r18
 292:	8c 93       	st	X, r24
	PORTC = (PORTC&0x01)|(Seg_Arr[right]<<1);
 294:	a8 e2       	ldi	r26, 0x28	; 40
 296:	b0 e0       	ldi	r27, 0x00	; 0
 298:	e8 e2       	ldi	r30, 0x28	; 40
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	28 2f       	mov	r18, r24
 2a0:	21 70       	andi	r18, 0x01	; 1
 2a2:	89 81       	ldd	r24, Y+1	; 0x01
 2a4:	9a 81       	ldd	r25, Y+2	; 0x02
 2a6:	fc 01       	movw	r30, r24
 2a8:	e0 50       	subi	r30, 0x00	; 0
 2aa:	ff 4f       	sbci	r31, 0xFF	; 255
 2ac:	80 81       	ld	r24, Z
 2ae:	88 2f       	mov	r24, r24
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	82 2b       	or	r24, r18
 2b8:	8c 93       	st	X, r24
}
 2ba:	27 96       	adiw	r28, 0x07	; 7
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	f8 94       	cli
 2c0:	de bf       	out	0x3e, r29	; 62
 2c2:	0f be       	out	0x3f, r0	; 63
 2c4:	cd bf       	out	0x3d, r28	; 61
 2c6:	cf 91       	pop	r28
 2c8:	df 91       	pop	r29
 2ca:	08 95       	ret

000002cc <__vector_1>:


ISR(INT0_vect)
{
 2cc:	1f 92       	push	r1
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	2f 93       	push	r18
 2d8:	3f 93       	push	r19
 2da:	4f 93       	push	r20
 2dc:	5f 93       	push	r21
 2de:	6f 93       	push	r22
 2e0:	7f 93       	push	r23
 2e2:	8f 93       	push	r24
 2e4:	9f 93       	push	r25
 2e6:	af 93       	push	r26
 2e8:	bf 93       	push	r27
 2ea:	ef 93       	push	r30
 2ec:	ff 93       	push	r31
 2ee:	df 93       	push	r29
 2f0:	cf 93       	push	r28
 2f2:	00 d0       	rcall	.+0      	; 0x2f4 <__vector_1+0x28>
 2f4:	cd b7       	in	r28, 0x3d	; 61
 2f6:	de b7       	in	r29, 0x3e	; 62
	cli();
 2f8:	f8 94       	cli
	unsigned int value = GetADCData(0);
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	0e 94 4b 00 	call	0x96	; 0x96 <GetADCData>
 300:	9a 83       	std	Y+2, r25	; 0x02
 302:	89 83       	std	Y+1, r24	; 0x01
	segmentdsp((unsigned char)value);
 304:	89 81       	ldd	r24, Y+1	; 0x01
 306:	0e 94 fe 00 	call	0x1fc	; 0x1fc <segmentdsp>
	EIFR |= 0x01;
 30a:	ac e3       	ldi	r26, 0x3C	; 60
 30c:	b0 e0       	ldi	r27, 0x00	; 0
 30e:	ec e3       	ldi	r30, 0x3C	; 60
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	80 81       	ld	r24, Z
 314:	81 60       	ori	r24, 0x01	; 1
 316:	8c 93       	st	X, r24
	sei();
 318:	78 94       	sei
}
 31a:	0f 90       	pop	r0
 31c:	0f 90       	pop	r0
 31e:	cf 91       	pop	r28
 320:	df 91       	pop	r29
 322:	ff 91       	pop	r31
 324:	ef 91       	pop	r30
 326:	bf 91       	pop	r27
 328:	af 91       	pop	r26
 32a:	9f 91       	pop	r25
 32c:	8f 91       	pop	r24
 32e:	7f 91       	pop	r23
 330:	6f 91       	pop	r22
 332:	5f 91       	pop	r21
 334:	4f 91       	pop	r20
 336:	3f 91       	pop	r19
 338:	2f 91       	pop	r18
 33a:	0f 90       	pop	r0
 33c:	0f be       	out	0x3f, r0	; 63
 33e:	0f 90       	pop	r0
 340:	1f 90       	pop	r1
 342:	18 95       	reti

00000344 <__vector_2>:

ISR(INT1_vect)
{
 344:	1f 92       	push	r1
 346:	0f 92       	push	r0
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	0f 92       	push	r0
 34c:	11 24       	eor	r1, r1
 34e:	8f 93       	push	r24
 350:	af 93       	push	r26
 352:	bf 93       	push	r27
 354:	ef 93       	push	r30
 356:	ff 93       	push	r31
 358:	df 93       	push	r29
 35a:	cf 93       	push	r28
 35c:	cd b7       	in	r28, 0x3d	; 61
 35e:	de b7       	in	r29, 0x3e	; 62
	cli();
 360:	f8 94       	cli
	EIFR |= 0x02;
 362:	ac e3       	ldi	r26, 0x3C	; 60
 364:	b0 e0       	ldi	r27, 0x00	; 0
 366:	ec e3       	ldi	r30, 0x3C	; 60
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	80 81       	ld	r24, Z
 36c:	82 60       	ori	r24, 0x02	; 2
 36e:	8c 93       	st	X, r24
	sei();
 370:	78 94       	sei
}
 372:	cf 91       	pop	r28
 374:	df 91       	pop	r29
 376:	ff 91       	pop	r31
 378:	ef 91       	pop	r30
 37a:	bf 91       	pop	r27
 37c:	af 91       	pop	r26
 37e:	8f 91       	pop	r24
 380:	0f 90       	pop	r0
 382:	0f be       	out	0x3f, r0	; 63
 384:	0f 90       	pop	r0
 386:	1f 90       	pop	r1
 388:	18 95       	reti

0000038a <main>:

int main()
{
 38a:	df 93       	push	r29
 38c:	cf 93       	push	r28
 38e:	cd b7       	in	r28, 0x3d	; 61
 390:	de b7       	in	r29, 0x3e	; 62
	cli();
 392:	f8 94       	cli
	DDRD = 0xF3;
 394:	ea e2       	ldi	r30, 0x2A	; 42
 396:	f0 e0       	ldi	r31, 0x00	; 0
 398:	83 ef       	ldi	r24, 0xF3	; 243
 39a:	80 83       	st	Z, r24
	DDRB = 0xFF; // 하위 4비트 활성화
 39c:	e4 e2       	ldi	r30, 0x24	; 36
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	8f ef       	ldi	r24, 0xFF	; 255
 3a2:	80 83       	st	Z, r24
	DDRC = 0xFE;   
 3a4:	e7 e2       	ldi	r30, 0x27	; 39
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	8e ef       	ldi	r24, 0xFE	; 254
 3aa:	80 83       	st	Z, r24

	segmentdsp((unsigned char)GetADCData(0));
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	0e 94 4b 00 	call	0x96	; 0x96 <GetADCData>
 3b2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <segmentdsp>
	EICRA = 0xAA;
 3b6:	e9 e6       	ldi	r30, 0x69	; 105
 3b8:	f0 e0       	ldi	r31, 0x00	; 0
 3ba:	8a ea       	ldi	r24, 0xAA	; 170
 3bc:	80 83       	st	Z, r24
	//Falling Edge Triger
	EIMSK = 0x03;
 3be:	ed e3       	ldi	r30, 0x3D	; 61
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	83 e0       	ldi	r24, 0x03	; 3
 3c4:	80 83       	st	Z, r24
	//interrupt enable
	EIFR |=0x03;
 3c6:	ac e3       	ldi	r26, 0x3C	; 60
 3c8:	b0 e0       	ldi	r27, 0x00	; 0
 3ca:	ec e3       	ldi	r30, 0x3C	; 60
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	80 81       	ld	r24, Z
 3d0:	83 60       	ori	r24, 0x03	; 3
 3d2:	8c 93       	st	X, r24

	sei();
 3d4:	78 94       	sei
	
	while(1)
	{
		segmentdsp((unsigned char)GetADCData(0));
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	0e 94 4b 00 	call	0x96	; 0x96 <GetADCData>
 3dc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <segmentdsp>
 3e0:	fa cf       	rjmp	.-12     	; 0x3d6 <main+0x4c>

000003e2 <__fixunssfsi>:
 3e2:	ef 92       	push	r14
 3e4:	ff 92       	push	r15
 3e6:	0f 93       	push	r16
 3e8:	1f 93       	push	r17
 3ea:	7b 01       	movw	r14, r22
 3ec:	8c 01       	movw	r16, r24
 3ee:	20 e0       	ldi	r18, 0x00	; 0
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	40 e0       	ldi	r20, 0x00	; 0
 3f4:	5f e4       	ldi	r21, 0x4F	; 79
 3f6:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__gesf2>
 3fa:	88 23       	and	r24, r24
 3fc:	8c f0       	brlt	.+34     	; 0x420 <__fixunssfsi+0x3e>
 3fe:	c8 01       	movw	r24, r16
 400:	b7 01       	movw	r22, r14
 402:	20 e0       	ldi	r18, 0x00	; 0
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	40 e0       	ldi	r20, 0x00	; 0
 408:	5f e4       	ldi	r21, 0x4F	; 79
 40a:	0e 94 69 03 	call	0x6d2	; 0x6d2 <__subsf3>
 40e:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fixsfsi>
 412:	9b 01       	movw	r18, r22
 414:	ac 01       	movw	r20, r24
 416:	20 50       	subi	r18, 0x00	; 0
 418:	30 40       	sbci	r19, 0x00	; 0
 41a:	40 40       	sbci	r20, 0x00	; 0
 41c:	50 48       	sbci	r21, 0x80	; 128
 41e:	06 c0       	rjmp	.+12     	; 0x42c <__fixunssfsi+0x4a>
 420:	c8 01       	movw	r24, r16
 422:	b7 01       	movw	r22, r14
 424:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fixsfsi>
 428:	9b 01       	movw	r18, r22
 42a:	ac 01       	movw	r20, r24
 42c:	b9 01       	movw	r22, r18
 42e:	ca 01       	movw	r24, r20
 430:	1f 91       	pop	r17
 432:	0f 91       	pop	r16
 434:	ff 90       	pop	r15
 436:	ef 90       	pop	r14
 438:	08 95       	ret

0000043a <_fpadd_parts>:
 43a:	a0 e0       	ldi	r26, 0x00	; 0
 43c:	b0 e0       	ldi	r27, 0x00	; 0
 43e:	e3 e2       	ldi	r30, 0x23	; 35
 440:	f2 e0       	ldi	r31, 0x02	; 2
 442:	0c 94 4b 07 	jmp	0xe96	; 0xe96 <__prologue_saves__>
 446:	dc 01       	movw	r26, r24
 448:	2b 01       	movw	r4, r22
 44a:	fa 01       	movw	r30, r20
 44c:	9c 91       	ld	r25, X
 44e:	92 30       	cpi	r25, 0x02	; 2
 450:	08 f4       	brcc	.+2      	; 0x454 <_fpadd_parts+0x1a>
 452:	39 c1       	rjmp	.+626    	; 0x6c6 <_fpadd_parts+0x28c>
 454:	eb 01       	movw	r28, r22
 456:	88 81       	ld	r24, Y
 458:	82 30       	cpi	r24, 0x02	; 2
 45a:	08 f4       	brcc	.+2      	; 0x45e <_fpadd_parts+0x24>
 45c:	33 c1       	rjmp	.+614    	; 0x6c4 <_fpadd_parts+0x28a>
 45e:	94 30       	cpi	r25, 0x04	; 4
 460:	69 f4       	brne	.+26     	; 0x47c <_fpadd_parts+0x42>
 462:	84 30       	cpi	r24, 0x04	; 4
 464:	09 f0       	breq	.+2      	; 0x468 <_fpadd_parts+0x2e>
 466:	2f c1       	rjmp	.+606    	; 0x6c6 <_fpadd_parts+0x28c>
 468:	11 96       	adiw	r26, 0x01	; 1
 46a:	9c 91       	ld	r25, X
 46c:	11 97       	sbiw	r26, 0x01	; 1
 46e:	89 81       	ldd	r24, Y+1	; 0x01
 470:	98 17       	cp	r25, r24
 472:	09 f4       	brne	.+2      	; 0x476 <_fpadd_parts+0x3c>
 474:	28 c1       	rjmp	.+592    	; 0x6c6 <_fpadd_parts+0x28c>
 476:	a0 e1       	ldi	r26, 0x10	; 16
 478:	b1 e0       	ldi	r27, 0x01	; 1
 47a:	25 c1       	rjmp	.+586    	; 0x6c6 <_fpadd_parts+0x28c>
 47c:	84 30       	cpi	r24, 0x04	; 4
 47e:	09 f4       	brne	.+2      	; 0x482 <_fpadd_parts+0x48>
 480:	21 c1       	rjmp	.+578    	; 0x6c4 <_fpadd_parts+0x28a>
 482:	82 30       	cpi	r24, 0x02	; 2
 484:	a9 f4       	brne	.+42     	; 0x4b0 <_fpadd_parts+0x76>
 486:	92 30       	cpi	r25, 0x02	; 2
 488:	09 f0       	breq	.+2      	; 0x48c <_fpadd_parts+0x52>
 48a:	1d c1       	rjmp	.+570    	; 0x6c6 <_fpadd_parts+0x28c>
 48c:	9a 01       	movw	r18, r20
 48e:	ad 01       	movw	r20, r26
 490:	88 e0       	ldi	r24, 0x08	; 8
 492:	ea 01       	movw	r28, r20
 494:	09 90       	ld	r0, Y+
 496:	ae 01       	movw	r20, r28
 498:	e9 01       	movw	r28, r18
 49a:	09 92       	st	Y+, r0
 49c:	9e 01       	movw	r18, r28
 49e:	81 50       	subi	r24, 0x01	; 1
 4a0:	c1 f7       	brne	.-16     	; 0x492 <_fpadd_parts+0x58>
 4a2:	e2 01       	movw	r28, r4
 4a4:	89 81       	ldd	r24, Y+1	; 0x01
 4a6:	11 96       	adiw	r26, 0x01	; 1
 4a8:	9c 91       	ld	r25, X
 4aa:	89 23       	and	r24, r25
 4ac:	81 83       	std	Z+1, r24	; 0x01
 4ae:	08 c1       	rjmp	.+528    	; 0x6c0 <_fpadd_parts+0x286>
 4b0:	92 30       	cpi	r25, 0x02	; 2
 4b2:	09 f4       	brne	.+2      	; 0x4b6 <_fpadd_parts+0x7c>
 4b4:	07 c1       	rjmp	.+526    	; 0x6c4 <_fpadd_parts+0x28a>
 4b6:	12 96       	adiw	r26, 0x02	; 2
 4b8:	2d 90       	ld	r2, X+
 4ba:	3c 90       	ld	r3, X
 4bc:	13 97       	sbiw	r26, 0x03	; 3
 4be:	eb 01       	movw	r28, r22
 4c0:	8a 81       	ldd	r24, Y+2	; 0x02
 4c2:	9b 81       	ldd	r25, Y+3	; 0x03
 4c4:	14 96       	adiw	r26, 0x04	; 4
 4c6:	ad 90       	ld	r10, X+
 4c8:	bd 90       	ld	r11, X+
 4ca:	cd 90       	ld	r12, X+
 4cc:	dc 90       	ld	r13, X
 4ce:	17 97       	sbiw	r26, 0x07	; 7
 4d0:	ec 80       	ldd	r14, Y+4	; 0x04
 4d2:	fd 80       	ldd	r15, Y+5	; 0x05
 4d4:	0e 81       	ldd	r16, Y+6	; 0x06
 4d6:	1f 81       	ldd	r17, Y+7	; 0x07
 4d8:	91 01       	movw	r18, r2
 4da:	28 1b       	sub	r18, r24
 4dc:	39 0b       	sbc	r19, r25
 4de:	b9 01       	movw	r22, r18
 4e0:	37 ff       	sbrs	r19, 7
 4e2:	04 c0       	rjmp	.+8      	; 0x4ec <_fpadd_parts+0xb2>
 4e4:	66 27       	eor	r22, r22
 4e6:	77 27       	eor	r23, r23
 4e8:	62 1b       	sub	r22, r18
 4ea:	73 0b       	sbc	r23, r19
 4ec:	60 32       	cpi	r22, 0x20	; 32
 4ee:	71 05       	cpc	r23, r1
 4f0:	0c f0       	brlt	.+2      	; 0x4f4 <_fpadd_parts+0xba>
 4f2:	61 c0       	rjmp	.+194    	; 0x5b6 <_fpadd_parts+0x17c>
 4f4:	12 16       	cp	r1, r18
 4f6:	13 06       	cpc	r1, r19
 4f8:	6c f5       	brge	.+90     	; 0x554 <_fpadd_parts+0x11a>
 4fa:	37 01       	movw	r6, r14
 4fc:	48 01       	movw	r8, r16
 4fe:	06 2e       	mov	r0, r22
 500:	04 c0       	rjmp	.+8      	; 0x50a <_fpadd_parts+0xd0>
 502:	96 94       	lsr	r9
 504:	87 94       	ror	r8
 506:	77 94       	ror	r7
 508:	67 94       	ror	r6
 50a:	0a 94       	dec	r0
 50c:	d2 f7       	brpl	.-12     	; 0x502 <_fpadd_parts+0xc8>
 50e:	21 e0       	ldi	r18, 0x01	; 1
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	40 e0       	ldi	r20, 0x00	; 0
 514:	50 e0       	ldi	r21, 0x00	; 0
 516:	04 c0       	rjmp	.+8      	; 0x520 <_fpadd_parts+0xe6>
 518:	22 0f       	add	r18, r18
 51a:	33 1f       	adc	r19, r19
 51c:	44 1f       	adc	r20, r20
 51e:	55 1f       	adc	r21, r21
 520:	6a 95       	dec	r22
 522:	d2 f7       	brpl	.-12     	; 0x518 <_fpadd_parts+0xde>
 524:	21 50       	subi	r18, 0x01	; 1
 526:	30 40       	sbci	r19, 0x00	; 0
 528:	40 40       	sbci	r20, 0x00	; 0
 52a:	50 40       	sbci	r21, 0x00	; 0
 52c:	2e 21       	and	r18, r14
 52e:	3f 21       	and	r19, r15
 530:	40 23       	and	r20, r16
 532:	51 23       	and	r21, r17
 534:	21 15       	cp	r18, r1
 536:	31 05       	cpc	r19, r1
 538:	41 05       	cpc	r20, r1
 53a:	51 05       	cpc	r21, r1
 53c:	21 f0       	breq	.+8      	; 0x546 <_fpadd_parts+0x10c>
 53e:	21 e0       	ldi	r18, 0x01	; 1
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	40 e0       	ldi	r20, 0x00	; 0
 544:	50 e0       	ldi	r21, 0x00	; 0
 546:	79 01       	movw	r14, r18
 548:	8a 01       	movw	r16, r20
 54a:	e6 28       	or	r14, r6
 54c:	f7 28       	or	r15, r7
 54e:	08 29       	or	r16, r8
 550:	19 29       	or	r17, r9
 552:	3c c0       	rjmp	.+120    	; 0x5cc <_fpadd_parts+0x192>
 554:	23 2b       	or	r18, r19
 556:	d1 f1       	breq	.+116    	; 0x5cc <_fpadd_parts+0x192>
 558:	26 0e       	add	r2, r22
 55a:	37 1e       	adc	r3, r23
 55c:	35 01       	movw	r6, r10
 55e:	46 01       	movw	r8, r12
 560:	06 2e       	mov	r0, r22
 562:	04 c0       	rjmp	.+8      	; 0x56c <_fpadd_parts+0x132>
 564:	96 94       	lsr	r9
 566:	87 94       	ror	r8
 568:	77 94       	ror	r7
 56a:	67 94       	ror	r6
 56c:	0a 94       	dec	r0
 56e:	d2 f7       	brpl	.-12     	; 0x564 <_fpadd_parts+0x12a>
 570:	21 e0       	ldi	r18, 0x01	; 1
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	40 e0       	ldi	r20, 0x00	; 0
 576:	50 e0       	ldi	r21, 0x00	; 0
 578:	04 c0       	rjmp	.+8      	; 0x582 <_fpadd_parts+0x148>
 57a:	22 0f       	add	r18, r18
 57c:	33 1f       	adc	r19, r19
 57e:	44 1f       	adc	r20, r20
 580:	55 1f       	adc	r21, r21
 582:	6a 95       	dec	r22
 584:	d2 f7       	brpl	.-12     	; 0x57a <_fpadd_parts+0x140>
 586:	21 50       	subi	r18, 0x01	; 1
 588:	30 40       	sbci	r19, 0x00	; 0
 58a:	40 40       	sbci	r20, 0x00	; 0
 58c:	50 40       	sbci	r21, 0x00	; 0
 58e:	2a 21       	and	r18, r10
 590:	3b 21       	and	r19, r11
 592:	4c 21       	and	r20, r12
 594:	5d 21       	and	r21, r13
 596:	21 15       	cp	r18, r1
 598:	31 05       	cpc	r19, r1
 59a:	41 05       	cpc	r20, r1
 59c:	51 05       	cpc	r21, r1
 59e:	21 f0       	breq	.+8      	; 0x5a8 <_fpadd_parts+0x16e>
 5a0:	21 e0       	ldi	r18, 0x01	; 1
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	40 e0       	ldi	r20, 0x00	; 0
 5a6:	50 e0       	ldi	r21, 0x00	; 0
 5a8:	59 01       	movw	r10, r18
 5aa:	6a 01       	movw	r12, r20
 5ac:	a6 28       	or	r10, r6
 5ae:	b7 28       	or	r11, r7
 5b0:	c8 28       	or	r12, r8
 5b2:	d9 28       	or	r13, r9
 5b4:	0b c0       	rjmp	.+22     	; 0x5cc <_fpadd_parts+0x192>
 5b6:	82 15       	cp	r24, r2
 5b8:	93 05       	cpc	r25, r3
 5ba:	2c f0       	brlt	.+10     	; 0x5c6 <_fpadd_parts+0x18c>
 5bc:	1c 01       	movw	r2, r24
 5be:	aa 24       	eor	r10, r10
 5c0:	bb 24       	eor	r11, r11
 5c2:	65 01       	movw	r12, r10
 5c4:	03 c0       	rjmp	.+6      	; 0x5cc <_fpadd_parts+0x192>
 5c6:	ee 24       	eor	r14, r14
 5c8:	ff 24       	eor	r15, r15
 5ca:	87 01       	movw	r16, r14
 5cc:	11 96       	adiw	r26, 0x01	; 1
 5ce:	9c 91       	ld	r25, X
 5d0:	d2 01       	movw	r26, r4
 5d2:	11 96       	adiw	r26, 0x01	; 1
 5d4:	8c 91       	ld	r24, X
 5d6:	98 17       	cp	r25, r24
 5d8:	09 f4       	brne	.+2      	; 0x5dc <_fpadd_parts+0x1a2>
 5da:	45 c0       	rjmp	.+138    	; 0x666 <_fpadd_parts+0x22c>
 5dc:	99 23       	and	r25, r25
 5de:	39 f0       	breq	.+14     	; 0x5ee <_fpadd_parts+0x1b4>
 5e0:	a8 01       	movw	r20, r16
 5e2:	97 01       	movw	r18, r14
 5e4:	2a 19       	sub	r18, r10
 5e6:	3b 09       	sbc	r19, r11
 5e8:	4c 09       	sbc	r20, r12
 5ea:	5d 09       	sbc	r21, r13
 5ec:	06 c0       	rjmp	.+12     	; 0x5fa <_fpadd_parts+0x1c0>
 5ee:	a6 01       	movw	r20, r12
 5f0:	95 01       	movw	r18, r10
 5f2:	2e 19       	sub	r18, r14
 5f4:	3f 09       	sbc	r19, r15
 5f6:	40 0b       	sbc	r20, r16
 5f8:	51 0b       	sbc	r21, r17
 5fa:	57 fd       	sbrc	r21, 7
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <_fpadd_parts+0x1d4>
 5fe:	11 82       	std	Z+1, r1	; 0x01
 600:	33 82       	std	Z+3, r3	; 0x03
 602:	22 82       	std	Z+2, r2	; 0x02
 604:	24 83       	std	Z+4, r18	; 0x04
 606:	35 83       	std	Z+5, r19	; 0x05
 608:	46 83       	std	Z+6, r20	; 0x06
 60a:	57 83       	std	Z+7, r21	; 0x07
 60c:	1d c0       	rjmp	.+58     	; 0x648 <_fpadd_parts+0x20e>
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	81 83       	std	Z+1, r24	; 0x01
 612:	33 82       	std	Z+3, r3	; 0x03
 614:	22 82       	std	Z+2, r2	; 0x02
 616:	88 27       	eor	r24, r24
 618:	99 27       	eor	r25, r25
 61a:	dc 01       	movw	r26, r24
 61c:	82 1b       	sub	r24, r18
 61e:	93 0b       	sbc	r25, r19
 620:	a4 0b       	sbc	r26, r20
 622:	b5 0b       	sbc	r27, r21
 624:	84 83       	std	Z+4, r24	; 0x04
 626:	95 83       	std	Z+5, r25	; 0x05
 628:	a6 83       	std	Z+6, r26	; 0x06
 62a:	b7 83       	std	Z+7, r27	; 0x07
 62c:	0d c0       	rjmp	.+26     	; 0x648 <_fpadd_parts+0x20e>
 62e:	22 0f       	add	r18, r18
 630:	33 1f       	adc	r19, r19
 632:	44 1f       	adc	r20, r20
 634:	55 1f       	adc	r21, r21
 636:	24 83       	std	Z+4, r18	; 0x04
 638:	35 83       	std	Z+5, r19	; 0x05
 63a:	46 83       	std	Z+6, r20	; 0x06
 63c:	57 83       	std	Z+7, r21	; 0x07
 63e:	82 81       	ldd	r24, Z+2	; 0x02
 640:	93 81       	ldd	r25, Z+3	; 0x03
 642:	01 97       	sbiw	r24, 0x01	; 1
 644:	93 83       	std	Z+3, r25	; 0x03
 646:	82 83       	std	Z+2, r24	; 0x02
 648:	24 81       	ldd	r18, Z+4	; 0x04
 64a:	35 81       	ldd	r19, Z+5	; 0x05
 64c:	46 81       	ldd	r20, Z+6	; 0x06
 64e:	57 81       	ldd	r21, Z+7	; 0x07
 650:	da 01       	movw	r26, r20
 652:	c9 01       	movw	r24, r18
 654:	01 97       	sbiw	r24, 0x01	; 1
 656:	a1 09       	sbc	r26, r1
 658:	b1 09       	sbc	r27, r1
 65a:	8f 5f       	subi	r24, 0xFF	; 255
 65c:	9f 4f       	sbci	r25, 0xFF	; 255
 65e:	af 4f       	sbci	r26, 0xFF	; 255
 660:	bf 43       	sbci	r27, 0x3F	; 63
 662:	28 f3       	brcs	.-54     	; 0x62e <_fpadd_parts+0x1f4>
 664:	0b c0       	rjmp	.+22     	; 0x67c <_fpadd_parts+0x242>
 666:	91 83       	std	Z+1, r25	; 0x01
 668:	33 82       	std	Z+3, r3	; 0x03
 66a:	22 82       	std	Z+2, r2	; 0x02
 66c:	ea 0c       	add	r14, r10
 66e:	fb 1c       	adc	r15, r11
 670:	0c 1d       	adc	r16, r12
 672:	1d 1d       	adc	r17, r13
 674:	e4 82       	std	Z+4, r14	; 0x04
 676:	f5 82       	std	Z+5, r15	; 0x05
 678:	06 83       	std	Z+6, r16	; 0x06
 67a:	17 83       	std	Z+7, r17	; 0x07
 67c:	83 e0       	ldi	r24, 0x03	; 3
 67e:	80 83       	st	Z, r24
 680:	24 81       	ldd	r18, Z+4	; 0x04
 682:	35 81       	ldd	r19, Z+5	; 0x05
 684:	46 81       	ldd	r20, Z+6	; 0x06
 686:	57 81       	ldd	r21, Z+7	; 0x07
 688:	57 ff       	sbrs	r21, 7
 68a:	1a c0       	rjmp	.+52     	; 0x6c0 <_fpadd_parts+0x286>
 68c:	c9 01       	movw	r24, r18
 68e:	aa 27       	eor	r26, r26
 690:	97 fd       	sbrc	r25, 7
 692:	a0 95       	com	r26
 694:	ba 2f       	mov	r27, r26
 696:	81 70       	andi	r24, 0x01	; 1
 698:	90 70       	andi	r25, 0x00	; 0
 69a:	a0 70       	andi	r26, 0x00	; 0
 69c:	b0 70       	andi	r27, 0x00	; 0
 69e:	56 95       	lsr	r21
 6a0:	47 95       	ror	r20
 6a2:	37 95       	ror	r19
 6a4:	27 95       	ror	r18
 6a6:	82 2b       	or	r24, r18
 6a8:	93 2b       	or	r25, r19
 6aa:	a4 2b       	or	r26, r20
 6ac:	b5 2b       	or	r27, r21
 6ae:	84 83       	std	Z+4, r24	; 0x04
 6b0:	95 83       	std	Z+5, r25	; 0x05
 6b2:	a6 83       	std	Z+6, r26	; 0x06
 6b4:	b7 83       	std	Z+7, r27	; 0x07
 6b6:	82 81       	ldd	r24, Z+2	; 0x02
 6b8:	93 81       	ldd	r25, Z+3	; 0x03
 6ba:	01 96       	adiw	r24, 0x01	; 1
 6bc:	93 83       	std	Z+3, r25	; 0x03
 6be:	82 83       	std	Z+2, r24	; 0x02
 6c0:	df 01       	movw	r26, r30
 6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <_fpadd_parts+0x28c>
 6c4:	d2 01       	movw	r26, r4
 6c6:	cd 01       	movw	r24, r26
 6c8:	cd b7       	in	r28, 0x3d	; 61
 6ca:	de b7       	in	r29, 0x3e	; 62
 6cc:	e2 e1       	ldi	r30, 0x12	; 18
 6ce:	0c 94 67 07 	jmp	0xece	; 0xece <__epilogue_restores__>

000006d2 <__subsf3>:
 6d2:	a0 e2       	ldi	r26, 0x20	; 32
 6d4:	b0 e0       	ldi	r27, 0x00	; 0
 6d6:	ef e6       	ldi	r30, 0x6F	; 111
 6d8:	f3 e0       	ldi	r31, 0x03	; 3
 6da:	0c 94 57 07 	jmp	0xeae	; 0xeae <__prologue_saves__+0x18>
 6de:	69 83       	std	Y+1, r22	; 0x01
 6e0:	7a 83       	std	Y+2, r23	; 0x02
 6e2:	8b 83       	std	Y+3, r24	; 0x03
 6e4:	9c 83       	std	Y+4, r25	; 0x04
 6e6:	2d 83       	std	Y+5, r18	; 0x05
 6e8:	3e 83       	std	Y+6, r19	; 0x06
 6ea:	4f 83       	std	Y+7, r20	; 0x07
 6ec:	58 87       	std	Y+8, r21	; 0x08
 6ee:	e9 e0       	ldi	r30, 0x09	; 9
 6f0:	ee 2e       	mov	r14, r30
 6f2:	f1 2c       	mov	r15, r1
 6f4:	ec 0e       	add	r14, r28
 6f6:	fd 1e       	adc	r15, r29
 6f8:	ce 01       	movw	r24, r28
 6fa:	01 96       	adiw	r24, 0x01	; 1
 6fc:	b7 01       	movw	r22, r14
 6fe:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 702:	8e 01       	movw	r16, r28
 704:	0f 5e       	subi	r16, 0xEF	; 239
 706:	1f 4f       	sbci	r17, 0xFF	; 255
 708:	ce 01       	movw	r24, r28
 70a:	05 96       	adiw	r24, 0x05	; 5
 70c:	b8 01       	movw	r22, r16
 70e:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 712:	8a 89       	ldd	r24, Y+18	; 0x12
 714:	91 e0       	ldi	r25, 0x01	; 1
 716:	89 27       	eor	r24, r25
 718:	8a 8b       	std	Y+18, r24	; 0x12
 71a:	c7 01       	movw	r24, r14
 71c:	b8 01       	movw	r22, r16
 71e:	ae 01       	movw	r20, r28
 720:	47 5e       	subi	r20, 0xE7	; 231
 722:	5f 4f       	sbci	r21, 0xFF	; 255
 724:	0e 94 1d 02 	call	0x43a	; 0x43a <_fpadd_parts>
 728:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__pack_f>
 72c:	a0 96       	adiw	r28, 0x20	; 32
 72e:	e6 e0       	ldi	r30, 0x06	; 6
 730:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__epilogue_restores__+0x18>

00000734 <__addsf3>:
 734:	a0 e2       	ldi	r26, 0x20	; 32
 736:	b0 e0       	ldi	r27, 0x00	; 0
 738:	e0 ea       	ldi	r30, 0xA0	; 160
 73a:	f3 e0       	ldi	r31, 0x03	; 3
 73c:	0c 94 57 07 	jmp	0xeae	; 0xeae <__prologue_saves__+0x18>
 740:	69 83       	std	Y+1, r22	; 0x01
 742:	7a 83       	std	Y+2, r23	; 0x02
 744:	8b 83       	std	Y+3, r24	; 0x03
 746:	9c 83       	std	Y+4, r25	; 0x04
 748:	2d 83       	std	Y+5, r18	; 0x05
 74a:	3e 83       	std	Y+6, r19	; 0x06
 74c:	4f 83       	std	Y+7, r20	; 0x07
 74e:	58 87       	std	Y+8, r21	; 0x08
 750:	f9 e0       	ldi	r31, 0x09	; 9
 752:	ef 2e       	mov	r14, r31
 754:	f1 2c       	mov	r15, r1
 756:	ec 0e       	add	r14, r28
 758:	fd 1e       	adc	r15, r29
 75a:	ce 01       	movw	r24, r28
 75c:	01 96       	adiw	r24, 0x01	; 1
 75e:	b7 01       	movw	r22, r14
 760:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 764:	8e 01       	movw	r16, r28
 766:	0f 5e       	subi	r16, 0xEF	; 239
 768:	1f 4f       	sbci	r17, 0xFF	; 255
 76a:	ce 01       	movw	r24, r28
 76c:	05 96       	adiw	r24, 0x05	; 5
 76e:	b8 01       	movw	r22, r16
 770:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 774:	c7 01       	movw	r24, r14
 776:	b8 01       	movw	r22, r16
 778:	ae 01       	movw	r20, r28
 77a:	47 5e       	subi	r20, 0xE7	; 231
 77c:	5f 4f       	sbci	r21, 0xFF	; 255
 77e:	0e 94 1d 02 	call	0x43a	; 0x43a <_fpadd_parts>
 782:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__pack_f>
 786:	a0 96       	adiw	r28, 0x20	; 32
 788:	e6 e0       	ldi	r30, 0x06	; 6
 78a:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__epilogue_restores__+0x18>

0000078e <__mulsf3>:
 78e:	a0 e2       	ldi	r26, 0x20	; 32
 790:	b0 e0       	ldi	r27, 0x00	; 0
 792:	ed ec       	ldi	r30, 0xCD	; 205
 794:	f3 e0       	ldi	r31, 0x03	; 3
 796:	0c 94 4b 07 	jmp	0xe96	; 0xe96 <__prologue_saves__>
 79a:	69 83       	std	Y+1, r22	; 0x01
 79c:	7a 83       	std	Y+2, r23	; 0x02
 79e:	8b 83       	std	Y+3, r24	; 0x03
 7a0:	9c 83       	std	Y+4, r25	; 0x04
 7a2:	2d 83       	std	Y+5, r18	; 0x05
 7a4:	3e 83       	std	Y+6, r19	; 0x06
 7a6:	4f 83       	std	Y+7, r20	; 0x07
 7a8:	58 87       	std	Y+8, r21	; 0x08
 7aa:	ce 01       	movw	r24, r28
 7ac:	01 96       	adiw	r24, 0x01	; 1
 7ae:	be 01       	movw	r22, r28
 7b0:	67 5f       	subi	r22, 0xF7	; 247
 7b2:	7f 4f       	sbci	r23, 0xFF	; 255
 7b4:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 7b8:	ce 01       	movw	r24, r28
 7ba:	05 96       	adiw	r24, 0x05	; 5
 7bc:	be 01       	movw	r22, r28
 7be:	6f 5e       	subi	r22, 0xEF	; 239
 7c0:	7f 4f       	sbci	r23, 0xFF	; 255
 7c2:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 7c6:	99 85       	ldd	r25, Y+9	; 0x09
 7c8:	92 30       	cpi	r25, 0x02	; 2
 7ca:	88 f0       	brcs	.+34     	; 0x7ee <__mulsf3+0x60>
 7cc:	89 89       	ldd	r24, Y+17	; 0x11
 7ce:	82 30       	cpi	r24, 0x02	; 2
 7d0:	c8 f0       	brcs	.+50     	; 0x804 <__mulsf3+0x76>
 7d2:	94 30       	cpi	r25, 0x04	; 4
 7d4:	19 f4       	brne	.+6      	; 0x7dc <__mulsf3+0x4e>
 7d6:	82 30       	cpi	r24, 0x02	; 2
 7d8:	51 f4       	brne	.+20     	; 0x7ee <__mulsf3+0x60>
 7da:	04 c0       	rjmp	.+8      	; 0x7e4 <__mulsf3+0x56>
 7dc:	84 30       	cpi	r24, 0x04	; 4
 7de:	29 f4       	brne	.+10     	; 0x7ea <__mulsf3+0x5c>
 7e0:	92 30       	cpi	r25, 0x02	; 2
 7e2:	81 f4       	brne	.+32     	; 0x804 <__mulsf3+0x76>
 7e4:	80 e1       	ldi	r24, 0x10	; 16
 7e6:	91 e0       	ldi	r25, 0x01	; 1
 7e8:	c6 c0       	rjmp	.+396    	; 0x976 <__stack+0x77>
 7ea:	92 30       	cpi	r25, 0x02	; 2
 7ec:	49 f4       	brne	.+18     	; 0x800 <__mulsf3+0x72>
 7ee:	20 e0       	ldi	r18, 0x00	; 0
 7f0:	9a 85       	ldd	r25, Y+10	; 0x0a
 7f2:	8a 89       	ldd	r24, Y+18	; 0x12
 7f4:	98 13       	cpse	r25, r24
 7f6:	21 e0       	ldi	r18, 0x01	; 1
 7f8:	2a 87       	std	Y+10, r18	; 0x0a
 7fa:	ce 01       	movw	r24, r28
 7fc:	09 96       	adiw	r24, 0x09	; 9
 7fe:	bb c0       	rjmp	.+374    	; 0x976 <__stack+0x77>
 800:	82 30       	cpi	r24, 0x02	; 2
 802:	49 f4       	brne	.+18     	; 0x816 <__mulsf3+0x88>
 804:	20 e0       	ldi	r18, 0x00	; 0
 806:	9a 85       	ldd	r25, Y+10	; 0x0a
 808:	8a 89       	ldd	r24, Y+18	; 0x12
 80a:	98 13       	cpse	r25, r24
 80c:	21 e0       	ldi	r18, 0x01	; 1
 80e:	2a 8b       	std	Y+18, r18	; 0x12
 810:	ce 01       	movw	r24, r28
 812:	41 96       	adiw	r24, 0x11	; 17
 814:	b0 c0       	rjmp	.+352    	; 0x976 <__stack+0x77>
 816:	2d 84       	ldd	r2, Y+13	; 0x0d
 818:	3e 84       	ldd	r3, Y+14	; 0x0e
 81a:	4f 84       	ldd	r4, Y+15	; 0x0f
 81c:	58 88       	ldd	r5, Y+16	; 0x10
 81e:	6d 88       	ldd	r6, Y+21	; 0x15
 820:	7e 88       	ldd	r7, Y+22	; 0x16
 822:	8f 88       	ldd	r8, Y+23	; 0x17
 824:	98 8c       	ldd	r9, Y+24	; 0x18
 826:	ee 24       	eor	r14, r14
 828:	ff 24       	eor	r15, r15
 82a:	87 01       	movw	r16, r14
 82c:	aa 24       	eor	r10, r10
 82e:	bb 24       	eor	r11, r11
 830:	65 01       	movw	r12, r10
 832:	40 e0       	ldi	r20, 0x00	; 0
 834:	50 e0       	ldi	r21, 0x00	; 0
 836:	60 e0       	ldi	r22, 0x00	; 0
 838:	70 e0       	ldi	r23, 0x00	; 0
 83a:	e0 e0       	ldi	r30, 0x00	; 0
 83c:	f0 e0       	ldi	r31, 0x00	; 0
 83e:	c1 01       	movw	r24, r2
 840:	81 70       	andi	r24, 0x01	; 1
 842:	90 70       	andi	r25, 0x00	; 0
 844:	89 2b       	or	r24, r25
 846:	e9 f0       	breq	.+58     	; 0x882 <__mulsf3+0xf4>
 848:	e6 0c       	add	r14, r6
 84a:	f7 1c       	adc	r15, r7
 84c:	08 1d       	adc	r16, r8
 84e:	19 1d       	adc	r17, r9
 850:	9a 01       	movw	r18, r20
 852:	ab 01       	movw	r20, r22
 854:	2a 0d       	add	r18, r10
 856:	3b 1d       	adc	r19, r11
 858:	4c 1d       	adc	r20, r12
 85a:	5d 1d       	adc	r21, r13
 85c:	80 e0       	ldi	r24, 0x00	; 0
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	a0 e0       	ldi	r26, 0x00	; 0
 862:	b0 e0       	ldi	r27, 0x00	; 0
 864:	e6 14       	cp	r14, r6
 866:	f7 04       	cpc	r15, r7
 868:	08 05       	cpc	r16, r8
 86a:	19 05       	cpc	r17, r9
 86c:	20 f4       	brcc	.+8      	; 0x876 <__mulsf3+0xe8>
 86e:	81 e0       	ldi	r24, 0x01	; 1
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	a0 e0       	ldi	r26, 0x00	; 0
 874:	b0 e0       	ldi	r27, 0x00	; 0
 876:	ba 01       	movw	r22, r20
 878:	a9 01       	movw	r20, r18
 87a:	48 0f       	add	r20, r24
 87c:	59 1f       	adc	r21, r25
 87e:	6a 1f       	adc	r22, r26
 880:	7b 1f       	adc	r23, r27
 882:	aa 0c       	add	r10, r10
 884:	bb 1c       	adc	r11, r11
 886:	cc 1c       	adc	r12, r12
 888:	dd 1c       	adc	r13, r13
 88a:	97 fe       	sbrs	r9, 7
 88c:	08 c0       	rjmp	.+16     	; 0x89e <__mulsf3+0x110>
 88e:	81 e0       	ldi	r24, 0x01	; 1
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	a0 e0       	ldi	r26, 0x00	; 0
 894:	b0 e0       	ldi	r27, 0x00	; 0
 896:	a8 2a       	or	r10, r24
 898:	b9 2a       	or	r11, r25
 89a:	ca 2a       	or	r12, r26
 89c:	db 2a       	or	r13, r27
 89e:	31 96       	adiw	r30, 0x01	; 1
 8a0:	e0 32       	cpi	r30, 0x20	; 32
 8a2:	f1 05       	cpc	r31, r1
 8a4:	49 f0       	breq	.+18     	; 0x8b8 <__mulsf3+0x12a>
 8a6:	66 0c       	add	r6, r6
 8a8:	77 1c       	adc	r7, r7
 8aa:	88 1c       	adc	r8, r8
 8ac:	99 1c       	adc	r9, r9
 8ae:	56 94       	lsr	r5
 8b0:	47 94       	ror	r4
 8b2:	37 94       	ror	r3
 8b4:	27 94       	ror	r2
 8b6:	c3 cf       	rjmp	.-122    	; 0x83e <__mulsf3+0xb0>
 8b8:	fa 85       	ldd	r31, Y+10	; 0x0a
 8ba:	ea 89       	ldd	r30, Y+18	; 0x12
 8bc:	2b 89       	ldd	r18, Y+19	; 0x13
 8be:	3c 89       	ldd	r19, Y+20	; 0x14
 8c0:	8b 85       	ldd	r24, Y+11	; 0x0b
 8c2:	9c 85       	ldd	r25, Y+12	; 0x0c
 8c4:	28 0f       	add	r18, r24
 8c6:	39 1f       	adc	r19, r25
 8c8:	2e 5f       	subi	r18, 0xFE	; 254
 8ca:	3f 4f       	sbci	r19, 0xFF	; 255
 8cc:	17 c0       	rjmp	.+46     	; 0x8fc <__mulsf3+0x16e>
 8ce:	ca 01       	movw	r24, r20
 8d0:	81 70       	andi	r24, 0x01	; 1
 8d2:	90 70       	andi	r25, 0x00	; 0
 8d4:	89 2b       	or	r24, r25
 8d6:	61 f0       	breq	.+24     	; 0x8f0 <__mulsf3+0x162>
 8d8:	16 95       	lsr	r17
 8da:	07 95       	ror	r16
 8dc:	f7 94       	ror	r15
 8de:	e7 94       	ror	r14
 8e0:	80 e0       	ldi	r24, 0x00	; 0
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	a0 e0       	ldi	r26, 0x00	; 0
 8e6:	b0 e8       	ldi	r27, 0x80	; 128
 8e8:	e8 2a       	or	r14, r24
 8ea:	f9 2a       	or	r15, r25
 8ec:	0a 2b       	or	r16, r26
 8ee:	1b 2b       	or	r17, r27
 8f0:	76 95       	lsr	r23
 8f2:	67 95       	ror	r22
 8f4:	57 95       	ror	r21
 8f6:	47 95       	ror	r20
 8f8:	2f 5f       	subi	r18, 0xFF	; 255
 8fa:	3f 4f       	sbci	r19, 0xFF	; 255
 8fc:	77 fd       	sbrc	r23, 7
 8fe:	e7 cf       	rjmp	.-50     	; 0x8ce <__mulsf3+0x140>
 900:	0c c0       	rjmp	.+24     	; 0x91a <__stack+0x1b>
 902:	44 0f       	add	r20, r20
 904:	55 1f       	adc	r21, r21
 906:	66 1f       	adc	r22, r22
 908:	77 1f       	adc	r23, r23
 90a:	17 fd       	sbrc	r17, 7
 90c:	41 60       	ori	r20, 0x01	; 1
 90e:	ee 0c       	add	r14, r14
 910:	ff 1c       	adc	r15, r15
 912:	00 1f       	adc	r16, r16
 914:	11 1f       	adc	r17, r17
 916:	21 50       	subi	r18, 0x01	; 1
 918:	30 40       	sbci	r19, 0x00	; 0
 91a:	40 30       	cpi	r20, 0x00	; 0
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	59 07       	cpc	r21, r25
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	69 07       	cpc	r22, r25
 924:	90 e4       	ldi	r25, 0x40	; 64
 926:	79 07       	cpc	r23, r25
 928:	60 f3       	brcs	.-40     	; 0x902 <__stack+0x3>
 92a:	2b 8f       	std	Y+27, r18	; 0x1b
 92c:	3c 8f       	std	Y+28, r19	; 0x1c
 92e:	db 01       	movw	r26, r22
 930:	ca 01       	movw	r24, r20
 932:	8f 77       	andi	r24, 0x7F	; 127
 934:	90 70       	andi	r25, 0x00	; 0
 936:	a0 70       	andi	r26, 0x00	; 0
 938:	b0 70       	andi	r27, 0x00	; 0
 93a:	80 34       	cpi	r24, 0x40	; 64
 93c:	91 05       	cpc	r25, r1
 93e:	a1 05       	cpc	r26, r1
 940:	b1 05       	cpc	r27, r1
 942:	61 f4       	brne	.+24     	; 0x95c <__stack+0x5d>
 944:	47 fd       	sbrc	r20, 7
 946:	0a c0       	rjmp	.+20     	; 0x95c <__stack+0x5d>
 948:	e1 14       	cp	r14, r1
 94a:	f1 04       	cpc	r15, r1
 94c:	01 05       	cpc	r16, r1
 94e:	11 05       	cpc	r17, r1
 950:	29 f0       	breq	.+10     	; 0x95c <__stack+0x5d>
 952:	40 5c       	subi	r20, 0xC0	; 192
 954:	5f 4f       	sbci	r21, 0xFF	; 255
 956:	6f 4f       	sbci	r22, 0xFF	; 255
 958:	7f 4f       	sbci	r23, 0xFF	; 255
 95a:	40 78       	andi	r20, 0x80	; 128
 95c:	1a 8e       	std	Y+26, r1	; 0x1a
 95e:	fe 17       	cp	r31, r30
 960:	11 f0       	breq	.+4      	; 0x966 <__stack+0x67>
 962:	81 e0       	ldi	r24, 0x01	; 1
 964:	8a 8f       	std	Y+26, r24	; 0x1a
 966:	4d 8f       	std	Y+29, r20	; 0x1d
 968:	5e 8f       	std	Y+30, r21	; 0x1e
 96a:	6f 8f       	std	Y+31, r22	; 0x1f
 96c:	78 a3       	std	Y+32, r23	; 0x20
 96e:	83 e0       	ldi	r24, 0x03	; 3
 970:	89 8f       	std	Y+25, r24	; 0x19
 972:	ce 01       	movw	r24, r28
 974:	49 96       	adiw	r24, 0x19	; 25
 976:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__pack_f>
 97a:	a0 96       	adiw	r28, 0x20	; 32
 97c:	e2 e1       	ldi	r30, 0x12	; 18
 97e:	0c 94 67 07 	jmp	0xece	; 0xece <__epilogue_restores__>

00000982 <__gtsf2>:
 982:	a8 e1       	ldi	r26, 0x18	; 24
 984:	b0 e0       	ldi	r27, 0x00	; 0
 986:	e7 ec       	ldi	r30, 0xC7	; 199
 988:	f4 e0       	ldi	r31, 0x04	; 4
 98a:	0c 94 57 07 	jmp	0xeae	; 0xeae <__prologue_saves__+0x18>
 98e:	69 83       	std	Y+1, r22	; 0x01
 990:	7a 83       	std	Y+2, r23	; 0x02
 992:	8b 83       	std	Y+3, r24	; 0x03
 994:	9c 83       	std	Y+4, r25	; 0x04
 996:	2d 83       	std	Y+5, r18	; 0x05
 998:	3e 83       	std	Y+6, r19	; 0x06
 99a:	4f 83       	std	Y+7, r20	; 0x07
 99c:	58 87       	std	Y+8, r21	; 0x08
 99e:	89 e0       	ldi	r24, 0x09	; 9
 9a0:	e8 2e       	mov	r14, r24
 9a2:	f1 2c       	mov	r15, r1
 9a4:	ec 0e       	add	r14, r28
 9a6:	fd 1e       	adc	r15, r29
 9a8:	ce 01       	movw	r24, r28
 9aa:	01 96       	adiw	r24, 0x01	; 1
 9ac:	b7 01       	movw	r22, r14
 9ae:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 9b2:	8e 01       	movw	r16, r28
 9b4:	0f 5e       	subi	r16, 0xEF	; 239
 9b6:	1f 4f       	sbci	r17, 0xFF	; 255
 9b8:	ce 01       	movw	r24, r28
 9ba:	05 96       	adiw	r24, 0x05	; 5
 9bc:	b8 01       	movw	r22, r16
 9be:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 9c2:	89 85       	ldd	r24, Y+9	; 0x09
 9c4:	82 30       	cpi	r24, 0x02	; 2
 9c6:	40 f0       	brcs	.+16     	; 0x9d8 <__gtsf2+0x56>
 9c8:	89 89       	ldd	r24, Y+17	; 0x11
 9ca:	82 30       	cpi	r24, 0x02	; 2
 9cc:	28 f0       	brcs	.+10     	; 0x9d8 <__gtsf2+0x56>
 9ce:	c7 01       	movw	r24, r14
 9d0:	b8 01       	movw	r22, r16
 9d2:	0e 94 f2 06 	call	0xde4	; 0xde4 <__fpcmp_parts_f>
 9d6:	01 c0       	rjmp	.+2      	; 0x9da <__gtsf2+0x58>
 9d8:	8f ef       	ldi	r24, 0xFF	; 255
 9da:	68 96       	adiw	r28, 0x18	; 24
 9dc:	e6 e0       	ldi	r30, 0x06	; 6
 9de:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__epilogue_restores__+0x18>

000009e2 <__gesf2>:
 9e2:	a8 e1       	ldi	r26, 0x18	; 24
 9e4:	b0 e0       	ldi	r27, 0x00	; 0
 9e6:	e7 ef       	ldi	r30, 0xF7	; 247
 9e8:	f4 e0       	ldi	r31, 0x04	; 4
 9ea:	0c 94 57 07 	jmp	0xeae	; 0xeae <__prologue_saves__+0x18>
 9ee:	69 83       	std	Y+1, r22	; 0x01
 9f0:	7a 83       	std	Y+2, r23	; 0x02
 9f2:	8b 83       	std	Y+3, r24	; 0x03
 9f4:	9c 83       	std	Y+4, r25	; 0x04
 9f6:	2d 83       	std	Y+5, r18	; 0x05
 9f8:	3e 83       	std	Y+6, r19	; 0x06
 9fa:	4f 83       	std	Y+7, r20	; 0x07
 9fc:	58 87       	std	Y+8, r21	; 0x08
 9fe:	89 e0       	ldi	r24, 0x09	; 9
 a00:	e8 2e       	mov	r14, r24
 a02:	f1 2c       	mov	r15, r1
 a04:	ec 0e       	add	r14, r28
 a06:	fd 1e       	adc	r15, r29
 a08:	ce 01       	movw	r24, r28
 a0a:	01 96       	adiw	r24, 0x01	; 1
 a0c:	b7 01       	movw	r22, r14
 a0e:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 a12:	8e 01       	movw	r16, r28
 a14:	0f 5e       	subi	r16, 0xEF	; 239
 a16:	1f 4f       	sbci	r17, 0xFF	; 255
 a18:	ce 01       	movw	r24, r28
 a1a:	05 96       	adiw	r24, 0x05	; 5
 a1c:	b8 01       	movw	r22, r16
 a1e:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 a22:	89 85       	ldd	r24, Y+9	; 0x09
 a24:	82 30       	cpi	r24, 0x02	; 2
 a26:	40 f0       	brcs	.+16     	; 0xa38 <__gesf2+0x56>
 a28:	89 89       	ldd	r24, Y+17	; 0x11
 a2a:	82 30       	cpi	r24, 0x02	; 2
 a2c:	28 f0       	brcs	.+10     	; 0xa38 <__gesf2+0x56>
 a2e:	c7 01       	movw	r24, r14
 a30:	b8 01       	movw	r22, r16
 a32:	0e 94 f2 06 	call	0xde4	; 0xde4 <__fpcmp_parts_f>
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <__gesf2+0x58>
 a38:	8f ef       	ldi	r24, 0xFF	; 255
 a3a:	68 96       	adiw	r28, 0x18	; 24
 a3c:	e6 e0       	ldi	r30, 0x06	; 6
 a3e:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__epilogue_restores__+0x18>

00000a42 <__ltsf2>:
 a42:	a8 e1       	ldi	r26, 0x18	; 24
 a44:	b0 e0       	ldi	r27, 0x00	; 0
 a46:	e7 e2       	ldi	r30, 0x27	; 39
 a48:	f5 e0       	ldi	r31, 0x05	; 5
 a4a:	0c 94 57 07 	jmp	0xeae	; 0xeae <__prologue_saves__+0x18>
 a4e:	69 83       	std	Y+1, r22	; 0x01
 a50:	7a 83       	std	Y+2, r23	; 0x02
 a52:	8b 83       	std	Y+3, r24	; 0x03
 a54:	9c 83       	std	Y+4, r25	; 0x04
 a56:	2d 83       	std	Y+5, r18	; 0x05
 a58:	3e 83       	std	Y+6, r19	; 0x06
 a5a:	4f 83       	std	Y+7, r20	; 0x07
 a5c:	58 87       	std	Y+8, r21	; 0x08
 a5e:	89 e0       	ldi	r24, 0x09	; 9
 a60:	e8 2e       	mov	r14, r24
 a62:	f1 2c       	mov	r15, r1
 a64:	ec 0e       	add	r14, r28
 a66:	fd 1e       	adc	r15, r29
 a68:	ce 01       	movw	r24, r28
 a6a:	01 96       	adiw	r24, 0x01	; 1
 a6c:	b7 01       	movw	r22, r14
 a6e:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 a72:	8e 01       	movw	r16, r28
 a74:	0f 5e       	subi	r16, 0xEF	; 239
 a76:	1f 4f       	sbci	r17, 0xFF	; 255
 a78:	ce 01       	movw	r24, r28
 a7a:	05 96       	adiw	r24, 0x05	; 5
 a7c:	b8 01       	movw	r22, r16
 a7e:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 a82:	89 85       	ldd	r24, Y+9	; 0x09
 a84:	82 30       	cpi	r24, 0x02	; 2
 a86:	40 f0       	brcs	.+16     	; 0xa98 <__ltsf2+0x56>
 a88:	89 89       	ldd	r24, Y+17	; 0x11
 a8a:	82 30       	cpi	r24, 0x02	; 2
 a8c:	28 f0       	brcs	.+10     	; 0xa98 <__ltsf2+0x56>
 a8e:	c7 01       	movw	r24, r14
 a90:	b8 01       	movw	r22, r16
 a92:	0e 94 f2 06 	call	0xde4	; 0xde4 <__fpcmp_parts_f>
 a96:	01 c0       	rjmp	.+2      	; 0xa9a <__ltsf2+0x58>
 a98:	81 e0       	ldi	r24, 0x01	; 1
 a9a:	68 96       	adiw	r28, 0x18	; 24
 a9c:	e6 e0       	ldi	r30, 0x06	; 6
 a9e:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__epilogue_restores__+0x18>

00000aa2 <__fixsfsi>:
 aa2:	ac e0       	ldi	r26, 0x0C	; 12
 aa4:	b0 e0       	ldi	r27, 0x00	; 0
 aa6:	e7 e5       	ldi	r30, 0x57	; 87
 aa8:	f5 e0       	ldi	r31, 0x05	; 5
 aaa:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__prologue_saves__+0x20>
 aae:	69 83       	std	Y+1, r22	; 0x01
 ab0:	7a 83       	std	Y+2, r23	; 0x02
 ab2:	8b 83       	std	Y+3, r24	; 0x03
 ab4:	9c 83       	std	Y+4, r25	; 0x04
 ab6:	ce 01       	movw	r24, r28
 ab8:	01 96       	adiw	r24, 0x01	; 1
 aba:	be 01       	movw	r22, r28
 abc:	6b 5f       	subi	r22, 0xFB	; 251
 abe:	7f 4f       	sbci	r23, 0xFF	; 255
 ac0:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__unpack_f>
 ac4:	8d 81       	ldd	r24, Y+5	; 0x05
 ac6:	82 30       	cpi	r24, 0x02	; 2
 ac8:	61 f1       	breq	.+88     	; 0xb22 <__fixsfsi+0x80>
 aca:	82 30       	cpi	r24, 0x02	; 2
 acc:	50 f1       	brcs	.+84     	; 0xb22 <__fixsfsi+0x80>
 ace:	84 30       	cpi	r24, 0x04	; 4
 ad0:	21 f4       	brne	.+8      	; 0xada <__fixsfsi+0x38>
 ad2:	8e 81       	ldd	r24, Y+6	; 0x06
 ad4:	88 23       	and	r24, r24
 ad6:	51 f1       	breq	.+84     	; 0xb2c <__fixsfsi+0x8a>
 ad8:	2e c0       	rjmp	.+92     	; 0xb36 <__fixsfsi+0x94>
 ada:	2f 81       	ldd	r18, Y+7	; 0x07
 adc:	38 85       	ldd	r19, Y+8	; 0x08
 ade:	37 fd       	sbrc	r19, 7
 ae0:	20 c0       	rjmp	.+64     	; 0xb22 <__fixsfsi+0x80>
 ae2:	6e 81       	ldd	r22, Y+6	; 0x06
 ae4:	2f 31       	cpi	r18, 0x1F	; 31
 ae6:	31 05       	cpc	r19, r1
 ae8:	1c f0       	brlt	.+6      	; 0xaf0 <__fixsfsi+0x4e>
 aea:	66 23       	and	r22, r22
 aec:	f9 f0       	breq	.+62     	; 0xb2c <__fixsfsi+0x8a>
 aee:	23 c0       	rjmp	.+70     	; 0xb36 <__fixsfsi+0x94>
 af0:	8e e1       	ldi	r24, 0x1E	; 30
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	82 1b       	sub	r24, r18
 af6:	93 0b       	sbc	r25, r19
 af8:	29 85       	ldd	r18, Y+9	; 0x09
 afa:	3a 85       	ldd	r19, Y+10	; 0x0a
 afc:	4b 85       	ldd	r20, Y+11	; 0x0b
 afe:	5c 85       	ldd	r21, Y+12	; 0x0c
 b00:	04 c0       	rjmp	.+8      	; 0xb0a <__fixsfsi+0x68>
 b02:	56 95       	lsr	r21
 b04:	47 95       	ror	r20
 b06:	37 95       	ror	r19
 b08:	27 95       	ror	r18
 b0a:	8a 95       	dec	r24
 b0c:	d2 f7       	brpl	.-12     	; 0xb02 <__fixsfsi+0x60>
 b0e:	66 23       	and	r22, r22
 b10:	b1 f0       	breq	.+44     	; 0xb3e <__fixsfsi+0x9c>
 b12:	50 95       	com	r21
 b14:	40 95       	com	r20
 b16:	30 95       	com	r19
 b18:	21 95       	neg	r18
 b1a:	3f 4f       	sbci	r19, 0xFF	; 255
 b1c:	4f 4f       	sbci	r20, 0xFF	; 255
 b1e:	5f 4f       	sbci	r21, 0xFF	; 255
 b20:	0e c0       	rjmp	.+28     	; 0xb3e <__fixsfsi+0x9c>
 b22:	20 e0       	ldi	r18, 0x00	; 0
 b24:	30 e0       	ldi	r19, 0x00	; 0
 b26:	40 e0       	ldi	r20, 0x00	; 0
 b28:	50 e0       	ldi	r21, 0x00	; 0
 b2a:	09 c0       	rjmp	.+18     	; 0xb3e <__fixsfsi+0x9c>
 b2c:	2f ef       	ldi	r18, 0xFF	; 255
 b2e:	3f ef       	ldi	r19, 0xFF	; 255
 b30:	4f ef       	ldi	r20, 0xFF	; 255
 b32:	5f e7       	ldi	r21, 0x7F	; 127
 b34:	04 c0       	rjmp	.+8      	; 0xb3e <__fixsfsi+0x9c>
 b36:	20 e0       	ldi	r18, 0x00	; 0
 b38:	30 e0       	ldi	r19, 0x00	; 0
 b3a:	40 e0       	ldi	r20, 0x00	; 0
 b3c:	50 e8       	ldi	r21, 0x80	; 128
 b3e:	b9 01       	movw	r22, r18
 b40:	ca 01       	movw	r24, r20
 b42:	2c 96       	adiw	r28, 0x0c	; 12
 b44:	e2 e0       	ldi	r30, 0x02	; 2
 b46:	0c 94 77 07 	jmp	0xeee	; 0xeee <__epilogue_restores__+0x20>

00000b4a <__pack_f>:
 b4a:	df 92       	push	r13
 b4c:	ef 92       	push	r14
 b4e:	ff 92       	push	r15
 b50:	0f 93       	push	r16
 b52:	1f 93       	push	r17
 b54:	fc 01       	movw	r30, r24
 b56:	e4 80       	ldd	r14, Z+4	; 0x04
 b58:	f5 80       	ldd	r15, Z+5	; 0x05
 b5a:	06 81       	ldd	r16, Z+6	; 0x06
 b5c:	17 81       	ldd	r17, Z+7	; 0x07
 b5e:	d1 80       	ldd	r13, Z+1	; 0x01
 b60:	80 81       	ld	r24, Z
 b62:	82 30       	cpi	r24, 0x02	; 2
 b64:	48 f4       	brcc	.+18     	; 0xb78 <__pack_f+0x2e>
 b66:	80 e0       	ldi	r24, 0x00	; 0
 b68:	90 e0       	ldi	r25, 0x00	; 0
 b6a:	a0 e1       	ldi	r26, 0x10	; 16
 b6c:	b0 e0       	ldi	r27, 0x00	; 0
 b6e:	e8 2a       	or	r14, r24
 b70:	f9 2a       	or	r15, r25
 b72:	0a 2b       	or	r16, r26
 b74:	1b 2b       	or	r17, r27
 b76:	a5 c0       	rjmp	.+330    	; 0xcc2 <__pack_f+0x178>
 b78:	84 30       	cpi	r24, 0x04	; 4
 b7a:	09 f4       	brne	.+2      	; 0xb7e <__pack_f+0x34>
 b7c:	9f c0       	rjmp	.+318    	; 0xcbc <__pack_f+0x172>
 b7e:	82 30       	cpi	r24, 0x02	; 2
 b80:	21 f4       	brne	.+8      	; 0xb8a <__pack_f+0x40>
 b82:	ee 24       	eor	r14, r14
 b84:	ff 24       	eor	r15, r15
 b86:	87 01       	movw	r16, r14
 b88:	05 c0       	rjmp	.+10     	; 0xb94 <__pack_f+0x4a>
 b8a:	e1 14       	cp	r14, r1
 b8c:	f1 04       	cpc	r15, r1
 b8e:	01 05       	cpc	r16, r1
 b90:	11 05       	cpc	r17, r1
 b92:	19 f4       	brne	.+6      	; 0xb9a <__pack_f+0x50>
 b94:	e0 e0       	ldi	r30, 0x00	; 0
 b96:	f0 e0       	ldi	r31, 0x00	; 0
 b98:	96 c0       	rjmp	.+300    	; 0xcc6 <__pack_f+0x17c>
 b9a:	62 81       	ldd	r22, Z+2	; 0x02
 b9c:	73 81       	ldd	r23, Z+3	; 0x03
 b9e:	9f ef       	ldi	r25, 0xFF	; 255
 ba0:	62 38       	cpi	r22, 0x82	; 130
 ba2:	79 07       	cpc	r23, r25
 ba4:	0c f0       	brlt	.+2      	; 0xba8 <__pack_f+0x5e>
 ba6:	5b c0       	rjmp	.+182    	; 0xc5e <__pack_f+0x114>
 ba8:	22 e8       	ldi	r18, 0x82	; 130
 baa:	3f ef       	ldi	r19, 0xFF	; 255
 bac:	26 1b       	sub	r18, r22
 bae:	37 0b       	sbc	r19, r23
 bb0:	2a 31       	cpi	r18, 0x1A	; 26
 bb2:	31 05       	cpc	r19, r1
 bb4:	2c f0       	brlt	.+10     	; 0xbc0 <__pack_f+0x76>
 bb6:	20 e0       	ldi	r18, 0x00	; 0
 bb8:	30 e0       	ldi	r19, 0x00	; 0
 bba:	40 e0       	ldi	r20, 0x00	; 0
 bbc:	50 e0       	ldi	r21, 0x00	; 0
 bbe:	2a c0       	rjmp	.+84     	; 0xc14 <__pack_f+0xca>
 bc0:	b8 01       	movw	r22, r16
 bc2:	a7 01       	movw	r20, r14
 bc4:	02 2e       	mov	r0, r18
 bc6:	04 c0       	rjmp	.+8      	; 0xbd0 <__pack_f+0x86>
 bc8:	76 95       	lsr	r23
 bca:	67 95       	ror	r22
 bcc:	57 95       	ror	r21
 bce:	47 95       	ror	r20
 bd0:	0a 94       	dec	r0
 bd2:	d2 f7       	brpl	.-12     	; 0xbc8 <__pack_f+0x7e>
 bd4:	81 e0       	ldi	r24, 0x01	; 1
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	a0 e0       	ldi	r26, 0x00	; 0
 bda:	b0 e0       	ldi	r27, 0x00	; 0
 bdc:	04 c0       	rjmp	.+8      	; 0xbe6 <__pack_f+0x9c>
 bde:	88 0f       	add	r24, r24
 be0:	99 1f       	adc	r25, r25
 be2:	aa 1f       	adc	r26, r26
 be4:	bb 1f       	adc	r27, r27
 be6:	2a 95       	dec	r18
 be8:	d2 f7       	brpl	.-12     	; 0xbde <__pack_f+0x94>
 bea:	01 97       	sbiw	r24, 0x01	; 1
 bec:	a1 09       	sbc	r26, r1
 bee:	b1 09       	sbc	r27, r1
 bf0:	8e 21       	and	r24, r14
 bf2:	9f 21       	and	r25, r15
 bf4:	a0 23       	and	r26, r16
 bf6:	b1 23       	and	r27, r17
 bf8:	00 97       	sbiw	r24, 0x00	; 0
 bfa:	a1 05       	cpc	r26, r1
 bfc:	b1 05       	cpc	r27, r1
 bfe:	21 f0       	breq	.+8      	; 0xc08 <__pack_f+0xbe>
 c00:	81 e0       	ldi	r24, 0x01	; 1
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	a0 e0       	ldi	r26, 0x00	; 0
 c06:	b0 e0       	ldi	r27, 0x00	; 0
 c08:	9a 01       	movw	r18, r20
 c0a:	ab 01       	movw	r20, r22
 c0c:	28 2b       	or	r18, r24
 c0e:	39 2b       	or	r19, r25
 c10:	4a 2b       	or	r20, r26
 c12:	5b 2b       	or	r21, r27
 c14:	da 01       	movw	r26, r20
 c16:	c9 01       	movw	r24, r18
 c18:	8f 77       	andi	r24, 0x7F	; 127
 c1a:	90 70       	andi	r25, 0x00	; 0
 c1c:	a0 70       	andi	r26, 0x00	; 0
 c1e:	b0 70       	andi	r27, 0x00	; 0
 c20:	80 34       	cpi	r24, 0x40	; 64
 c22:	91 05       	cpc	r25, r1
 c24:	a1 05       	cpc	r26, r1
 c26:	b1 05       	cpc	r27, r1
 c28:	39 f4       	brne	.+14     	; 0xc38 <__pack_f+0xee>
 c2a:	27 ff       	sbrs	r18, 7
 c2c:	09 c0       	rjmp	.+18     	; 0xc40 <__pack_f+0xf6>
 c2e:	20 5c       	subi	r18, 0xC0	; 192
 c30:	3f 4f       	sbci	r19, 0xFF	; 255
 c32:	4f 4f       	sbci	r20, 0xFF	; 255
 c34:	5f 4f       	sbci	r21, 0xFF	; 255
 c36:	04 c0       	rjmp	.+8      	; 0xc40 <__pack_f+0xf6>
 c38:	21 5c       	subi	r18, 0xC1	; 193
 c3a:	3f 4f       	sbci	r19, 0xFF	; 255
 c3c:	4f 4f       	sbci	r20, 0xFF	; 255
 c3e:	5f 4f       	sbci	r21, 0xFF	; 255
 c40:	e0 e0       	ldi	r30, 0x00	; 0
 c42:	f0 e0       	ldi	r31, 0x00	; 0
 c44:	20 30       	cpi	r18, 0x00	; 0
 c46:	a0 e0       	ldi	r26, 0x00	; 0
 c48:	3a 07       	cpc	r19, r26
 c4a:	a0 e0       	ldi	r26, 0x00	; 0
 c4c:	4a 07       	cpc	r20, r26
 c4e:	a0 e4       	ldi	r26, 0x40	; 64
 c50:	5a 07       	cpc	r21, r26
 c52:	10 f0       	brcs	.+4      	; 0xc58 <__pack_f+0x10e>
 c54:	e1 e0       	ldi	r30, 0x01	; 1
 c56:	f0 e0       	ldi	r31, 0x00	; 0
 c58:	79 01       	movw	r14, r18
 c5a:	8a 01       	movw	r16, r20
 c5c:	27 c0       	rjmp	.+78     	; 0xcac <__pack_f+0x162>
 c5e:	60 38       	cpi	r22, 0x80	; 128
 c60:	71 05       	cpc	r23, r1
 c62:	64 f5       	brge	.+88     	; 0xcbc <__pack_f+0x172>
 c64:	fb 01       	movw	r30, r22
 c66:	e1 58       	subi	r30, 0x81	; 129
 c68:	ff 4f       	sbci	r31, 0xFF	; 255
 c6a:	d8 01       	movw	r26, r16
 c6c:	c7 01       	movw	r24, r14
 c6e:	8f 77       	andi	r24, 0x7F	; 127
 c70:	90 70       	andi	r25, 0x00	; 0
 c72:	a0 70       	andi	r26, 0x00	; 0
 c74:	b0 70       	andi	r27, 0x00	; 0
 c76:	80 34       	cpi	r24, 0x40	; 64
 c78:	91 05       	cpc	r25, r1
 c7a:	a1 05       	cpc	r26, r1
 c7c:	b1 05       	cpc	r27, r1
 c7e:	39 f4       	brne	.+14     	; 0xc8e <__pack_f+0x144>
 c80:	e7 fe       	sbrs	r14, 7
 c82:	0d c0       	rjmp	.+26     	; 0xc9e <__pack_f+0x154>
 c84:	80 e4       	ldi	r24, 0x40	; 64
 c86:	90 e0       	ldi	r25, 0x00	; 0
 c88:	a0 e0       	ldi	r26, 0x00	; 0
 c8a:	b0 e0       	ldi	r27, 0x00	; 0
 c8c:	04 c0       	rjmp	.+8      	; 0xc96 <__pack_f+0x14c>
 c8e:	8f e3       	ldi	r24, 0x3F	; 63
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	a0 e0       	ldi	r26, 0x00	; 0
 c94:	b0 e0       	ldi	r27, 0x00	; 0
 c96:	e8 0e       	add	r14, r24
 c98:	f9 1e       	adc	r15, r25
 c9a:	0a 1f       	adc	r16, r26
 c9c:	1b 1f       	adc	r17, r27
 c9e:	17 ff       	sbrs	r17, 7
 ca0:	05 c0       	rjmp	.+10     	; 0xcac <__pack_f+0x162>
 ca2:	16 95       	lsr	r17
 ca4:	07 95       	ror	r16
 ca6:	f7 94       	ror	r15
 ca8:	e7 94       	ror	r14
 caa:	31 96       	adiw	r30, 0x01	; 1
 cac:	87 e0       	ldi	r24, 0x07	; 7
 cae:	16 95       	lsr	r17
 cb0:	07 95       	ror	r16
 cb2:	f7 94       	ror	r15
 cb4:	e7 94       	ror	r14
 cb6:	8a 95       	dec	r24
 cb8:	d1 f7       	brne	.-12     	; 0xcae <__pack_f+0x164>
 cba:	05 c0       	rjmp	.+10     	; 0xcc6 <__pack_f+0x17c>
 cbc:	ee 24       	eor	r14, r14
 cbe:	ff 24       	eor	r15, r15
 cc0:	87 01       	movw	r16, r14
 cc2:	ef ef       	ldi	r30, 0xFF	; 255
 cc4:	f0 e0       	ldi	r31, 0x00	; 0
 cc6:	6e 2f       	mov	r22, r30
 cc8:	67 95       	ror	r22
 cca:	66 27       	eor	r22, r22
 ccc:	67 95       	ror	r22
 cce:	90 2f       	mov	r25, r16
 cd0:	9f 77       	andi	r25, 0x7F	; 127
 cd2:	d7 94       	ror	r13
 cd4:	dd 24       	eor	r13, r13
 cd6:	d7 94       	ror	r13
 cd8:	8e 2f       	mov	r24, r30
 cda:	86 95       	lsr	r24
 cdc:	49 2f       	mov	r20, r25
 cde:	46 2b       	or	r20, r22
 ce0:	58 2f       	mov	r21, r24
 ce2:	5d 29       	or	r21, r13
 ce4:	b7 01       	movw	r22, r14
 ce6:	ca 01       	movw	r24, r20
 ce8:	1f 91       	pop	r17
 cea:	0f 91       	pop	r16
 cec:	ff 90       	pop	r15
 cee:	ef 90       	pop	r14
 cf0:	df 90       	pop	r13
 cf2:	08 95       	ret

00000cf4 <__unpack_f>:
 cf4:	fc 01       	movw	r30, r24
 cf6:	db 01       	movw	r26, r22
 cf8:	40 81       	ld	r20, Z
 cfa:	51 81       	ldd	r21, Z+1	; 0x01
 cfc:	22 81       	ldd	r18, Z+2	; 0x02
 cfe:	62 2f       	mov	r22, r18
 d00:	6f 77       	andi	r22, 0x7F	; 127
 d02:	70 e0       	ldi	r23, 0x00	; 0
 d04:	22 1f       	adc	r18, r18
 d06:	22 27       	eor	r18, r18
 d08:	22 1f       	adc	r18, r18
 d0a:	93 81       	ldd	r25, Z+3	; 0x03
 d0c:	89 2f       	mov	r24, r25
 d0e:	88 0f       	add	r24, r24
 d10:	82 2b       	or	r24, r18
 d12:	28 2f       	mov	r18, r24
 d14:	30 e0       	ldi	r19, 0x00	; 0
 d16:	99 1f       	adc	r25, r25
 d18:	99 27       	eor	r25, r25
 d1a:	99 1f       	adc	r25, r25
 d1c:	11 96       	adiw	r26, 0x01	; 1
 d1e:	9c 93       	st	X, r25
 d20:	11 97       	sbiw	r26, 0x01	; 1
 d22:	21 15       	cp	r18, r1
 d24:	31 05       	cpc	r19, r1
 d26:	a9 f5       	brne	.+106    	; 0xd92 <__unpack_f+0x9e>
 d28:	41 15       	cp	r20, r1
 d2a:	51 05       	cpc	r21, r1
 d2c:	61 05       	cpc	r22, r1
 d2e:	71 05       	cpc	r23, r1
 d30:	11 f4       	brne	.+4      	; 0xd36 <__unpack_f+0x42>
 d32:	82 e0       	ldi	r24, 0x02	; 2
 d34:	37 c0       	rjmp	.+110    	; 0xda4 <__unpack_f+0xb0>
 d36:	82 e8       	ldi	r24, 0x82	; 130
 d38:	9f ef       	ldi	r25, 0xFF	; 255
 d3a:	13 96       	adiw	r26, 0x03	; 3
 d3c:	9c 93       	st	X, r25
 d3e:	8e 93       	st	-X, r24
 d40:	12 97       	sbiw	r26, 0x02	; 2
 d42:	9a 01       	movw	r18, r20
 d44:	ab 01       	movw	r20, r22
 d46:	67 e0       	ldi	r22, 0x07	; 7
 d48:	22 0f       	add	r18, r18
 d4a:	33 1f       	adc	r19, r19
 d4c:	44 1f       	adc	r20, r20
 d4e:	55 1f       	adc	r21, r21
 d50:	6a 95       	dec	r22
 d52:	d1 f7       	brne	.-12     	; 0xd48 <__unpack_f+0x54>
 d54:	83 e0       	ldi	r24, 0x03	; 3
 d56:	8c 93       	st	X, r24
 d58:	0d c0       	rjmp	.+26     	; 0xd74 <__unpack_f+0x80>
 d5a:	22 0f       	add	r18, r18
 d5c:	33 1f       	adc	r19, r19
 d5e:	44 1f       	adc	r20, r20
 d60:	55 1f       	adc	r21, r21
 d62:	12 96       	adiw	r26, 0x02	; 2
 d64:	8d 91       	ld	r24, X+
 d66:	9c 91       	ld	r25, X
 d68:	13 97       	sbiw	r26, 0x03	; 3
 d6a:	01 97       	sbiw	r24, 0x01	; 1
 d6c:	13 96       	adiw	r26, 0x03	; 3
 d6e:	9c 93       	st	X, r25
 d70:	8e 93       	st	-X, r24
 d72:	12 97       	sbiw	r26, 0x02	; 2
 d74:	20 30       	cpi	r18, 0x00	; 0
 d76:	80 e0       	ldi	r24, 0x00	; 0
 d78:	38 07       	cpc	r19, r24
 d7a:	80 e0       	ldi	r24, 0x00	; 0
 d7c:	48 07       	cpc	r20, r24
 d7e:	80 e4       	ldi	r24, 0x40	; 64
 d80:	58 07       	cpc	r21, r24
 d82:	58 f3       	brcs	.-42     	; 0xd5a <__unpack_f+0x66>
 d84:	14 96       	adiw	r26, 0x04	; 4
 d86:	2d 93       	st	X+, r18
 d88:	3d 93       	st	X+, r19
 d8a:	4d 93       	st	X+, r20
 d8c:	5c 93       	st	X, r21
 d8e:	17 97       	sbiw	r26, 0x07	; 7
 d90:	08 95       	ret
 d92:	2f 3f       	cpi	r18, 0xFF	; 255
 d94:	31 05       	cpc	r19, r1
 d96:	79 f4       	brne	.+30     	; 0xdb6 <__unpack_f+0xc2>
 d98:	41 15       	cp	r20, r1
 d9a:	51 05       	cpc	r21, r1
 d9c:	61 05       	cpc	r22, r1
 d9e:	71 05       	cpc	r23, r1
 da0:	19 f4       	brne	.+6      	; 0xda8 <__unpack_f+0xb4>
 da2:	84 e0       	ldi	r24, 0x04	; 4
 da4:	8c 93       	st	X, r24
 da6:	08 95       	ret
 da8:	64 ff       	sbrs	r22, 4
 daa:	03 c0       	rjmp	.+6      	; 0xdb2 <__unpack_f+0xbe>
 dac:	81 e0       	ldi	r24, 0x01	; 1
 dae:	8c 93       	st	X, r24
 db0:	12 c0       	rjmp	.+36     	; 0xdd6 <__unpack_f+0xe2>
 db2:	1c 92       	st	X, r1
 db4:	10 c0       	rjmp	.+32     	; 0xdd6 <__unpack_f+0xe2>
 db6:	2f 57       	subi	r18, 0x7F	; 127
 db8:	30 40       	sbci	r19, 0x00	; 0
 dba:	13 96       	adiw	r26, 0x03	; 3
 dbc:	3c 93       	st	X, r19
 dbe:	2e 93       	st	-X, r18
 dc0:	12 97       	sbiw	r26, 0x02	; 2
 dc2:	83 e0       	ldi	r24, 0x03	; 3
 dc4:	8c 93       	st	X, r24
 dc6:	87 e0       	ldi	r24, 0x07	; 7
 dc8:	44 0f       	add	r20, r20
 dca:	55 1f       	adc	r21, r21
 dcc:	66 1f       	adc	r22, r22
 dce:	77 1f       	adc	r23, r23
 dd0:	8a 95       	dec	r24
 dd2:	d1 f7       	brne	.-12     	; 0xdc8 <__unpack_f+0xd4>
 dd4:	70 64       	ori	r23, 0x40	; 64
 dd6:	14 96       	adiw	r26, 0x04	; 4
 dd8:	4d 93       	st	X+, r20
 dda:	5d 93       	st	X+, r21
 ddc:	6d 93       	st	X+, r22
 dde:	7c 93       	st	X, r23
 de0:	17 97       	sbiw	r26, 0x07	; 7
 de2:	08 95       	ret

00000de4 <__fpcmp_parts_f>:
 de4:	1f 93       	push	r17
 de6:	dc 01       	movw	r26, r24
 de8:	fb 01       	movw	r30, r22
 dea:	9c 91       	ld	r25, X
 dec:	92 30       	cpi	r25, 0x02	; 2
 dee:	08 f4       	brcc	.+2      	; 0xdf2 <__fpcmp_parts_f+0xe>
 df0:	47 c0       	rjmp	.+142    	; 0xe80 <__fpcmp_parts_f+0x9c>
 df2:	80 81       	ld	r24, Z
 df4:	82 30       	cpi	r24, 0x02	; 2
 df6:	08 f4       	brcc	.+2      	; 0xdfa <__fpcmp_parts_f+0x16>
 df8:	43 c0       	rjmp	.+134    	; 0xe80 <__fpcmp_parts_f+0x9c>
 dfa:	94 30       	cpi	r25, 0x04	; 4
 dfc:	51 f4       	brne	.+20     	; 0xe12 <__fpcmp_parts_f+0x2e>
 dfe:	11 96       	adiw	r26, 0x01	; 1
 e00:	1c 91       	ld	r17, X
 e02:	84 30       	cpi	r24, 0x04	; 4
 e04:	99 f5       	brne	.+102    	; 0xe6c <__fpcmp_parts_f+0x88>
 e06:	81 81       	ldd	r24, Z+1	; 0x01
 e08:	68 2f       	mov	r22, r24
 e0a:	70 e0       	ldi	r23, 0x00	; 0
 e0c:	61 1b       	sub	r22, r17
 e0e:	71 09       	sbc	r23, r1
 e10:	3f c0       	rjmp	.+126    	; 0xe90 <__fpcmp_parts_f+0xac>
 e12:	84 30       	cpi	r24, 0x04	; 4
 e14:	21 f0       	breq	.+8      	; 0xe1e <__fpcmp_parts_f+0x3a>
 e16:	92 30       	cpi	r25, 0x02	; 2
 e18:	31 f4       	brne	.+12     	; 0xe26 <__fpcmp_parts_f+0x42>
 e1a:	82 30       	cpi	r24, 0x02	; 2
 e1c:	b9 f1       	breq	.+110    	; 0xe8c <__fpcmp_parts_f+0xa8>
 e1e:	81 81       	ldd	r24, Z+1	; 0x01
 e20:	88 23       	and	r24, r24
 e22:	89 f1       	breq	.+98     	; 0xe86 <__fpcmp_parts_f+0xa2>
 e24:	2d c0       	rjmp	.+90     	; 0xe80 <__fpcmp_parts_f+0x9c>
 e26:	11 96       	adiw	r26, 0x01	; 1
 e28:	1c 91       	ld	r17, X
 e2a:	11 97       	sbiw	r26, 0x01	; 1
 e2c:	82 30       	cpi	r24, 0x02	; 2
 e2e:	f1 f0       	breq	.+60     	; 0xe6c <__fpcmp_parts_f+0x88>
 e30:	81 81       	ldd	r24, Z+1	; 0x01
 e32:	18 17       	cp	r17, r24
 e34:	d9 f4       	brne	.+54     	; 0xe6c <__fpcmp_parts_f+0x88>
 e36:	12 96       	adiw	r26, 0x02	; 2
 e38:	2d 91       	ld	r18, X+
 e3a:	3c 91       	ld	r19, X
 e3c:	13 97       	sbiw	r26, 0x03	; 3
 e3e:	82 81       	ldd	r24, Z+2	; 0x02
 e40:	93 81       	ldd	r25, Z+3	; 0x03
 e42:	82 17       	cp	r24, r18
 e44:	93 07       	cpc	r25, r19
 e46:	94 f0       	brlt	.+36     	; 0xe6c <__fpcmp_parts_f+0x88>
 e48:	28 17       	cp	r18, r24
 e4a:	39 07       	cpc	r19, r25
 e4c:	bc f0       	brlt	.+46     	; 0xe7c <__fpcmp_parts_f+0x98>
 e4e:	14 96       	adiw	r26, 0x04	; 4
 e50:	8d 91       	ld	r24, X+
 e52:	9d 91       	ld	r25, X+
 e54:	0d 90       	ld	r0, X+
 e56:	bc 91       	ld	r27, X
 e58:	a0 2d       	mov	r26, r0
 e5a:	24 81       	ldd	r18, Z+4	; 0x04
 e5c:	35 81       	ldd	r19, Z+5	; 0x05
 e5e:	46 81       	ldd	r20, Z+6	; 0x06
 e60:	57 81       	ldd	r21, Z+7	; 0x07
 e62:	28 17       	cp	r18, r24
 e64:	39 07       	cpc	r19, r25
 e66:	4a 07       	cpc	r20, r26
 e68:	5b 07       	cpc	r21, r27
 e6a:	18 f4       	brcc	.+6      	; 0xe72 <__fpcmp_parts_f+0x8e>
 e6c:	11 23       	and	r17, r17
 e6e:	41 f0       	breq	.+16     	; 0xe80 <__fpcmp_parts_f+0x9c>
 e70:	0a c0       	rjmp	.+20     	; 0xe86 <__fpcmp_parts_f+0xa2>
 e72:	82 17       	cp	r24, r18
 e74:	93 07       	cpc	r25, r19
 e76:	a4 07       	cpc	r26, r20
 e78:	b5 07       	cpc	r27, r21
 e7a:	40 f4       	brcc	.+16     	; 0xe8c <__fpcmp_parts_f+0xa8>
 e7c:	11 23       	and	r17, r17
 e7e:	19 f0       	breq	.+6      	; 0xe86 <__fpcmp_parts_f+0xa2>
 e80:	61 e0       	ldi	r22, 0x01	; 1
 e82:	70 e0       	ldi	r23, 0x00	; 0
 e84:	05 c0       	rjmp	.+10     	; 0xe90 <__fpcmp_parts_f+0xac>
 e86:	6f ef       	ldi	r22, 0xFF	; 255
 e88:	7f ef       	ldi	r23, 0xFF	; 255
 e8a:	02 c0       	rjmp	.+4      	; 0xe90 <__fpcmp_parts_f+0xac>
 e8c:	60 e0       	ldi	r22, 0x00	; 0
 e8e:	70 e0       	ldi	r23, 0x00	; 0
 e90:	cb 01       	movw	r24, r22
 e92:	1f 91       	pop	r17
 e94:	08 95       	ret

00000e96 <__prologue_saves__>:
 e96:	2f 92       	push	r2
 e98:	3f 92       	push	r3
 e9a:	4f 92       	push	r4
 e9c:	5f 92       	push	r5
 e9e:	6f 92       	push	r6
 ea0:	7f 92       	push	r7
 ea2:	8f 92       	push	r8
 ea4:	9f 92       	push	r9
 ea6:	af 92       	push	r10
 ea8:	bf 92       	push	r11
 eaa:	cf 92       	push	r12
 eac:	df 92       	push	r13
 eae:	ef 92       	push	r14
 eb0:	ff 92       	push	r15
 eb2:	0f 93       	push	r16
 eb4:	1f 93       	push	r17
 eb6:	cf 93       	push	r28
 eb8:	df 93       	push	r29
 eba:	cd b7       	in	r28, 0x3d	; 61
 ebc:	de b7       	in	r29, 0x3e	; 62
 ebe:	ca 1b       	sub	r28, r26
 ec0:	db 0b       	sbc	r29, r27
 ec2:	0f b6       	in	r0, 0x3f	; 63
 ec4:	f8 94       	cli
 ec6:	de bf       	out	0x3e, r29	; 62
 ec8:	0f be       	out	0x3f, r0	; 63
 eca:	cd bf       	out	0x3d, r28	; 61
 ecc:	09 94       	ijmp

00000ece <__epilogue_restores__>:
 ece:	2a 88       	ldd	r2, Y+18	; 0x12
 ed0:	39 88       	ldd	r3, Y+17	; 0x11
 ed2:	48 88       	ldd	r4, Y+16	; 0x10
 ed4:	5f 84       	ldd	r5, Y+15	; 0x0f
 ed6:	6e 84       	ldd	r6, Y+14	; 0x0e
 ed8:	7d 84       	ldd	r7, Y+13	; 0x0d
 eda:	8c 84       	ldd	r8, Y+12	; 0x0c
 edc:	9b 84       	ldd	r9, Y+11	; 0x0b
 ede:	aa 84       	ldd	r10, Y+10	; 0x0a
 ee0:	b9 84       	ldd	r11, Y+9	; 0x09
 ee2:	c8 84       	ldd	r12, Y+8	; 0x08
 ee4:	df 80       	ldd	r13, Y+7	; 0x07
 ee6:	ee 80       	ldd	r14, Y+6	; 0x06
 ee8:	fd 80       	ldd	r15, Y+5	; 0x05
 eea:	0c 81       	ldd	r16, Y+4	; 0x04
 eec:	1b 81       	ldd	r17, Y+3	; 0x03
 eee:	aa 81       	ldd	r26, Y+2	; 0x02
 ef0:	b9 81       	ldd	r27, Y+1	; 0x01
 ef2:	ce 0f       	add	r28, r30
 ef4:	d1 1d       	adc	r29, r1
 ef6:	0f b6       	in	r0, 0x3f	; 63
 ef8:	f8 94       	cli
 efa:	de bf       	out	0x3e, r29	; 62
 efc:	0f be       	out	0x3f, r0	; 63
 efe:	cd bf       	out	0x3d, r28	; 61
 f00:	ed 01       	movw	r28, r26
 f02:	08 95       	ret

00000f04 <_exit>:
 f04:	f8 94       	cli

00000f06 <__stop_program>:
 f06:	ff cf       	rjmp	.-2      	; 0xf06 <__stop_program>
