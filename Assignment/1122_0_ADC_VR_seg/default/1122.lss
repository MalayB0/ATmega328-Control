
1122.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000f4e  00000fc2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f4e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000160  00000000  00000000  00000fda  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000001c2  00000000  00000000  0000113a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001e4c  00000000  00000000  000012fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000101d  00000000  00000000  00003148  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001002  00000000  00000000  00004165  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001b0  00000000  00000000  00005168  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000034f  00000000  00000000  00005318  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000007ce  00000000  00000000  00005667  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00005e35  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__vector_1>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e4       	ldi	r30, 0x4E	; 78
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
  8a:	0e 94 bc 01 	call	0x378	; 0x378 <main>
  8e:	0c 94 a5 07 	jmp	0xf4a	; 0xf4a <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <GetADCData>:

unsigned char seg_num[] = 
	{0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7C,0x07,0x7F,0x67,0x77,0x7C,0x39,0x5E,0x79,0x71};

unsigned int GetADCData(uint8_t aIn)
{
  96:	df 93       	push	r29
  98:	cf 93       	push	r28
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	61 97       	sbiw	r28, 0x11	; 17
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
  aa:	89 8b       	std	Y+17, r24	; 0x11
	unsigned int result;
	ADMUX = aIn;
  ac:	ec e7       	ldi	r30, 0x7C	; 124
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	89 89       	ldd	r24, Y+17	; 0x11
  b2:	80 83       	st	Z, r24
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1);
  b4:	ea e7       	ldi	r30, 0x7A	; 122
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	86 e8       	ldi	r24, 0x86	; 134
  ba:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
  bc:	aa e7       	ldi	r26, 0x7A	; 122
  be:	b0 e0       	ldi	r27, 0x00	; 0
  c0:	ea e7       	ldi	r30, 0x7A	; 122
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	80 64       	ori	r24, 0x40	; 64
  c8:	8c 93       	st	X, r24
	while(!(ADCSRA & (1<<ADIF))); // while ADCSRA 이 ~~ 될 동안 기다려라...
  ca:	ea e7       	ldi	r30, 0x7A	; 122
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 2f       	mov	r24, r24
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	80 71       	andi	r24, 0x10	; 16
  d6:	90 70       	andi	r25, 0x00	; 0
  d8:	00 97       	sbiw	r24, 0x00	; 0
  da:	b9 f3       	breq	.-18     	; 0xca <GetADCData+0x34>
	result = ADCL + (ADCH << 8);
  dc:	e8 e7       	ldi	r30, 0x78	; 120
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	28 2f       	mov	r18, r24
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	e9 e7       	ldi	r30, 0x79	; 121
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	88 2f       	mov	r24, r24
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	98 2f       	mov	r25, r24
  f2:	88 27       	eor	r24, r24
  f4:	82 0f       	add	r24, r18
  f6:	93 1f       	adc	r25, r19
  f8:	98 8b       	std	Y+16, r25	; 0x10
  fa:	8f 87       	std	Y+15, r24	; 0x0f
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	a0 e8       	ldi	r26, 0x80	; 128
 102:	bf e3       	ldi	r27, 0x3F	; 63
 104:	8b 87       	std	Y+11, r24	; 0x0b
 106:	9c 87       	std	Y+12, r25	; 0x0c
 108:	ad 87       	std	Y+13, r26	; 0x0d
 10a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 10c:	6b 85       	ldd	r22, Y+11	; 0x0b
 10e:	7c 85       	ldd	r23, Y+12	; 0x0c
 110:	8d 85       	ldd	r24, Y+13	; 0x0d
 112:	9e 85       	ldd	r25, Y+14	; 0x0e
 114:	20 e0       	ldi	r18, 0x00	; 0
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	4a e7       	ldi	r20, 0x7A	; 122
 11a:	55 e4       	ldi	r21, 0x45	; 69
 11c:	0e 94 c3 03 	call	0x786	; 0x786 <__mulsf3>
 120:	dc 01       	movw	r26, r24
 122:	cb 01       	movw	r24, r22
 124:	8f 83       	std	Y+7, r24	; 0x07
 126:	98 87       	std	Y+8, r25	; 0x08
 128:	a9 87       	std	Y+9, r26	; 0x09
 12a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 12c:	6f 81       	ldd	r22, Y+7	; 0x07
 12e:	78 85       	ldd	r23, Y+8	; 0x08
 130:	89 85       	ldd	r24, Y+9	; 0x09
 132:	9a 85       	ldd	r25, Y+10	; 0x0a
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	40 e8       	ldi	r20, 0x80	; 128
 13a:	5f e3       	ldi	r21, 0x3F	; 63
 13c:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__ltsf2>
 140:	88 23       	and	r24, r24
 142:	2c f4       	brge	.+10     	; 0x14e <GetADCData+0xb8>
		__ticks = 1;
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	9e 83       	std	Y+6, r25	; 0x06
 14a:	8d 83       	std	Y+5, r24	; 0x05
 14c:	3f c0       	rjmp	.+126    	; 0x1cc <GetADCData+0x136>
	else if (__tmp > 65535)
 14e:	6f 81       	ldd	r22, Y+7	; 0x07
 150:	78 85       	ldd	r23, Y+8	; 0x08
 152:	89 85       	ldd	r24, Y+9	; 0x09
 154:	9a 85       	ldd	r25, Y+10	; 0x0a
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	3f ef       	ldi	r19, 0xFF	; 255
 15a:	4f e7       	ldi	r20, 0x7F	; 127
 15c:	57 e4       	ldi	r21, 0x47	; 71
 15e:	0e 94 bd 04 	call	0x97a	; 0x97a <__gtsf2>
 162:	18 16       	cp	r1, r24
 164:	4c f5       	brge	.+82     	; 0x1b8 <GetADCData+0x122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 166:	6b 85       	ldd	r22, Y+11	; 0x0b
 168:	7c 85       	ldd	r23, Y+12	; 0x0c
 16a:	8d 85       	ldd	r24, Y+13	; 0x0d
 16c:	9e 85       	ldd	r25, Y+14	; 0x0e
 16e:	20 e0       	ldi	r18, 0x00	; 0
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	40 e2       	ldi	r20, 0x20	; 32
 174:	51 e4       	ldi	r21, 0x41	; 65
 176:	0e 94 c3 03 	call	0x786	; 0x786 <__mulsf3>
 17a:	dc 01       	movw	r26, r24
 17c:	cb 01       	movw	r24, r22
 17e:	bc 01       	movw	r22, r24
 180:	cd 01       	movw	r24, r26
 182:	0e 94 ed 01 	call	0x3da	; 0x3da <__fixunssfsi>
 186:	dc 01       	movw	r26, r24
 188:	cb 01       	movw	r24, r22
 18a:	9e 83       	std	Y+6, r25	; 0x06
 18c:	8d 83       	std	Y+5, r24	; 0x05
 18e:	0f c0       	rjmp	.+30     	; 0x1ae <GetADCData+0x118>
 190:	80 e9       	ldi	r24, 0x90	; 144
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	9c 83       	std	Y+4, r25	; 0x04
 196:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 198:	8b 81       	ldd	r24, Y+3	; 0x03
 19a:	9c 81       	ldd	r25, Y+4	; 0x04
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <GetADCData+0x106>
 1a0:	9c 83       	std	Y+4, r25	; 0x04
 1a2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1a4:	8d 81       	ldd	r24, Y+5	; 0x05
 1a6:	9e 81       	ldd	r25, Y+6	; 0x06
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	9e 83       	std	Y+6, r25	; 0x06
 1ac:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ae:	8d 81       	ldd	r24, Y+5	; 0x05
 1b0:	9e 81       	ldd	r25, Y+6	; 0x06
 1b2:	00 97       	sbiw	r24, 0x00	; 0
 1b4:	69 f7       	brne	.-38     	; 0x190 <GetADCData+0xfa>
 1b6:	14 c0       	rjmp	.+40     	; 0x1e0 <GetADCData+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1b8:	6f 81       	ldd	r22, Y+7	; 0x07
 1ba:	78 85       	ldd	r23, Y+8	; 0x08
 1bc:	89 85       	ldd	r24, Y+9	; 0x09
 1be:	9a 85       	ldd	r25, Y+10	; 0x0a
 1c0:	0e 94 ed 01 	call	0x3da	; 0x3da <__fixunssfsi>
 1c4:	dc 01       	movw	r26, r24
 1c6:	cb 01       	movw	r24, r22
 1c8:	9e 83       	std	Y+6, r25	; 0x06
 1ca:	8d 83       	std	Y+5, r24	; 0x05
 1cc:	8d 81       	ldd	r24, Y+5	; 0x05
 1ce:	9e 81       	ldd	r25, Y+6	; 0x06
 1d0:	9a 83       	std	Y+2, r25	; 0x02
 1d2:	89 83       	std	Y+1, r24	; 0x01
 1d4:	89 81       	ldd	r24, Y+1	; 0x01
 1d6:	9a 81       	ldd	r25, Y+2	; 0x02
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <GetADCData+0x142>
 1dc:	9a 83       	std	Y+2, r25	; 0x02
 1de:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	ADCSRA = 0x00; // 초기화
 1e0:	ea e7       	ldi	r30, 0x7A	; 122
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	10 82       	st	Z, r1
	return result;
 1e6:	8f 85       	ldd	r24, Y+15	; 0x0f
 1e8:	98 89       	ldd	r25, Y+16	; 0x10
}
 1ea:	61 96       	adiw	r28, 0x11	; 17
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	f8 94       	cli
 1f0:	de bf       	out	0x3e, r29	; 62
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	cd bf       	out	0x3d, r28	; 61
 1f6:	cf 91       	pop	r28
 1f8:	df 91       	pop	r29
 1fa:	08 95       	ret

000001fc <Disp_Seg>:

void Disp_Seg(int num)
{
 1fc:	df 93       	push	r29
 1fe:	cf 93       	push	r28
 200:	cd b7       	in	r28, 0x3d	; 61
 202:	de b7       	in	r29, 0x3e	; 62
 204:	28 97       	sbiw	r28, 0x08	; 8
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	f8 94       	cli
 20a:	de bf       	out	0x3e, r29	; 62
 20c:	0f be       	out	0x3f, r0	; 63
 20e:	cd bf       	out	0x3d, r28	; 61
 210:	9e 83       	std	Y+6, r25	; 0x06
 212:	8d 83       	std	Y+5, r24	; 0x05
	int a = num/16;
 214:	8d 81       	ldd	r24, Y+5	; 0x05
 216:	9e 81       	ldd	r25, Y+6	; 0x06
 218:	98 87       	std	Y+8, r25	; 0x08
 21a:	8f 83       	std	Y+7, r24	; 0x07
 21c:	8f 81       	ldd	r24, Y+7	; 0x07
 21e:	98 85       	ldd	r25, Y+8	; 0x08
 220:	99 23       	and	r25, r25
 222:	2c f4       	brge	.+10     	; 0x22e <Disp_Seg+0x32>
 224:	8f 81       	ldd	r24, Y+7	; 0x07
 226:	98 85       	ldd	r25, Y+8	; 0x08
 228:	0f 96       	adiw	r24, 0x0f	; 15
 22a:	98 87       	std	Y+8, r25	; 0x08
 22c:	8f 83       	std	Y+7, r24	; 0x07
 22e:	8f 81       	ldd	r24, Y+7	; 0x07
 230:	98 85       	ldd	r25, Y+8	; 0x08
 232:	95 95       	asr	r25
 234:	87 95       	ror	r24
 236:	95 95       	asr	r25
 238:	87 95       	ror	r24
 23a:	95 95       	asr	r25
 23c:	87 95       	ror	r24
 23e:	95 95       	asr	r25
 240:	87 95       	ror	r24
 242:	9c 83       	std	Y+4, r25	; 0x04
 244:	8b 83       	std	Y+3, r24	; 0x03
	int b = num%16;
 246:	8d 81       	ldd	r24, Y+5	; 0x05
 248:	9e 81       	ldd	r25, Y+6	; 0x06
 24a:	20 e1       	ldi	r18, 0x10	; 16
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	b9 01       	movw	r22, r18
 250:	0e 94 47 07 	call	0xe8e	; 0xe8e <__divmodhi4>
 254:	9a 83       	std	Y+2, r25	; 0x02
 256:	89 83       	std	Y+1, r24	; 0x01
	PORTD = (seg_num[a]<<4) | (seg_num[b]>>6);
 258:	ab e2       	ldi	r26, 0x2B	; 43
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	8b 81       	ldd	r24, Y+3	; 0x03
 25e:	9c 81       	ldd	r25, Y+4	; 0x04
 260:	fc 01       	movw	r30, r24
 262:	e0 50       	subi	r30, 0x00	; 0
 264:	ff 4f       	sbci	r31, 0xFF	; 255
 266:	80 81       	ld	r24, Z
 268:	88 2f       	mov	r24, r24
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	82 95       	swap	r24
 26e:	92 95       	swap	r25
 270:	90 7f       	andi	r25, 0xF0	; 240
 272:	98 27       	eor	r25, r24
 274:	80 7f       	andi	r24, 0xF0	; 240
 276:	98 27       	eor	r25, r24
 278:	28 2f       	mov	r18, r24
 27a:	89 81       	ldd	r24, Y+1	; 0x01
 27c:	9a 81       	ldd	r25, Y+2	; 0x02
 27e:	fc 01       	movw	r30, r24
 280:	e0 50       	subi	r30, 0x00	; 0
 282:	ff 4f       	sbci	r31, 0xFF	; 255
 284:	80 81       	ld	r24, Z
 286:	82 95       	swap	r24
 288:	86 95       	lsr	r24
 28a:	86 95       	lsr	r24
 28c:	83 70       	andi	r24, 0x03	; 3
 28e:	82 2b       	or	r24, r18
 290:	8c 93       	st	X, r24
	PORTB = (seg_num[a]>>4) | (seg_num[b]<<4);
 292:	a5 e2       	ldi	r26, 0x25	; 37
 294:	b0 e0       	ldi	r27, 0x00	; 0
 296:	8b 81       	ldd	r24, Y+3	; 0x03
 298:	9c 81       	ldd	r25, Y+4	; 0x04
 29a:	fc 01       	movw	r30, r24
 29c:	e0 50       	subi	r30, 0x00	; 0
 29e:	ff 4f       	sbci	r31, 0xFF	; 255
 2a0:	80 81       	ld	r24, Z
 2a2:	82 95       	swap	r24
 2a4:	8f 70       	andi	r24, 0x0F	; 15
 2a6:	28 2f       	mov	r18, r24
 2a8:	89 81       	ldd	r24, Y+1	; 0x01
 2aa:	9a 81       	ldd	r25, Y+2	; 0x02
 2ac:	fc 01       	movw	r30, r24
 2ae:	e0 50       	subi	r30, 0x00	; 0
 2b0:	ff 4f       	sbci	r31, 0xFF	; 255
 2b2:	80 81       	ld	r24, Z
 2b4:	88 2f       	mov	r24, r24
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	82 95       	swap	r24
 2ba:	92 95       	swap	r25
 2bc:	90 7f       	andi	r25, 0xF0	; 240
 2be:	98 27       	eor	r25, r24
 2c0:	80 7f       	andi	r24, 0xF0	; 240
 2c2:	98 27       	eor	r25, r24
 2c4:	82 2b       	or	r24, r18
 2c6:	8c 93       	st	X, r24
	PORTC = (PORTC & 0x01) | ((seg_num[b]>>1) & 0xFE);
 2c8:	a8 e2       	ldi	r26, 0x28	; 40
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	e8 e2       	ldi	r30, 0x28	; 40
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	28 2f       	mov	r18, r24
 2d4:	21 70       	andi	r18, 0x01	; 1
 2d6:	89 81       	ldd	r24, Y+1	; 0x01
 2d8:	9a 81       	ldd	r25, Y+2	; 0x02
 2da:	fc 01       	movw	r30, r24
 2dc:	e0 50       	subi	r30, 0x00	; 0
 2de:	ff 4f       	sbci	r31, 0xFF	; 255
 2e0:	80 81       	ld	r24, Z
 2e2:	86 95       	lsr	r24
 2e4:	8e 7f       	andi	r24, 0xFE	; 254
 2e6:	82 2b       	or	r24, r18
 2e8:	8c 93       	st	X, r24
}
 2ea:	28 96       	adiw	r28, 0x08	; 8
 2ec:	0f b6       	in	r0, 0x3f	; 63
 2ee:	f8 94       	cli
 2f0:	de bf       	out	0x3e, r29	; 62
 2f2:	0f be       	out	0x3f, r0	; 63
 2f4:	cd bf       	out	0x3d, r28	; 61
 2f6:	cf 91       	pop	r28
 2f8:	df 91       	pop	r29
 2fa:	08 95       	ret

000002fc <__vector_1>:

ISR(INT0_vect)
{
 2fc:	1f 92       	push	r1
 2fe:	0f 92       	push	r0
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	0f 92       	push	r0
 304:	11 24       	eor	r1, r1
 306:	2f 93       	push	r18
 308:	3f 93       	push	r19
 30a:	4f 93       	push	r20
 30c:	5f 93       	push	r21
 30e:	6f 93       	push	r22
 310:	7f 93       	push	r23
 312:	8f 93       	push	r24
 314:	9f 93       	push	r25
 316:	af 93       	push	r26
 318:	bf 93       	push	r27
 31a:	ef 93       	push	r30
 31c:	ff 93       	push	r31
 31e:	df 93       	push	r29
 320:	cf 93       	push	r28
 322:	00 d0       	rcall	.+0      	; 0x324 <__vector_1+0x28>
 324:	cd b7       	in	r28, 0x3d	; 61
 326:	de b7       	in	r29, 0x3e	; 62
	cli();
 328:	f8 94       	cli
	
	unsigned int value;
	value = GetADCData(0);
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	0e 94 4b 00 	call	0x96	; 0x96 <GetADCData>
 330:	9a 83       	std	Y+2, r25	; 0x02
 332:	89 83       	std	Y+1, r24	; 0x01
	Disp_Seg((unsigned char)value);
 334:	89 81       	ldd	r24, Y+1	; 0x01
 336:	88 2f       	mov	r24, r24
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <Disp_Seg>

	EIFR |= 0x01;
 33e:	ac e3       	ldi	r26, 0x3C	; 60
 340:	b0 e0       	ldi	r27, 0x00	; 0
 342:	ec e3       	ldi	r30, 0x3C	; 60
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	81 60       	ori	r24, 0x01	; 1
 34a:	8c 93       	st	X, r24
	sei();
 34c:	78 94       	sei
}
 34e:	0f 90       	pop	r0
 350:	0f 90       	pop	r0
 352:	cf 91       	pop	r28
 354:	df 91       	pop	r29
 356:	ff 91       	pop	r31
 358:	ef 91       	pop	r30
 35a:	bf 91       	pop	r27
 35c:	af 91       	pop	r26
 35e:	9f 91       	pop	r25
 360:	8f 91       	pop	r24
 362:	7f 91       	pop	r23
 364:	6f 91       	pop	r22
 366:	5f 91       	pop	r21
 368:	4f 91       	pop	r20
 36a:	3f 91       	pop	r19
 36c:	2f 91       	pop	r18
 36e:	0f 90       	pop	r0
 370:	0f be       	out	0x3f, r0	; 63
 372:	0f 90       	pop	r0
 374:	1f 90       	pop	r1
 376:	18 95       	reti

00000378 <main>:

int main ()
{
 378:	df 93       	push	r29
 37a:	cf 93       	push	r28
 37c:	00 d0       	rcall	.+0      	; 0x37e <main+0x6>
 37e:	cd b7       	in	r28, 0x3d	; 61
 380:	de b7       	in	r29, 0x3e	; 62
	cli();
 382:	f8 94       	cli
	DDRD = 0XF3;
 384:	ea e2       	ldi	r30, 0x2A	; 42
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	83 ef       	ldi	r24, 0xF3	; 243
 38a:	80 83       	st	Z, r24
	DDRB = 0XFF;
 38c:	e4 e2       	ldi	r30, 0x24	; 36
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	8f ef       	ldi	r24, 0xFF	; 255
 392:	80 83       	st	Z, r24
	DDRC = 0xFE;
 394:	e7 e2       	ldi	r30, 0x27	; 39
 396:	f0 e0       	ldi	r31, 0x00	; 0
 398:	8e ef       	ldi	r24, 0xFE	; 254
 39a:	80 83       	st	Z, r24

	Disp_Seg(0);
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <Disp_Seg>

	EICRA = 0X0A;
 3a4:	e9 e6       	ldi	r30, 0x69	; 105
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	8a e0       	ldi	r24, 0x0A	; 10
 3aa:	80 83       	st	Z, r24
	// falling
	EIMSK = 0X01;
 3ac:	ed e3       	ldi	r30, 0x3D	; 61
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	80 83       	st	Z, r24
	// interrupt enable
	EIFR |= 0X01;	
 3b4:	ac e3       	ldi	r26, 0x3C	; 60
 3b6:	b0 e0       	ldi	r27, 0x00	; 0
 3b8:	ec e3       	ldi	r30, 0x3C	; 60
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	80 81       	ld	r24, Z
 3be:	81 60       	ori	r24, 0x01	; 1
 3c0:	8c 93       	st	X, r24
	sei();
 3c2:	78 94       	sei

	while(1)
	{
		unsigned int value;
		value = GetADCData(0);
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	0e 94 4b 00 	call	0x96	; 0x96 <GetADCData>
 3ca:	9a 83       	std	Y+2, r25	; 0x02
 3cc:	89 83       	std	Y+1, r24	; 0x01
		Disp_Seg((unsigned char)value);
 3ce:	89 81       	ldd	r24, Y+1	; 0x01
 3d0:	88 2f       	mov	r24, r24
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <Disp_Seg>
 3d8:	f5 cf       	rjmp	.-22     	; 0x3c4 <main+0x4c>

000003da <__fixunssfsi>:
 3da:	ef 92       	push	r14
 3dc:	ff 92       	push	r15
 3de:	0f 93       	push	r16
 3e0:	1f 93       	push	r17
 3e2:	7b 01       	movw	r14, r22
 3e4:	8c 01       	movw	r16, r24
 3e6:	20 e0       	ldi	r18, 0x00	; 0
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	40 e0       	ldi	r20, 0x00	; 0
 3ec:	5f e4       	ldi	r21, 0x4F	; 79
 3ee:	0e 94 ed 04 	call	0x9da	; 0x9da <__gesf2>
 3f2:	88 23       	and	r24, r24
 3f4:	8c f0       	brlt	.+34     	; 0x418 <__fixunssfsi+0x3e>
 3f6:	c8 01       	movw	r24, r16
 3f8:	b7 01       	movw	r22, r14
 3fa:	20 e0       	ldi	r18, 0x00	; 0
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	40 e0       	ldi	r20, 0x00	; 0
 400:	5f e4       	ldi	r21, 0x4F	; 79
 402:	0e 94 65 03 	call	0x6ca	; 0x6ca <__subsf3>
 406:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__fixsfsi>
 40a:	9b 01       	movw	r18, r22
 40c:	ac 01       	movw	r20, r24
 40e:	20 50       	subi	r18, 0x00	; 0
 410:	30 40       	sbci	r19, 0x00	; 0
 412:	40 40       	sbci	r20, 0x00	; 0
 414:	50 48       	sbci	r21, 0x80	; 128
 416:	06 c0       	rjmp	.+12     	; 0x424 <__fixunssfsi+0x4a>
 418:	c8 01       	movw	r24, r16
 41a:	b7 01       	movw	r22, r14
 41c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__fixsfsi>
 420:	9b 01       	movw	r18, r22
 422:	ac 01       	movw	r20, r24
 424:	b9 01       	movw	r22, r18
 426:	ca 01       	movw	r24, r20
 428:	1f 91       	pop	r17
 42a:	0f 91       	pop	r16
 42c:	ff 90       	pop	r15
 42e:	ef 90       	pop	r14
 430:	08 95       	ret

00000432 <_fpadd_parts>:
 432:	a0 e0       	ldi	r26, 0x00	; 0
 434:	b0 e0       	ldi	r27, 0x00	; 0
 436:	ef e1       	ldi	r30, 0x1F	; 31
 438:	f2 e0       	ldi	r31, 0x02	; 2
 43a:	0c 94 6e 07 	jmp	0xedc	; 0xedc <__prologue_saves__>
 43e:	dc 01       	movw	r26, r24
 440:	2b 01       	movw	r4, r22
 442:	fa 01       	movw	r30, r20
 444:	9c 91       	ld	r25, X
 446:	92 30       	cpi	r25, 0x02	; 2
 448:	08 f4       	brcc	.+2      	; 0x44c <_fpadd_parts+0x1a>
 44a:	39 c1       	rjmp	.+626    	; 0x6be <_fpadd_parts+0x28c>
 44c:	eb 01       	movw	r28, r22
 44e:	88 81       	ld	r24, Y
 450:	82 30       	cpi	r24, 0x02	; 2
 452:	08 f4       	brcc	.+2      	; 0x456 <_fpadd_parts+0x24>
 454:	33 c1       	rjmp	.+614    	; 0x6bc <_fpadd_parts+0x28a>
 456:	94 30       	cpi	r25, 0x04	; 4
 458:	69 f4       	brne	.+26     	; 0x474 <_fpadd_parts+0x42>
 45a:	84 30       	cpi	r24, 0x04	; 4
 45c:	09 f0       	breq	.+2      	; 0x460 <_fpadd_parts+0x2e>
 45e:	2f c1       	rjmp	.+606    	; 0x6be <_fpadd_parts+0x28c>
 460:	11 96       	adiw	r26, 0x01	; 1
 462:	9c 91       	ld	r25, X
 464:	11 97       	sbiw	r26, 0x01	; 1
 466:	89 81       	ldd	r24, Y+1	; 0x01
 468:	98 17       	cp	r25, r24
 46a:	09 f4       	brne	.+2      	; 0x46e <_fpadd_parts+0x3c>
 46c:	28 c1       	rjmp	.+592    	; 0x6be <_fpadd_parts+0x28c>
 46e:	a0 e1       	ldi	r26, 0x10	; 16
 470:	b1 e0       	ldi	r27, 0x01	; 1
 472:	25 c1       	rjmp	.+586    	; 0x6be <_fpadd_parts+0x28c>
 474:	84 30       	cpi	r24, 0x04	; 4
 476:	09 f4       	brne	.+2      	; 0x47a <_fpadd_parts+0x48>
 478:	21 c1       	rjmp	.+578    	; 0x6bc <_fpadd_parts+0x28a>
 47a:	82 30       	cpi	r24, 0x02	; 2
 47c:	a9 f4       	brne	.+42     	; 0x4a8 <_fpadd_parts+0x76>
 47e:	92 30       	cpi	r25, 0x02	; 2
 480:	09 f0       	breq	.+2      	; 0x484 <_fpadd_parts+0x52>
 482:	1d c1       	rjmp	.+570    	; 0x6be <_fpadd_parts+0x28c>
 484:	9a 01       	movw	r18, r20
 486:	ad 01       	movw	r20, r26
 488:	88 e0       	ldi	r24, 0x08	; 8
 48a:	ea 01       	movw	r28, r20
 48c:	09 90       	ld	r0, Y+
 48e:	ae 01       	movw	r20, r28
 490:	e9 01       	movw	r28, r18
 492:	09 92       	st	Y+, r0
 494:	9e 01       	movw	r18, r28
 496:	81 50       	subi	r24, 0x01	; 1
 498:	c1 f7       	brne	.-16     	; 0x48a <_fpadd_parts+0x58>
 49a:	e2 01       	movw	r28, r4
 49c:	89 81       	ldd	r24, Y+1	; 0x01
 49e:	11 96       	adiw	r26, 0x01	; 1
 4a0:	9c 91       	ld	r25, X
 4a2:	89 23       	and	r24, r25
 4a4:	81 83       	std	Z+1, r24	; 0x01
 4a6:	08 c1       	rjmp	.+528    	; 0x6b8 <_fpadd_parts+0x286>
 4a8:	92 30       	cpi	r25, 0x02	; 2
 4aa:	09 f4       	brne	.+2      	; 0x4ae <_fpadd_parts+0x7c>
 4ac:	07 c1       	rjmp	.+526    	; 0x6bc <_fpadd_parts+0x28a>
 4ae:	12 96       	adiw	r26, 0x02	; 2
 4b0:	2d 90       	ld	r2, X+
 4b2:	3c 90       	ld	r3, X
 4b4:	13 97       	sbiw	r26, 0x03	; 3
 4b6:	eb 01       	movw	r28, r22
 4b8:	8a 81       	ldd	r24, Y+2	; 0x02
 4ba:	9b 81       	ldd	r25, Y+3	; 0x03
 4bc:	14 96       	adiw	r26, 0x04	; 4
 4be:	ad 90       	ld	r10, X+
 4c0:	bd 90       	ld	r11, X+
 4c2:	cd 90       	ld	r12, X+
 4c4:	dc 90       	ld	r13, X
 4c6:	17 97       	sbiw	r26, 0x07	; 7
 4c8:	ec 80       	ldd	r14, Y+4	; 0x04
 4ca:	fd 80       	ldd	r15, Y+5	; 0x05
 4cc:	0e 81       	ldd	r16, Y+6	; 0x06
 4ce:	1f 81       	ldd	r17, Y+7	; 0x07
 4d0:	91 01       	movw	r18, r2
 4d2:	28 1b       	sub	r18, r24
 4d4:	39 0b       	sbc	r19, r25
 4d6:	b9 01       	movw	r22, r18
 4d8:	37 ff       	sbrs	r19, 7
 4da:	04 c0       	rjmp	.+8      	; 0x4e4 <_fpadd_parts+0xb2>
 4dc:	66 27       	eor	r22, r22
 4de:	77 27       	eor	r23, r23
 4e0:	62 1b       	sub	r22, r18
 4e2:	73 0b       	sbc	r23, r19
 4e4:	60 32       	cpi	r22, 0x20	; 32
 4e6:	71 05       	cpc	r23, r1
 4e8:	0c f0       	brlt	.+2      	; 0x4ec <_fpadd_parts+0xba>
 4ea:	61 c0       	rjmp	.+194    	; 0x5ae <_fpadd_parts+0x17c>
 4ec:	12 16       	cp	r1, r18
 4ee:	13 06       	cpc	r1, r19
 4f0:	6c f5       	brge	.+90     	; 0x54c <_fpadd_parts+0x11a>
 4f2:	37 01       	movw	r6, r14
 4f4:	48 01       	movw	r8, r16
 4f6:	06 2e       	mov	r0, r22
 4f8:	04 c0       	rjmp	.+8      	; 0x502 <_fpadd_parts+0xd0>
 4fa:	96 94       	lsr	r9
 4fc:	87 94       	ror	r8
 4fe:	77 94       	ror	r7
 500:	67 94       	ror	r6
 502:	0a 94       	dec	r0
 504:	d2 f7       	brpl	.-12     	; 0x4fa <_fpadd_parts+0xc8>
 506:	21 e0       	ldi	r18, 0x01	; 1
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	40 e0       	ldi	r20, 0x00	; 0
 50c:	50 e0       	ldi	r21, 0x00	; 0
 50e:	04 c0       	rjmp	.+8      	; 0x518 <_fpadd_parts+0xe6>
 510:	22 0f       	add	r18, r18
 512:	33 1f       	adc	r19, r19
 514:	44 1f       	adc	r20, r20
 516:	55 1f       	adc	r21, r21
 518:	6a 95       	dec	r22
 51a:	d2 f7       	brpl	.-12     	; 0x510 <_fpadd_parts+0xde>
 51c:	21 50       	subi	r18, 0x01	; 1
 51e:	30 40       	sbci	r19, 0x00	; 0
 520:	40 40       	sbci	r20, 0x00	; 0
 522:	50 40       	sbci	r21, 0x00	; 0
 524:	2e 21       	and	r18, r14
 526:	3f 21       	and	r19, r15
 528:	40 23       	and	r20, r16
 52a:	51 23       	and	r21, r17
 52c:	21 15       	cp	r18, r1
 52e:	31 05       	cpc	r19, r1
 530:	41 05       	cpc	r20, r1
 532:	51 05       	cpc	r21, r1
 534:	21 f0       	breq	.+8      	; 0x53e <_fpadd_parts+0x10c>
 536:	21 e0       	ldi	r18, 0x01	; 1
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	40 e0       	ldi	r20, 0x00	; 0
 53c:	50 e0       	ldi	r21, 0x00	; 0
 53e:	79 01       	movw	r14, r18
 540:	8a 01       	movw	r16, r20
 542:	e6 28       	or	r14, r6
 544:	f7 28       	or	r15, r7
 546:	08 29       	or	r16, r8
 548:	19 29       	or	r17, r9
 54a:	3c c0       	rjmp	.+120    	; 0x5c4 <_fpadd_parts+0x192>
 54c:	23 2b       	or	r18, r19
 54e:	d1 f1       	breq	.+116    	; 0x5c4 <_fpadd_parts+0x192>
 550:	26 0e       	add	r2, r22
 552:	37 1e       	adc	r3, r23
 554:	35 01       	movw	r6, r10
 556:	46 01       	movw	r8, r12
 558:	06 2e       	mov	r0, r22
 55a:	04 c0       	rjmp	.+8      	; 0x564 <_fpadd_parts+0x132>
 55c:	96 94       	lsr	r9
 55e:	87 94       	ror	r8
 560:	77 94       	ror	r7
 562:	67 94       	ror	r6
 564:	0a 94       	dec	r0
 566:	d2 f7       	brpl	.-12     	; 0x55c <_fpadd_parts+0x12a>
 568:	21 e0       	ldi	r18, 0x01	; 1
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	40 e0       	ldi	r20, 0x00	; 0
 56e:	50 e0       	ldi	r21, 0x00	; 0
 570:	04 c0       	rjmp	.+8      	; 0x57a <_fpadd_parts+0x148>
 572:	22 0f       	add	r18, r18
 574:	33 1f       	adc	r19, r19
 576:	44 1f       	adc	r20, r20
 578:	55 1f       	adc	r21, r21
 57a:	6a 95       	dec	r22
 57c:	d2 f7       	brpl	.-12     	; 0x572 <_fpadd_parts+0x140>
 57e:	21 50       	subi	r18, 0x01	; 1
 580:	30 40       	sbci	r19, 0x00	; 0
 582:	40 40       	sbci	r20, 0x00	; 0
 584:	50 40       	sbci	r21, 0x00	; 0
 586:	2a 21       	and	r18, r10
 588:	3b 21       	and	r19, r11
 58a:	4c 21       	and	r20, r12
 58c:	5d 21       	and	r21, r13
 58e:	21 15       	cp	r18, r1
 590:	31 05       	cpc	r19, r1
 592:	41 05       	cpc	r20, r1
 594:	51 05       	cpc	r21, r1
 596:	21 f0       	breq	.+8      	; 0x5a0 <_fpadd_parts+0x16e>
 598:	21 e0       	ldi	r18, 0x01	; 1
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	40 e0       	ldi	r20, 0x00	; 0
 59e:	50 e0       	ldi	r21, 0x00	; 0
 5a0:	59 01       	movw	r10, r18
 5a2:	6a 01       	movw	r12, r20
 5a4:	a6 28       	or	r10, r6
 5a6:	b7 28       	or	r11, r7
 5a8:	c8 28       	or	r12, r8
 5aa:	d9 28       	or	r13, r9
 5ac:	0b c0       	rjmp	.+22     	; 0x5c4 <_fpadd_parts+0x192>
 5ae:	82 15       	cp	r24, r2
 5b0:	93 05       	cpc	r25, r3
 5b2:	2c f0       	brlt	.+10     	; 0x5be <_fpadd_parts+0x18c>
 5b4:	1c 01       	movw	r2, r24
 5b6:	aa 24       	eor	r10, r10
 5b8:	bb 24       	eor	r11, r11
 5ba:	65 01       	movw	r12, r10
 5bc:	03 c0       	rjmp	.+6      	; 0x5c4 <_fpadd_parts+0x192>
 5be:	ee 24       	eor	r14, r14
 5c0:	ff 24       	eor	r15, r15
 5c2:	87 01       	movw	r16, r14
 5c4:	11 96       	adiw	r26, 0x01	; 1
 5c6:	9c 91       	ld	r25, X
 5c8:	d2 01       	movw	r26, r4
 5ca:	11 96       	adiw	r26, 0x01	; 1
 5cc:	8c 91       	ld	r24, X
 5ce:	98 17       	cp	r25, r24
 5d0:	09 f4       	brne	.+2      	; 0x5d4 <_fpadd_parts+0x1a2>
 5d2:	45 c0       	rjmp	.+138    	; 0x65e <_fpadd_parts+0x22c>
 5d4:	99 23       	and	r25, r25
 5d6:	39 f0       	breq	.+14     	; 0x5e6 <_fpadd_parts+0x1b4>
 5d8:	a8 01       	movw	r20, r16
 5da:	97 01       	movw	r18, r14
 5dc:	2a 19       	sub	r18, r10
 5de:	3b 09       	sbc	r19, r11
 5e0:	4c 09       	sbc	r20, r12
 5e2:	5d 09       	sbc	r21, r13
 5e4:	06 c0       	rjmp	.+12     	; 0x5f2 <_fpadd_parts+0x1c0>
 5e6:	a6 01       	movw	r20, r12
 5e8:	95 01       	movw	r18, r10
 5ea:	2e 19       	sub	r18, r14
 5ec:	3f 09       	sbc	r19, r15
 5ee:	40 0b       	sbc	r20, r16
 5f0:	51 0b       	sbc	r21, r17
 5f2:	57 fd       	sbrc	r21, 7
 5f4:	08 c0       	rjmp	.+16     	; 0x606 <_fpadd_parts+0x1d4>
 5f6:	11 82       	std	Z+1, r1	; 0x01
 5f8:	33 82       	std	Z+3, r3	; 0x03
 5fa:	22 82       	std	Z+2, r2	; 0x02
 5fc:	24 83       	std	Z+4, r18	; 0x04
 5fe:	35 83       	std	Z+5, r19	; 0x05
 600:	46 83       	std	Z+6, r20	; 0x06
 602:	57 83       	std	Z+7, r21	; 0x07
 604:	1d c0       	rjmp	.+58     	; 0x640 <_fpadd_parts+0x20e>
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	81 83       	std	Z+1, r24	; 0x01
 60a:	33 82       	std	Z+3, r3	; 0x03
 60c:	22 82       	std	Z+2, r2	; 0x02
 60e:	88 27       	eor	r24, r24
 610:	99 27       	eor	r25, r25
 612:	dc 01       	movw	r26, r24
 614:	82 1b       	sub	r24, r18
 616:	93 0b       	sbc	r25, r19
 618:	a4 0b       	sbc	r26, r20
 61a:	b5 0b       	sbc	r27, r21
 61c:	84 83       	std	Z+4, r24	; 0x04
 61e:	95 83       	std	Z+5, r25	; 0x05
 620:	a6 83       	std	Z+6, r26	; 0x06
 622:	b7 83       	std	Z+7, r27	; 0x07
 624:	0d c0       	rjmp	.+26     	; 0x640 <_fpadd_parts+0x20e>
 626:	22 0f       	add	r18, r18
 628:	33 1f       	adc	r19, r19
 62a:	44 1f       	adc	r20, r20
 62c:	55 1f       	adc	r21, r21
 62e:	24 83       	std	Z+4, r18	; 0x04
 630:	35 83       	std	Z+5, r19	; 0x05
 632:	46 83       	std	Z+6, r20	; 0x06
 634:	57 83       	std	Z+7, r21	; 0x07
 636:	82 81       	ldd	r24, Z+2	; 0x02
 638:	93 81       	ldd	r25, Z+3	; 0x03
 63a:	01 97       	sbiw	r24, 0x01	; 1
 63c:	93 83       	std	Z+3, r25	; 0x03
 63e:	82 83       	std	Z+2, r24	; 0x02
 640:	24 81       	ldd	r18, Z+4	; 0x04
 642:	35 81       	ldd	r19, Z+5	; 0x05
 644:	46 81       	ldd	r20, Z+6	; 0x06
 646:	57 81       	ldd	r21, Z+7	; 0x07
 648:	da 01       	movw	r26, r20
 64a:	c9 01       	movw	r24, r18
 64c:	01 97       	sbiw	r24, 0x01	; 1
 64e:	a1 09       	sbc	r26, r1
 650:	b1 09       	sbc	r27, r1
 652:	8f 5f       	subi	r24, 0xFF	; 255
 654:	9f 4f       	sbci	r25, 0xFF	; 255
 656:	af 4f       	sbci	r26, 0xFF	; 255
 658:	bf 43       	sbci	r27, 0x3F	; 63
 65a:	28 f3       	brcs	.-54     	; 0x626 <_fpadd_parts+0x1f4>
 65c:	0b c0       	rjmp	.+22     	; 0x674 <_fpadd_parts+0x242>
 65e:	91 83       	std	Z+1, r25	; 0x01
 660:	33 82       	std	Z+3, r3	; 0x03
 662:	22 82       	std	Z+2, r2	; 0x02
 664:	ea 0c       	add	r14, r10
 666:	fb 1c       	adc	r15, r11
 668:	0c 1d       	adc	r16, r12
 66a:	1d 1d       	adc	r17, r13
 66c:	e4 82       	std	Z+4, r14	; 0x04
 66e:	f5 82       	std	Z+5, r15	; 0x05
 670:	06 83       	std	Z+6, r16	; 0x06
 672:	17 83       	std	Z+7, r17	; 0x07
 674:	83 e0       	ldi	r24, 0x03	; 3
 676:	80 83       	st	Z, r24
 678:	24 81       	ldd	r18, Z+4	; 0x04
 67a:	35 81       	ldd	r19, Z+5	; 0x05
 67c:	46 81       	ldd	r20, Z+6	; 0x06
 67e:	57 81       	ldd	r21, Z+7	; 0x07
 680:	57 ff       	sbrs	r21, 7
 682:	1a c0       	rjmp	.+52     	; 0x6b8 <_fpadd_parts+0x286>
 684:	c9 01       	movw	r24, r18
 686:	aa 27       	eor	r26, r26
 688:	97 fd       	sbrc	r25, 7
 68a:	a0 95       	com	r26
 68c:	ba 2f       	mov	r27, r26
 68e:	81 70       	andi	r24, 0x01	; 1
 690:	90 70       	andi	r25, 0x00	; 0
 692:	a0 70       	andi	r26, 0x00	; 0
 694:	b0 70       	andi	r27, 0x00	; 0
 696:	56 95       	lsr	r21
 698:	47 95       	ror	r20
 69a:	37 95       	ror	r19
 69c:	27 95       	ror	r18
 69e:	82 2b       	or	r24, r18
 6a0:	93 2b       	or	r25, r19
 6a2:	a4 2b       	or	r26, r20
 6a4:	b5 2b       	or	r27, r21
 6a6:	84 83       	std	Z+4, r24	; 0x04
 6a8:	95 83       	std	Z+5, r25	; 0x05
 6aa:	a6 83       	std	Z+6, r26	; 0x06
 6ac:	b7 83       	std	Z+7, r27	; 0x07
 6ae:	82 81       	ldd	r24, Z+2	; 0x02
 6b0:	93 81       	ldd	r25, Z+3	; 0x03
 6b2:	01 96       	adiw	r24, 0x01	; 1
 6b4:	93 83       	std	Z+3, r25	; 0x03
 6b6:	82 83       	std	Z+2, r24	; 0x02
 6b8:	df 01       	movw	r26, r30
 6ba:	01 c0       	rjmp	.+2      	; 0x6be <_fpadd_parts+0x28c>
 6bc:	d2 01       	movw	r26, r4
 6be:	cd 01       	movw	r24, r26
 6c0:	cd b7       	in	r28, 0x3d	; 61
 6c2:	de b7       	in	r29, 0x3e	; 62
 6c4:	e2 e1       	ldi	r30, 0x12	; 18
 6c6:	0c 94 8a 07 	jmp	0xf14	; 0xf14 <__epilogue_restores__>

000006ca <__subsf3>:
 6ca:	a0 e2       	ldi	r26, 0x20	; 32
 6cc:	b0 e0       	ldi	r27, 0x00	; 0
 6ce:	eb e6       	ldi	r30, 0x6B	; 107
 6d0:	f3 e0       	ldi	r31, 0x03	; 3
 6d2:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__prologue_saves__+0x18>
 6d6:	69 83       	std	Y+1, r22	; 0x01
 6d8:	7a 83       	std	Y+2, r23	; 0x02
 6da:	8b 83       	std	Y+3, r24	; 0x03
 6dc:	9c 83       	std	Y+4, r25	; 0x04
 6de:	2d 83       	std	Y+5, r18	; 0x05
 6e0:	3e 83       	std	Y+6, r19	; 0x06
 6e2:	4f 83       	std	Y+7, r20	; 0x07
 6e4:	58 87       	std	Y+8, r21	; 0x08
 6e6:	e9 e0       	ldi	r30, 0x09	; 9
 6e8:	ee 2e       	mov	r14, r30
 6ea:	f1 2c       	mov	r15, r1
 6ec:	ec 0e       	add	r14, r28
 6ee:	fd 1e       	adc	r15, r29
 6f0:	ce 01       	movw	r24, r28
 6f2:	01 96       	adiw	r24, 0x01	; 1
 6f4:	b7 01       	movw	r22, r14
 6f6:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 6fa:	8e 01       	movw	r16, r28
 6fc:	0f 5e       	subi	r16, 0xEF	; 239
 6fe:	1f 4f       	sbci	r17, 0xFF	; 255
 700:	ce 01       	movw	r24, r28
 702:	05 96       	adiw	r24, 0x05	; 5
 704:	b8 01       	movw	r22, r16
 706:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 70a:	8a 89       	ldd	r24, Y+18	; 0x12
 70c:	91 e0       	ldi	r25, 0x01	; 1
 70e:	89 27       	eor	r24, r25
 710:	8a 8b       	std	Y+18, r24	; 0x12
 712:	c7 01       	movw	r24, r14
 714:	b8 01       	movw	r22, r16
 716:	ae 01       	movw	r20, r28
 718:	47 5e       	subi	r20, 0xE7	; 231
 71a:	5f 4f       	sbci	r21, 0xFF	; 255
 71c:	0e 94 19 02 	call	0x432	; 0x432 <_fpadd_parts>
 720:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
 724:	a0 96       	adiw	r28, 0x20	; 32
 726:	e6 e0       	ldi	r30, 0x06	; 6
 728:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__epilogue_restores__+0x18>

0000072c <__addsf3>:
 72c:	a0 e2       	ldi	r26, 0x20	; 32
 72e:	b0 e0       	ldi	r27, 0x00	; 0
 730:	ec e9       	ldi	r30, 0x9C	; 156
 732:	f3 e0       	ldi	r31, 0x03	; 3
 734:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__prologue_saves__+0x18>
 738:	69 83       	std	Y+1, r22	; 0x01
 73a:	7a 83       	std	Y+2, r23	; 0x02
 73c:	8b 83       	std	Y+3, r24	; 0x03
 73e:	9c 83       	std	Y+4, r25	; 0x04
 740:	2d 83       	std	Y+5, r18	; 0x05
 742:	3e 83       	std	Y+6, r19	; 0x06
 744:	4f 83       	std	Y+7, r20	; 0x07
 746:	58 87       	std	Y+8, r21	; 0x08
 748:	f9 e0       	ldi	r31, 0x09	; 9
 74a:	ef 2e       	mov	r14, r31
 74c:	f1 2c       	mov	r15, r1
 74e:	ec 0e       	add	r14, r28
 750:	fd 1e       	adc	r15, r29
 752:	ce 01       	movw	r24, r28
 754:	01 96       	adiw	r24, 0x01	; 1
 756:	b7 01       	movw	r22, r14
 758:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 75c:	8e 01       	movw	r16, r28
 75e:	0f 5e       	subi	r16, 0xEF	; 239
 760:	1f 4f       	sbci	r17, 0xFF	; 255
 762:	ce 01       	movw	r24, r28
 764:	05 96       	adiw	r24, 0x05	; 5
 766:	b8 01       	movw	r22, r16
 768:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 76c:	c7 01       	movw	r24, r14
 76e:	b8 01       	movw	r22, r16
 770:	ae 01       	movw	r20, r28
 772:	47 5e       	subi	r20, 0xE7	; 231
 774:	5f 4f       	sbci	r21, 0xFF	; 255
 776:	0e 94 19 02 	call	0x432	; 0x432 <_fpadd_parts>
 77a:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
 77e:	a0 96       	adiw	r28, 0x20	; 32
 780:	e6 e0       	ldi	r30, 0x06	; 6
 782:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__epilogue_restores__+0x18>

00000786 <__mulsf3>:
 786:	a0 e2       	ldi	r26, 0x20	; 32
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	e9 ec       	ldi	r30, 0xC9	; 201
 78c:	f3 e0       	ldi	r31, 0x03	; 3
 78e:	0c 94 6e 07 	jmp	0xedc	; 0xedc <__prologue_saves__>
 792:	69 83       	std	Y+1, r22	; 0x01
 794:	7a 83       	std	Y+2, r23	; 0x02
 796:	8b 83       	std	Y+3, r24	; 0x03
 798:	9c 83       	std	Y+4, r25	; 0x04
 79a:	2d 83       	std	Y+5, r18	; 0x05
 79c:	3e 83       	std	Y+6, r19	; 0x06
 79e:	4f 83       	std	Y+7, r20	; 0x07
 7a0:	58 87       	std	Y+8, r21	; 0x08
 7a2:	ce 01       	movw	r24, r28
 7a4:	01 96       	adiw	r24, 0x01	; 1
 7a6:	be 01       	movw	r22, r28
 7a8:	67 5f       	subi	r22, 0xF7	; 247
 7aa:	7f 4f       	sbci	r23, 0xFF	; 255
 7ac:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 7b0:	ce 01       	movw	r24, r28
 7b2:	05 96       	adiw	r24, 0x05	; 5
 7b4:	be 01       	movw	r22, r28
 7b6:	6f 5e       	subi	r22, 0xEF	; 239
 7b8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ba:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 7be:	99 85       	ldd	r25, Y+9	; 0x09
 7c0:	92 30       	cpi	r25, 0x02	; 2
 7c2:	88 f0       	brcs	.+34     	; 0x7e6 <__mulsf3+0x60>
 7c4:	89 89       	ldd	r24, Y+17	; 0x11
 7c6:	82 30       	cpi	r24, 0x02	; 2
 7c8:	c8 f0       	brcs	.+50     	; 0x7fc <__mulsf3+0x76>
 7ca:	94 30       	cpi	r25, 0x04	; 4
 7cc:	19 f4       	brne	.+6      	; 0x7d4 <__mulsf3+0x4e>
 7ce:	82 30       	cpi	r24, 0x02	; 2
 7d0:	51 f4       	brne	.+20     	; 0x7e6 <__mulsf3+0x60>
 7d2:	04 c0       	rjmp	.+8      	; 0x7dc <__mulsf3+0x56>
 7d4:	84 30       	cpi	r24, 0x04	; 4
 7d6:	29 f4       	brne	.+10     	; 0x7e2 <__mulsf3+0x5c>
 7d8:	92 30       	cpi	r25, 0x02	; 2
 7da:	81 f4       	brne	.+32     	; 0x7fc <__mulsf3+0x76>
 7dc:	80 e1       	ldi	r24, 0x10	; 16
 7de:	91 e0       	ldi	r25, 0x01	; 1
 7e0:	c6 c0       	rjmp	.+396    	; 0x96e <__stack+0x6f>
 7e2:	92 30       	cpi	r25, 0x02	; 2
 7e4:	49 f4       	brne	.+18     	; 0x7f8 <__mulsf3+0x72>
 7e6:	20 e0       	ldi	r18, 0x00	; 0
 7e8:	9a 85       	ldd	r25, Y+10	; 0x0a
 7ea:	8a 89       	ldd	r24, Y+18	; 0x12
 7ec:	98 13       	cpse	r25, r24
 7ee:	21 e0       	ldi	r18, 0x01	; 1
 7f0:	2a 87       	std	Y+10, r18	; 0x0a
 7f2:	ce 01       	movw	r24, r28
 7f4:	09 96       	adiw	r24, 0x09	; 9
 7f6:	bb c0       	rjmp	.+374    	; 0x96e <__stack+0x6f>
 7f8:	82 30       	cpi	r24, 0x02	; 2
 7fa:	49 f4       	brne	.+18     	; 0x80e <__mulsf3+0x88>
 7fc:	20 e0       	ldi	r18, 0x00	; 0
 7fe:	9a 85       	ldd	r25, Y+10	; 0x0a
 800:	8a 89       	ldd	r24, Y+18	; 0x12
 802:	98 13       	cpse	r25, r24
 804:	21 e0       	ldi	r18, 0x01	; 1
 806:	2a 8b       	std	Y+18, r18	; 0x12
 808:	ce 01       	movw	r24, r28
 80a:	41 96       	adiw	r24, 0x11	; 17
 80c:	b0 c0       	rjmp	.+352    	; 0x96e <__stack+0x6f>
 80e:	2d 84       	ldd	r2, Y+13	; 0x0d
 810:	3e 84       	ldd	r3, Y+14	; 0x0e
 812:	4f 84       	ldd	r4, Y+15	; 0x0f
 814:	58 88       	ldd	r5, Y+16	; 0x10
 816:	6d 88       	ldd	r6, Y+21	; 0x15
 818:	7e 88       	ldd	r7, Y+22	; 0x16
 81a:	8f 88       	ldd	r8, Y+23	; 0x17
 81c:	98 8c       	ldd	r9, Y+24	; 0x18
 81e:	ee 24       	eor	r14, r14
 820:	ff 24       	eor	r15, r15
 822:	87 01       	movw	r16, r14
 824:	aa 24       	eor	r10, r10
 826:	bb 24       	eor	r11, r11
 828:	65 01       	movw	r12, r10
 82a:	40 e0       	ldi	r20, 0x00	; 0
 82c:	50 e0       	ldi	r21, 0x00	; 0
 82e:	60 e0       	ldi	r22, 0x00	; 0
 830:	70 e0       	ldi	r23, 0x00	; 0
 832:	e0 e0       	ldi	r30, 0x00	; 0
 834:	f0 e0       	ldi	r31, 0x00	; 0
 836:	c1 01       	movw	r24, r2
 838:	81 70       	andi	r24, 0x01	; 1
 83a:	90 70       	andi	r25, 0x00	; 0
 83c:	89 2b       	or	r24, r25
 83e:	e9 f0       	breq	.+58     	; 0x87a <__mulsf3+0xf4>
 840:	e6 0c       	add	r14, r6
 842:	f7 1c       	adc	r15, r7
 844:	08 1d       	adc	r16, r8
 846:	19 1d       	adc	r17, r9
 848:	9a 01       	movw	r18, r20
 84a:	ab 01       	movw	r20, r22
 84c:	2a 0d       	add	r18, r10
 84e:	3b 1d       	adc	r19, r11
 850:	4c 1d       	adc	r20, r12
 852:	5d 1d       	adc	r21, r13
 854:	80 e0       	ldi	r24, 0x00	; 0
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	a0 e0       	ldi	r26, 0x00	; 0
 85a:	b0 e0       	ldi	r27, 0x00	; 0
 85c:	e6 14       	cp	r14, r6
 85e:	f7 04       	cpc	r15, r7
 860:	08 05       	cpc	r16, r8
 862:	19 05       	cpc	r17, r9
 864:	20 f4       	brcc	.+8      	; 0x86e <__mulsf3+0xe8>
 866:	81 e0       	ldi	r24, 0x01	; 1
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	a0 e0       	ldi	r26, 0x00	; 0
 86c:	b0 e0       	ldi	r27, 0x00	; 0
 86e:	ba 01       	movw	r22, r20
 870:	a9 01       	movw	r20, r18
 872:	48 0f       	add	r20, r24
 874:	59 1f       	adc	r21, r25
 876:	6a 1f       	adc	r22, r26
 878:	7b 1f       	adc	r23, r27
 87a:	aa 0c       	add	r10, r10
 87c:	bb 1c       	adc	r11, r11
 87e:	cc 1c       	adc	r12, r12
 880:	dd 1c       	adc	r13, r13
 882:	97 fe       	sbrs	r9, 7
 884:	08 c0       	rjmp	.+16     	; 0x896 <__mulsf3+0x110>
 886:	81 e0       	ldi	r24, 0x01	; 1
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	a0 e0       	ldi	r26, 0x00	; 0
 88c:	b0 e0       	ldi	r27, 0x00	; 0
 88e:	a8 2a       	or	r10, r24
 890:	b9 2a       	or	r11, r25
 892:	ca 2a       	or	r12, r26
 894:	db 2a       	or	r13, r27
 896:	31 96       	adiw	r30, 0x01	; 1
 898:	e0 32       	cpi	r30, 0x20	; 32
 89a:	f1 05       	cpc	r31, r1
 89c:	49 f0       	breq	.+18     	; 0x8b0 <__mulsf3+0x12a>
 89e:	66 0c       	add	r6, r6
 8a0:	77 1c       	adc	r7, r7
 8a2:	88 1c       	adc	r8, r8
 8a4:	99 1c       	adc	r9, r9
 8a6:	56 94       	lsr	r5
 8a8:	47 94       	ror	r4
 8aa:	37 94       	ror	r3
 8ac:	27 94       	ror	r2
 8ae:	c3 cf       	rjmp	.-122    	; 0x836 <__mulsf3+0xb0>
 8b0:	fa 85       	ldd	r31, Y+10	; 0x0a
 8b2:	ea 89       	ldd	r30, Y+18	; 0x12
 8b4:	2b 89       	ldd	r18, Y+19	; 0x13
 8b6:	3c 89       	ldd	r19, Y+20	; 0x14
 8b8:	8b 85       	ldd	r24, Y+11	; 0x0b
 8ba:	9c 85       	ldd	r25, Y+12	; 0x0c
 8bc:	28 0f       	add	r18, r24
 8be:	39 1f       	adc	r19, r25
 8c0:	2e 5f       	subi	r18, 0xFE	; 254
 8c2:	3f 4f       	sbci	r19, 0xFF	; 255
 8c4:	17 c0       	rjmp	.+46     	; 0x8f4 <__mulsf3+0x16e>
 8c6:	ca 01       	movw	r24, r20
 8c8:	81 70       	andi	r24, 0x01	; 1
 8ca:	90 70       	andi	r25, 0x00	; 0
 8cc:	89 2b       	or	r24, r25
 8ce:	61 f0       	breq	.+24     	; 0x8e8 <__mulsf3+0x162>
 8d0:	16 95       	lsr	r17
 8d2:	07 95       	ror	r16
 8d4:	f7 94       	ror	r15
 8d6:	e7 94       	ror	r14
 8d8:	80 e0       	ldi	r24, 0x00	; 0
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	a0 e0       	ldi	r26, 0x00	; 0
 8de:	b0 e8       	ldi	r27, 0x80	; 128
 8e0:	e8 2a       	or	r14, r24
 8e2:	f9 2a       	or	r15, r25
 8e4:	0a 2b       	or	r16, r26
 8e6:	1b 2b       	or	r17, r27
 8e8:	76 95       	lsr	r23
 8ea:	67 95       	ror	r22
 8ec:	57 95       	ror	r21
 8ee:	47 95       	ror	r20
 8f0:	2f 5f       	subi	r18, 0xFF	; 255
 8f2:	3f 4f       	sbci	r19, 0xFF	; 255
 8f4:	77 fd       	sbrc	r23, 7
 8f6:	e7 cf       	rjmp	.-50     	; 0x8c6 <__mulsf3+0x140>
 8f8:	0c c0       	rjmp	.+24     	; 0x912 <__stack+0x13>
 8fa:	44 0f       	add	r20, r20
 8fc:	55 1f       	adc	r21, r21
 8fe:	66 1f       	adc	r22, r22
 900:	77 1f       	adc	r23, r23
 902:	17 fd       	sbrc	r17, 7
 904:	41 60       	ori	r20, 0x01	; 1
 906:	ee 0c       	add	r14, r14
 908:	ff 1c       	adc	r15, r15
 90a:	00 1f       	adc	r16, r16
 90c:	11 1f       	adc	r17, r17
 90e:	21 50       	subi	r18, 0x01	; 1
 910:	30 40       	sbci	r19, 0x00	; 0
 912:	40 30       	cpi	r20, 0x00	; 0
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	59 07       	cpc	r21, r25
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	69 07       	cpc	r22, r25
 91c:	90 e4       	ldi	r25, 0x40	; 64
 91e:	79 07       	cpc	r23, r25
 920:	60 f3       	brcs	.-40     	; 0x8fa <__mulsf3+0x174>
 922:	2b 8f       	std	Y+27, r18	; 0x1b
 924:	3c 8f       	std	Y+28, r19	; 0x1c
 926:	db 01       	movw	r26, r22
 928:	ca 01       	movw	r24, r20
 92a:	8f 77       	andi	r24, 0x7F	; 127
 92c:	90 70       	andi	r25, 0x00	; 0
 92e:	a0 70       	andi	r26, 0x00	; 0
 930:	b0 70       	andi	r27, 0x00	; 0
 932:	80 34       	cpi	r24, 0x40	; 64
 934:	91 05       	cpc	r25, r1
 936:	a1 05       	cpc	r26, r1
 938:	b1 05       	cpc	r27, r1
 93a:	61 f4       	brne	.+24     	; 0x954 <__stack+0x55>
 93c:	47 fd       	sbrc	r20, 7
 93e:	0a c0       	rjmp	.+20     	; 0x954 <__stack+0x55>
 940:	e1 14       	cp	r14, r1
 942:	f1 04       	cpc	r15, r1
 944:	01 05       	cpc	r16, r1
 946:	11 05       	cpc	r17, r1
 948:	29 f0       	breq	.+10     	; 0x954 <__stack+0x55>
 94a:	40 5c       	subi	r20, 0xC0	; 192
 94c:	5f 4f       	sbci	r21, 0xFF	; 255
 94e:	6f 4f       	sbci	r22, 0xFF	; 255
 950:	7f 4f       	sbci	r23, 0xFF	; 255
 952:	40 78       	andi	r20, 0x80	; 128
 954:	1a 8e       	std	Y+26, r1	; 0x1a
 956:	fe 17       	cp	r31, r30
 958:	11 f0       	breq	.+4      	; 0x95e <__stack+0x5f>
 95a:	81 e0       	ldi	r24, 0x01	; 1
 95c:	8a 8f       	std	Y+26, r24	; 0x1a
 95e:	4d 8f       	std	Y+29, r20	; 0x1d
 960:	5e 8f       	std	Y+30, r21	; 0x1e
 962:	6f 8f       	std	Y+31, r22	; 0x1f
 964:	78 a3       	std	Y+32, r23	; 0x20
 966:	83 e0       	ldi	r24, 0x03	; 3
 968:	89 8f       	std	Y+25, r24	; 0x19
 96a:	ce 01       	movw	r24, r28
 96c:	49 96       	adiw	r24, 0x19	; 25
 96e:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
 972:	a0 96       	adiw	r28, 0x20	; 32
 974:	e2 e1       	ldi	r30, 0x12	; 18
 976:	0c 94 8a 07 	jmp	0xf14	; 0xf14 <__epilogue_restores__>

0000097a <__gtsf2>:
 97a:	a8 e1       	ldi	r26, 0x18	; 24
 97c:	b0 e0       	ldi	r27, 0x00	; 0
 97e:	e3 ec       	ldi	r30, 0xC3	; 195
 980:	f4 e0       	ldi	r31, 0x04	; 4
 982:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__prologue_saves__+0x18>
 986:	69 83       	std	Y+1, r22	; 0x01
 988:	7a 83       	std	Y+2, r23	; 0x02
 98a:	8b 83       	std	Y+3, r24	; 0x03
 98c:	9c 83       	std	Y+4, r25	; 0x04
 98e:	2d 83       	std	Y+5, r18	; 0x05
 990:	3e 83       	std	Y+6, r19	; 0x06
 992:	4f 83       	std	Y+7, r20	; 0x07
 994:	58 87       	std	Y+8, r21	; 0x08
 996:	89 e0       	ldi	r24, 0x09	; 9
 998:	e8 2e       	mov	r14, r24
 99a:	f1 2c       	mov	r15, r1
 99c:	ec 0e       	add	r14, r28
 99e:	fd 1e       	adc	r15, r29
 9a0:	ce 01       	movw	r24, r28
 9a2:	01 96       	adiw	r24, 0x01	; 1
 9a4:	b7 01       	movw	r22, r14
 9a6:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 9aa:	8e 01       	movw	r16, r28
 9ac:	0f 5e       	subi	r16, 0xEF	; 239
 9ae:	1f 4f       	sbci	r17, 0xFF	; 255
 9b0:	ce 01       	movw	r24, r28
 9b2:	05 96       	adiw	r24, 0x05	; 5
 9b4:	b8 01       	movw	r22, r16
 9b6:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 9ba:	89 85       	ldd	r24, Y+9	; 0x09
 9bc:	82 30       	cpi	r24, 0x02	; 2
 9be:	40 f0       	brcs	.+16     	; 0x9d0 <__gtsf2+0x56>
 9c0:	89 89       	ldd	r24, Y+17	; 0x11
 9c2:	82 30       	cpi	r24, 0x02	; 2
 9c4:	28 f0       	brcs	.+10     	; 0x9d0 <__gtsf2+0x56>
 9c6:	c7 01       	movw	r24, r14
 9c8:	b8 01       	movw	r22, r16
 9ca:	0e 94 ee 06 	call	0xddc	; 0xddc <__fpcmp_parts_f>
 9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <__gtsf2+0x58>
 9d0:	8f ef       	ldi	r24, 0xFF	; 255
 9d2:	68 96       	adiw	r28, 0x18	; 24
 9d4:	e6 e0       	ldi	r30, 0x06	; 6
 9d6:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__epilogue_restores__+0x18>

000009da <__gesf2>:
 9da:	a8 e1       	ldi	r26, 0x18	; 24
 9dc:	b0 e0       	ldi	r27, 0x00	; 0
 9de:	e3 ef       	ldi	r30, 0xF3	; 243
 9e0:	f4 e0       	ldi	r31, 0x04	; 4
 9e2:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__prologue_saves__+0x18>
 9e6:	69 83       	std	Y+1, r22	; 0x01
 9e8:	7a 83       	std	Y+2, r23	; 0x02
 9ea:	8b 83       	std	Y+3, r24	; 0x03
 9ec:	9c 83       	std	Y+4, r25	; 0x04
 9ee:	2d 83       	std	Y+5, r18	; 0x05
 9f0:	3e 83       	std	Y+6, r19	; 0x06
 9f2:	4f 83       	std	Y+7, r20	; 0x07
 9f4:	58 87       	std	Y+8, r21	; 0x08
 9f6:	89 e0       	ldi	r24, 0x09	; 9
 9f8:	e8 2e       	mov	r14, r24
 9fa:	f1 2c       	mov	r15, r1
 9fc:	ec 0e       	add	r14, r28
 9fe:	fd 1e       	adc	r15, r29
 a00:	ce 01       	movw	r24, r28
 a02:	01 96       	adiw	r24, 0x01	; 1
 a04:	b7 01       	movw	r22, r14
 a06:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 a0a:	8e 01       	movw	r16, r28
 a0c:	0f 5e       	subi	r16, 0xEF	; 239
 a0e:	1f 4f       	sbci	r17, 0xFF	; 255
 a10:	ce 01       	movw	r24, r28
 a12:	05 96       	adiw	r24, 0x05	; 5
 a14:	b8 01       	movw	r22, r16
 a16:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 a1a:	89 85       	ldd	r24, Y+9	; 0x09
 a1c:	82 30       	cpi	r24, 0x02	; 2
 a1e:	40 f0       	brcs	.+16     	; 0xa30 <__gesf2+0x56>
 a20:	89 89       	ldd	r24, Y+17	; 0x11
 a22:	82 30       	cpi	r24, 0x02	; 2
 a24:	28 f0       	brcs	.+10     	; 0xa30 <__gesf2+0x56>
 a26:	c7 01       	movw	r24, r14
 a28:	b8 01       	movw	r22, r16
 a2a:	0e 94 ee 06 	call	0xddc	; 0xddc <__fpcmp_parts_f>
 a2e:	01 c0       	rjmp	.+2      	; 0xa32 <__gesf2+0x58>
 a30:	8f ef       	ldi	r24, 0xFF	; 255
 a32:	68 96       	adiw	r28, 0x18	; 24
 a34:	e6 e0       	ldi	r30, 0x06	; 6
 a36:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__epilogue_restores__+0x18>

00000a3a <__ltsf2>:
 a3a:	a8 e1       	ldi	r26, 0x18	; 24
 a3c:	b0 e0       	ldi	r27, 0x00	; 0
 a3e:	e3 e2       	ldi	r30, 0x23	; 35
 a40:	f5 e0       	ldi	r31, 0x05	; 5
 a42:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__prologue_saves__+0x18>
 a46:	69 83       	std	Y+1, r22	; 0x01
 a48:	7a 83       	std	Y+2, r23	; 0x02
 a4a:	8b 83       	std	Y+3, r24	; 0x03
 a4c:	9c 83       	std	Y+4, r25	; 0x04
 a4e:	2d 83       	std	Y+5, r18	; 0x05
 a50:	3e 83       	std	Y+6, r19	; 0x06
 a52:	4f 83       	std	Y+7, r20	; 0x07
 a54:	58 87       	std	Y+8, r21	; 0x08
 a56:	89 e0       	ldi	r24, 0x09	; 9
 a58:	e8 2e       	mov	r14, r24
 a5a:	f1 2c       	mov	r15, r1
 a5c:	ec 0e       	add	r14, r28
 a5e:	fd 1e       	adc	r15, r29
 a60:	ce 01       	movw	r24, r28
 a62:	01 96       	adiw	r24, 0x01	; 1
 a64:	b7 01       	movw	r22, r14
 a66:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 a6a:	8e 01       	movw	r16, r28
 a6c:	0f 5e       	subi	r16, 0xEF	; 239
 a6e:	1f 4f       	sbci	r17, 0xFF	; 255
 a70:	ce 01       	movw	r24, r28
 a72:	05 96       	adiw	r24, 0x05	; 5
 a74:	b8 01       	movw	r22, r16
 a76:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 a7a:	89 85       	ldd	r24, Y+9	; 0x09
 a7c:	82 30       	cpi	r24, 0x02	; 2
 a7e:	40 f0       	brcs	.+16     	; 0xa90 <__ltsf2+0x56>
 a80:	89 89       	ldd	r24, Y+17	; 0x11
 a82:	82 30       	cpi	r24, 0x02	; 2
 a84:	28 f0       	brcs	.+10     	; 0xa90 <__ltsf2+0x56>
 a86:	c7 01       	movw	r24, r14
 a88:	b8 01       	movw	r22, r16
 a8a:	0e 94 ee 06 	call	0xddc	; 0xddc <__fpcmp_parts_f>
 a8e:	01 c0       	rjmp	.+2      	; 0xa92 <__ltsf2+0x58>
 a90:	81 e0       	ldi	r24, 0x01	; 1
 a92:	68 96       	adiw	r28, 0x18	; 24
 a94:	e6 e0       	ldi	r30, 0x06	; 6
 a96:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__epilogue_restores__+0x18>

00000a9a <__fixsfsi>:
 a9a:	ac e0       	ldi	r26, 0x0C	; 12
 a9c:	b0 e0       	ldi	r27, 0x00	; 0
 a9e:	e3 e5       	ldi	r30, 0x53	; 83
 aa0:	f5 e0       	ldi	r31, 0x05	; 5
 aa2:	0c 94 7e 07 	jmp	0xefc	; 0xefc <__prologue_saves__+0x20>
 aa6:	69 83       	std	Y+1, r22	; 0x01
 aa8:	7a 83       	std	Y+2, r23	; 0x02
 aaa:	8b 83       	std	Y+3, r24	; 0x03
 aac:	9c 83       	std	Y+4, r25	; 0x04
 aae:	ce 01       	movw	r24, r28
 ab0:	01 96       	adiw	r24, 0x01	; 1
 ab2:	be 01       	movw	r22, r28
 ab4:	6b 5f       	subi	r22, 0xFB	; 251
 ab6:	7f 4f       	sbci	r23, 0xFF	; 255
 ab8:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
 abc:	8d 81       	ldd	r24, Y+5	; 0x05
 abe:	82 30       	cpi	r24, 0x02	; 2
 ac0:	61 f1       	breq	.+88     	; 0xb1a <__fixsfsi+0x80>
 ac2:	82 30       	cpi	r24, 0x02	; 2
 ac4:	50 f1       	brcs	.+84     	; 0xb1a <__fixsfsi+0x80>
 ac6:	84 30       	cpi	r24, 0x04	; 4
 ac8:	21 f4       	brne	.+8      	; 0xad2 <__fixsfsi+0x38>
 aca:	8e 81       	ldd	r24, Y+6	; 0x06
 acc:	88 23       	and	r24, r24
 ace:	51 f1       	breq	.+84     	; 0xb24 <__fixsfsi+0x8a>
 ad0:	2e c0       	rjmp	.+92     	; 0xb2e <__fixsfsi+0x94>
 ad2:	2f 81       	ldd	r18, Y+7	; 0x07
 ad4:	38 85       	ldd	r19, Y+8	; 0x08
 ad6:	37 fd       	sbrc	r19, 7
 ad8:	20 c0       	rjmp	.+64     	; 0xb1a <__fixsfsi+0x80>
 ada:	6e 81       	ldd	r22, Y+6	; 0x06
 adc:	2f 31       	cpi	r18, 0x1F	; 31
 ade:	31 05       	cpc	r19, r1
 ae0:	1c f0       	brlt	.+6      	; 0xae8 <__fixsfsi+0x4e>
 ae2:	66 23       	and	r22, r22
 ae4:	f9 f0       	breq	.+62     	; 0xb24 <__fixsfsi+0x8a>
 ae6:	23 c0       	rjmp	.+70     	; 0xb2e <__fixsfsi+0x94>
 ae8:	8e e1       	ldi	r24, 0x1E	; 30
 aea:	90 e0       	ldi	r25, 0x00	; 0
 aec:	82 1b       	sub	r24, r18
 aee:	93 0b       	sbc	r25, r19
 af0:	29 85       	ldd	r18, Y+9	; 0x09
 af2:	3a 85       	ldd	r19, Y+10	; 0x0a
 af4:	4b 85       	ldd	r20, Y+11	; 0x0b
 af6:	5c 85       	ldd	r21, Y+12	; 0x0c
 af8:	04 c0       	rjmp	.+8      	; 0xb02 <__fixsfsi+0x68>
 afa:	56 95       	lsr	r21
 afc:	47 95       	ror	r20
 afe:	37 95       	ror	r19
 b00:	27 95       	ror	r18
 b02:	8a 95       	dec	r24
 b04:	d2 f7       	brpl	.-12     	; 0xafa <__fixsfsi+0x60>
 b06:	66 23       	and	r22, r22
 b08:	b1 f0       	breq	.+44     	; 0xb36 <__fixsfsi+0x9c>
 b0a:	50 95       	com	r21
 b0c:	40 95       	com	r20
 b0e:	30 95       	com	r19
 b10:	21 95       	neg	r18
 b12:	3f 4f       	sbci	r19, 0xFF	; 255
 b14:	4f 4f       	sbci	r20, 0xFF	; 255
 b16:	5f 4f       	sbci	r21, 0xFF	; 255
 b18:	0e c0       	rjmp	.+28     	; 0xb36 <__fixsfsi+0x9c>
 b1a:	20 e0       	ldi	r18, 0x00	; 0
 b1c:	30 e0       	ldi	r19, 0x00	; 0
 b1e:	40 e0       	ldi	r20, 0x00	; 0
 b20:	50 e0       	ldi	r21, 0x00	; 0
 b22:	09 c0       	rjmp	.+18     	; 0xb36 <__fixsfsi+0x9c>
 b24:	2f ef       	ldi	r18, 0xFF	; 255
 b26:	3f ef       	ldi	r19, 0xFF	; 255
 b28:	4f ef       	ldi	r20, 0xFF	; 255
 b2a:	5f e7       	ldi	r21, 0x7F	; 127
 b2c:	04 c0       	rjmp	.+8      	; 0xb36 <__fixsfsi+0x9c>
 b2e:	20 e0       	ldi	r18, 0x00	; 0
 b30:	30 e0       	ldi	r19, 0x00	; 0
 b32:	40 e0       	ldi	r20, 0x00	; 0
 b34:	50 e8       	ldi	r21, 0x80	; 128
 b36:	b9 01       	movw	r22, r18
 b38:	ca 01       	movw	r24, r20
 b3a:	2c 96       	adiw	r28, 0x0c	; 12
 b3c:	e2 e0       	ldi	r30, 0x02	; 2
 b3e:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__epilogue_restores__+0x20>

00000b42 <__pack_f>:
 b42:	df 92       	push	r13
 b44:	ef 92       	push	r14
 b46:	ff 92       	push	r15
 b48:	0f 93       	push	r16
 b4a:	1f 93       	push	r17
 b4c:	fc 01       	movw	r30, r24
 b4e:	e4 80       	ldd	r14, Z+4	; 0x04
 b50:	f5 80       	ldd	r15, Z+5	; 0x05
 b52:	06 81       	ldd	r16, Z+6	; 0x06
 b54:	17 81       	ldd	r17, Z+7	; 0x07
 b56:	d1 80       	ldd	r13, Z+1	; 0x01
 b58:	80 81       	ld	r24, Z
 b5a:	82 30       	cpi	r24, 0x02	; 2
 b5c:	48 f4       	brcc	.+18     	; 0xb70 <__pack_f+0x2e>
 b5e:	80 e0       	ldi	r24, 0x00	; 0
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	a0 e1       	ldi	r26, 0x10	; 16
 b64:	b0 e0       	ldi	r27, 0x00	; 0
 b66:	e8 2a       	or	r14, r24
 b68:	f9 2a       	or	r15, r25
 b6a:	0a 2b       	or	r16, r26
 b6c:	1b 2b       	or	r17, r27
 b6e:	a5 c0       	rjmp	.+330    	; 0xcba <__pack_f+0x178>
 b70:	84 30       	cpi	r24, 0x04	; 4
 b72:	09 f4       	brne	.+2      	; 0xb76 <__pack_f+0x34>
 b74:	9f c0       	rjmp	.+318    	; 0xcb4 <__pack_f+0x172>
 b76:	82 30       	cpi	r24, 0x02	; 2
 b78:	21 f4       	brne	.+8      	; 0xb82 <__pack_f+0x40>
 b7a:	ee 24       	eor	r14, r14
 b7c:	ff 24       	eor	r15, r15
 b7e:	87 01       	movw	r16, r14
 b80:	05 c0       	rjmp	.+10     	; 0xb8c <__pack_f+0x4a>
 b82:	e1 14       	cp	r14, r1
 b84:	f1 04       	cpc	r15, r1
 b86:	01 05       	cpc	r16, r1
 b88:	11 05       	cpc	r17, r1
 b8a:	19 f4       	brne	.+6      	; 0xb92 <__pack_f+0x50>
 b8c:	e0 e0       	ldi	r30, 0x00	; 0
 b8e:	f0 e0       	ldi	r31, 0x00	; 0
 b90:	96 c0       	rjmp	.+300    	; 0xcbe <__pack_f+0x17c>
 b92:	62 81       	ldd	r22, Z+2	; 0x02
 b94:	73 81       	ldd	r23, Z+3	; 0x03
 b96:	9f ef       	ldi	r25, 0xFF	; 255
 b98:	62 38       	cpi	r22, 0x82	; 130
 b9a:	79 07       	cpc	r23, r25
 b9c:	0c f0       	brlt	.+2      	; 0xba0 <__pack_f+0x5e>
 b9e:	5b c0       	rjmp	.+182    	; 0xc56 <__pack_f+0x114>
 ba0:	22 e8       	ldi	r18, 0x82	; 130
 ba2:	3f ef       	ldi	r19, 0xFF	; 255
 ba4:	26 1b       	sub	r18, r22
 ba6:	37 0b       	sbc	r19, r23
 ba8:	2a 31       	cpi	r18, 0x1A	; 26
 baa:	31 05       	cpc	r19, r1
 bac:	2c f0       	brlt	.+10     	; 0xbb8 <__pack_f+0x76>
 bae:	20 e0       	ldi	r18, 0x00	; 0
 bb0:	30 e0       	ldi	r19, 0x00	; 0
 bb2:	40 e0       	ldi	r20, 0x00	; 0
 bb4:	50 e0       	ldi	r21, 0x00	; 0
 bb6:	2a c0       	rjmp	.+84     	; 0xc0c <__pack_f+0xca>
 bb8:	b8 01       	movw	r22, r16
 bba:	a7 01       	movw	r20, r14
 bbc:	02 2e       	mov	r0, r18
 bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <__pack_f+0x86>
 bc0:	76 95       	lsr	r23
 bc2:	67 95       	ror	r22
 bc4:	57 95       	ror	r21
 bc6:	47 95       	ror	r20
 bc8:	0a 94       	dec	r0
 bca:	d2 f7       	brpl	.-12     	; 0xbc0 <__pack_f+0x7e>
 bcc:	81 e0       	ldi	r24, 0x01	; 1
 bce:	90 e0       	ldi	r25, 0x00	; 0
 bd0:	a0 e0       	ldi	r26, 0x00	; 0
 bd2:	b0 e0       	ldi	r27, 0x00	; 0
 bd4:	04 c0       	rjmp	.+8      	; 0xbde <__pack_f+0x9c>
 bd6:	88 0f       	add	r24, r24
 bd8:	99 1f       	adc	r25, r25
 bda:	aa 1f       	adc	r26, r26
 bdc:	bb 1f       	adc	r27, r27
 bde:	2a 95       	dec	r18
 be0:	d2 f7       	brpl	.-12     	; 0xbd6 <__pack_f+0x94>
 be2:	01 97       	sbiw	r24, 0x01	; 1
 be4:	a1 09       	sbc	r26, r1
 be6:	b1 09       	sbc	r27, r1
 be8:	8e 21       	and	r24, r14
 bea:	9f 21       	and	r25, r15
 bec:	a0 23       	and	r26, r16
 bee:	b1 23       	and	r27, r17
 bf0:	00 97       	sbiw	r24, 0x00	; 0
 bf2:	a1 05       	cpc	r26, r1
 bf4:	b1 05       	cpc	r27, r1
 bf6:	21 f0       	breq	.+8      	; 0xc00 <__pack_f+0xbe>
 bf8:	81 e0       	ldi	r24, 0x01	; 1
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	a0 e0       	ldi	r26, 0x00	; 0
 bfe:	b0 e0       	ldi	r27, 0x00	; 0
 c00:	9a 01       	movw	r18, r20
 c02:	ab 01       	movw	r20, r22
 c04:	28 2b       	or	r18, r24
 c06:	39 2b       	or	r19, r25
 c08:	4a 2b       	or	r20, r26
 c0a:	5b 2b       	or	r21, r27
 c0c:	da 01       	movw	r26, r20
 c0e:	c9 01       	movw	r24, r18
 c10:	8f 77       	andi	r24, 0x7F	; 127
 c12:	90 70       	andi	r25, 0x00	; 0
 c14:	a0 70       	andi	r26, 0x00	; 0
 c16:	b0 70       	andi	r27, 0x00	; 0
 c18:	80 34       	cpi	r24, 0x40	; 64
 c1a:	91 05       	cpc	r25, r1
 c1c:	a1 05       	cpc	r26, r1
 c1e:	b1 05       	cpc	r27, r1
 c20:	39 f4       	brne	.+14     	; 0xc30 <__pack_f+0xee>
 c22:	27 ff       	sbrs	r18, 7
 c24:	09 c0       	rjmp	.+18     	; 0xc38 <__pack_f+0xf6>
 c26:	20 5c       	subi	r18, 0xC0	; 192
 c28:	3f 4f       	sbci	r19, 0xFF	; 255
 c2a:	4f 4f       	sbci	r20, 0xFF	; 255
 c2c:	5f 4f       	sbci	r21, 0xFF	; 255
 c2e:	04 c0       	rjmp	.+8      	; 0xc38 <__pack_f+0xf6>
 c30:	21 5c       	subi	r18, 0xC1	; 193
 c32:	3f 4f       	sbci	r19, 0xFF	; 255
 c34:	4f 4f       	sbci	r20, 0xFF	; 255
 c36:	5f 4f       	sbci	r21, 0xFF	; 255
 c38:	e0 e0       	ldi	r30, 0x00	; 0
 c3a:	f0 e0       	ldi	r31, 0x00	; 0
 c3c:	20 30       	cpi	r18, 0x00	; 0
 c3e:	a0 e0       	ldi	r26, 0x00	; 0
 c40:	3a 07       	cpc	r19, r26
 c42:	a0 e0       	ldi	r26, 0x00	; 0
 c44:	4a 07       	cpc	r20, r26
 c46:	a0 e4       	ldi	r26, 0x40	; 64
 c48:	5a 07       	cpc	r21, r26
 c4a:	10 f0       	brcs	.+4      	; 0xc50 <__pack_f+0x10e>
 c4c:	e1 e0       	ldi	r30, 0x01	; 1
 c4e:	f0 e0       	ldi	r31, 0x00	; 0
 c50:	79 01       	movw	r14, r18
 c52:	8a 01       	movw	r16, r20
 c54:	27 c0       	rjmp	.+78     	; 0xca4 <__pack_f+0x162>
 c56:	60 38       	cpi	r22, 0x80	; 128
 c58:	71 05       	cpc	r23, r1
 c5a:	64 f5       	brge	.+88     	; 0xcb4 <__pack_f+0x172>
 c5c:	fb 01       	movw	r30, r22
 c5e:	e1 58       	subi	r30, 0x81	; 129
 c60:	ff 4f       	sbci	r31, 0xFF	; 255
 c62:	d8 01       	movw	r26, r16
 c64:	c7 01       	movw	r24, r14
 c66:	8f 77       	andi	r24, 0x7F	; 127
 c68:	90 70       	andi	r25, 0x00	; 0
 c6a:	a0 70       	andi	r26, 0x00	; 0
 c6c:	b0 70       	andi	r27, 0x00	; 0
 c6e:	80 34       	cpi	r24, 0x40	; 64
 c70:	91 05       	cpc	r25, r1
 c72:	a1 05       	cpc	r26, r1
 c74:	b1 05       	cpc	r27, r1
 c76:	39 f4       	brne	.+14     	; 0xc86 <__pack_f+0x144>
 c78:	e7 fe       	sbrs	r14, 7
 c7a:	0d c0       	rjmp	.+26     	; 0xc96 <__pack_f+0x154>
 c7c:	80 e4       	ldi	r24, 0x40	; 64
 c7e:	90 e0       	ldi	r25, 0x00	; 0
 c80:	a0 e0       	ldi	r26, 0x00	; 0
 c82:	b0 e0       	ldi	r27, 0x00	; 0
 c84:	04 c0       	rjmp	.+8      	; 0xc8e <__pack_f+0x14c>
 c86:	8f e3       	ldi	r24, 0x3F	; 63
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	a0 e0       	ldi	r26, 0x00	; 0
 c8c:	b0 e0       	ldi	r27, 0x00	; 0
 c8e:	e8 0e       	add	r14, r24
 c90:	f9 1e       	adc	r15, r25
 c92:	0a 1f       	adc	r16, r26
 c94:	1b 1f       	adc	r17, r27
 c96:	17 ff       	sbrs	r17, 7
 c98:	05 c0       	rjmp	.+10     	; 0xca4 <__pack_f+0x162>
 c9a:	16 95       	lsr	r17
 c9c:	07 95       	ror	r16
 c9e:	f7 94       	ror	r15
 ca0:	e7 94       	ror	r14
 ca2:	31 96       	adiw	r30, 0x01	; 1
 ca4:	87 e0       	ldi	r24, 0x07	; 7
 ca6:	16 95       	lsr	r17
 ca8:	07 95       	ror	r16
 caa:	f7 94       	ror	r15
 cac:	e7 94       	ror	r14
 cae:	8a 95       	dec	r24
 cb0:	d1 f7       	brne	.-12     	; 0xca6 <__pack_f+0x164>
 cb2:	05 c0       	rjmp	.+10     	; 0xcbe <__pack_f+0x17c>
 cb4:	ee 24       	eor	r14, r14
 cb6:	ff 24       	eor	r15, r15
 cb8:	87 01       	movw	r16, r14
 cba:	ef ef       	ldi	r30, 0xFF	; 255
 cbc:	f0 e0       	ldi	r31, 0x00	; 0
 cbe:	6e 2f       	mov	r22, r30
 cc0:	67 95       	ror	r22
 cc2:	66 27       	eor	r22, r22
 cc4:	67 95       	ror	r22
 cc6:	90 2f       	mov	r25, r16
 cc8:	9f 77       	andi	r25, 0x7F	; 127
 cca:	d7 94       	ror	r13
 ccc:	dd 24       	eor	r13, r13
 cce:	d7 94       	ror	r13
 cd0:	8e 2f       	mov	r24, r30
 cd2:	86 95       	lsr	r24
 cd4:	49 2f       	mov	r20, r25
 cd6:	46 2b       	or	r20, r22
 cd8:	58 2f       	mov	r21, r24
 cda:	5d 29       	or	r21, r13
 cdc:	b7 01       	movw	r22, r14
 cde:	ca 01       	movw	r24, r20
 ce0:	1f 91       	pop	r17
 ce2:	0f 91       	pop	r16
 ce4:	ff 90       	pop	r15
 ce6:	ef 90       	pop	r14
 ce8:	df 90       	pop	r13
 cea:	08 95       	ret

00000cec <__unpack_f>:
 cec:	fc 01       	movw	r30, r24
 cee:	db 01       	movw	r26, r22
 cf0:	40 81       	ld	r20, Z
 cf2:	51 81       	ldd	r21, Z+1	; 0x01
 cf4:	22 81       	ldd	r18, Z+2	; 0x02
 cf6:	62 2f       	mov	r22, r18
 cf8:	6f 77       	andi	r22, 0x7F	; 127
 cfa:	70 e0       	ldi	r23, 0x00	; 0
 cfc:	22 1f       	adc	r18, r18
 cfe:	22 27       	eor	r18, r18
 d00:	22 1f       	adc	r18, r18
 d02:	93 81       	ldd	r25, Z+3	; 0x03
 d04:	89 2f       	mov	r24, r25
 d06:	88 0f       	add	r24, r24
 d08:	82 2b       	or	r24, r18
 d0a:	28 2f       	mov	r18, r24
 d0c:	30 e0       	ldi	r19, 0x00	; 0
 d0e:	99 1f       	adc	r25, r25
 d10:	99 27       	eor	r25, r25
 d12:	99 1f       	adc	r25, r25
 d14:	11 96       	adiw	r26, 0x01	; 1
 d16:	9c 93       	st	X, r25
 d18:	11 97       	sbiw	r26, 0x01	; 1
 d1a:	21 15       	cp	r18, r1
 d1c:	31 05       	cpc	r19, r1
 d1e:	a9 f5       	brne	.+106    	; 0xd8a <__unpack_f+0x9e>
 d20:	41 15       	cp	r20, r1
 d22:	51 05       	cpc	r21, r1
 d24:	61 05       	cpc	r22, r1
 d26:	71 05       	cpc	r23, r1
 d28:	11 f4       	brne	.+4      	; 0xd2e <__unpack_f+0x42>
 d2a:	82 e0       	ldi	r24, 0x02	; 2
 d2c:	37 c0       	rjmp	.+110    	; 0xd9c <__unpack_f+0xb0>
 d2e:	82 e8       	ldi	r24, 0x82	; 130
 d30:	9f ef       	ldi	r25, 0xFF	; 255
 d32:	13 96       	adiw	r26, 0x03	; 3
 d34:	9c 93       	st	X, r25
 d36:	8e 93       	st	-X, r24
 d38:	12 97       	sbiw	r26, 0x02	; 2
 d3a:	9a 01       	movw	r18, r20
 d3c:	ab 01       	movw	r20, r22
 d3e:	67 e0       	ldi	r22, 0x07	; 7
 d40:	22 0f       	add	r18, r18
 d42:	33 1f       	adc	r19, r19
 d44:	44 1f       	adc	r20, r20
 d46:	55 1f       	adc	r21, r21
 d48:	6a 95       	dec	r22
 d4a:	d1 f7       	brne	.-12     	; 0xd40 <__unpack_f+0x54>
 d4c:	83 e0       	ldi	r24, 0x03	; 3
 d4e:	8c 93       	st	X, r24
 d50:	0d c0       	rjmp	.+26     	; 0xd6c <__unpack_f+0x80>
 d52:	22 0f       	add	r18, r18
 d54:	33 1f       	adc	r19, r19
 d56:	44 1f       	adc	r20, r20
 d58:	55 1f       	adc	r21, r21
 d5a:	12 96       	adiw	r26, 0x02	; 2
 d5c:	8d 91       	ld	r24, X+
 d5e:	9c 91       	ld	r25, X
 d60:	13 97       	sbiw	r26, 0x03	; 3
 d62:	01 97       	sbiw	r24, 0x01	; 1
 d64:	13 96       	adiw	r26, 0x03	; 3
 d66:	9c 93       	st	X, r25
 d68:	8e 93       	st	-X, r24
 d6a:	12 97       	sbiw	r26, 0x02	; 2
 d6c:	20 30       	cpi	r18, 0x00	; 0
 d6e:	80 e0       	ldi	r24, 0x00	; 0
 d70:	38 07       	cpc	r19, r24
 d72:	80 e0       	ldi	r24, 0x00	; 0
 d74:	48 07       	cpc	r20, r24
 d76:	80 e4       	ldi	r24, 0x40	; 64
 d78:	58 07       	cpc	r21, r24
 d7a:	58 f3       	brcs	.-42     	; 0xd52 <__unpack_f+0x66>
 d7c:	14 96       	adiw	r26, 0x04	; 4
 d7e:	2d 93       	st	X+, r18
 d80:	3d 93       	st	X+, r19
 d82:	4d 93       	st	X+, r20
 d84:	5c 93       	st	X, r21
 d86:	17 97       	sbiw	r26, 0x07	; 7
 d88:	08 95       	ret
 d8a:	2f 3f       	cpi	r18, 0xFF	; 255
 d8c:	31 05       	cpc	r19, r1
 d8e:	79 f4       	brne	.+30     	; 0xdae <__unpack_f+0xc2>
 d90:	41 15       	cp	r20, r1
 d92:	51 05       	cpc	r21, r1
 d94:	61 05       	cpc	r22, r1
 d96:	71 05       	cpc	r23, r1
 d98:	19 f4       	brne	.+6      	; 0xda0 <__unpack_f+0xb4>
 d9a:	84 e0       	ldi	r24, 0x04	; 4
 d9c:	8c 93       	st	X, r24
 d9e:	08 95       	ret
 da0:	64 ff       	sbrs	r22, 4
 da2:	03 c0       	rjmp	.+6      	; 0xdaa <__unpack_f+0xbe>
 da4:	81 e0       	ldi	r24, 0x01	; 1
 da6:	8c 93       	st	X, r24
 da8:	12 c0       	rjmp	.+36     	; 0xdce <__unpack_f+0xe2>
 daa:	1c 92       	st	X, r1
 dac:	10 c0       	rjmp	.+32     	; 0xdce <__unpack_f+0xe2>
 dae:	2f 57       	subi	r18, 0x7F	; 127
 db0:	30 40       	sbci	r19, 0x00	; 0
 db2:	13 96       	adiw	r26, 0x03	; 3
 db4:	3c 93       	st	X, r19
 db6:	2e 93       	st	-X, r18
 db8:	12 97       	sbiw	r26, 0x02	; 2
 dba:	83 e0       	ldi	r24, 0x03	; 3
 dbc:	8c 93       	st	X, r24
 dbe:	87 e0       	ldi	r24, 0x07	; 7
 dc0:	44 0f       	add	r20, r20
 dc2:	55 1f       	adc	r21, r21
 dc4:	66 1f       	adc	r22, r22
 dc6:	77 1f       	adc	r23, r23
 dc8:	8a 95       	dec	r24
 dca:	d1 f7       	brne	.-12     	; 0xdc0 <__unpack_f+0xd4>
 dcc:	70 64       	ori	r23, 0x40	; 64
 dce:	14 96       	adiw	r26, 0x04	; 4
 dd0:	4d 93       	st	X+, r20
 dd2:	5d 93       	st	X+, r21
 dd4:	6d 93       	st	X+, r22
 dd6:	7c 93       	st	X, r23
 dd8:	17 97       	sbiw	r26, 0x07	; 7
 dda:	08 95       	ret

00000ddc <__fpcmp_parts_f>:
 ddc:	1f 93       	push	r17
 dde:	dc 01       	movw	r26, r24
 de0:	fb 01       	movw	r30, r22
 de2:	9c 91       	ld	r25, X
 de4:	92 30       	cpi	r25, 0x02	; 2
 de6:	08 f4       	brcc	.+2      	; 0xdea <__fpcmp_parts_f+0xe>
 de8:	47 c0       	rjmp	.+142    	; 0xe78 <__fpcmp_parts_f+0x9c>
 dea:	80 81       	ld	r24, Z
 dec:	82 30       	cpi	r24, 0x02	; 2
 dee:	08 f4       	brcc	.+2      	; 0xdf2 <__fpcmp_parts_f+0x16>
 df0:	43 c0       	rjmp	.+134    	; 0xe78 <__fpcmp_parts_f+0x9c>
 df2:	94 30       	cpi	r25, 0x04	; 4
 df4:	51 f4       	brne	.+20     	; 0xe0a <__fpcmp_parts_f+0x2e>
 df6:	11 96       	adiw	r26, 0x01	; 1
 df8:	1c 91       	ld	r17, X
 dfa:	84 30       	cpi	r24, 0x04	; 4
 dfc:	99 f5       	brne	.+102    	; 0xe64 <__fpcmp_parts_f+0x88>
 dfe:	81 81       	ldd	r24, Z+1	; 0x01
 e00:	68 2f       	mov	r22, r24
 e02:	70 e0       	ldi	r23, 0x00	; 0
 e04:	61 1b       	sub	r22, r17
 e06:	71 09       	sbc	r23, r1
 e08:	3f c0       	rjmp	.+126    	; 0xe88 <__fpcmp_parts_f+0xac>
 e0a:	84 30       	cpi	r24, 0x04	; 4
 e0c:	21 f0       	breq	.+8      	; 0xe16 <__fpcmp_parts_f+0x3a>
 e0e:	92 30       	cpi	r25, 0x02	; 2
 e10:	31 f4       	brne	.+12     	; 0xe1e <__fpcmp_parts_f+0x42>
 e12:	82 30       	cpi	r24, 0x02	; 2
 e14:	b9 f1       	breq	.+110    	; 0xe84 <__fpcmp_parts_f+0xa8>
 e16:	81 81       	ldd	r24, Z+1	; 0x01
 e18:	88 23       	and	r24, r24
 e1a:	89 f1       	breq	.+98     	; 0xe7e <__fpcmp_parts_f+0xa2>
 e1c:	2d c0       	rjmp	.+90     	; 0xe78 <__fpcmp_parts_f+0x9c>
 e1e:	11 96       	adiw	r26, 0x01	; 1
 e20:	1c 91       	ld	r17, X
 e22:	11 97       	sbiw	r26, 0x01	; 1
 e24:	82 30       	cpi	r24, 0x02	; 2
 e26:	f1 f0       	breq	.+60     	; 0xe64 <__fpcmp_parts_f+0x88>
 e28:	81 81       	ldd	r24, Z+1	; 0x01
 e2a:	18 17       	cp	r17, r24
 e2c:	d9 f4       	brne	.+54     	; 0xe64 <__fpcmp_parts_f+0x88>
 e2e:	12 96       	adiw	r26, 0x02	; 2
 e30:	2d 91       	ld	r18, X+
 e32:	3c 91       	ld	r19, X
 e34:	13 97       	sbiw	r26, 0x03	; 3
 e36:	82 81       	ldd	r24, Z+2	; 0x02
 e38:	93 81       	ldd	r25, Z+3	; 0x03
 e3a:	82 17       	cp	r24, r18
 e3c:	93 07       	cpc	r25, r19
 e3e:	94 f0       	brlt	.+36     	; 0xe64 <__fpcmp_parts_f+0x88>
 e40:	28 17       	cp	r18, r24
 e42:	39 07       	cpc	r19, r25
 e44:	bc f0       	brlt	.+46     	; 0xe74 <__fpcmp_parts_f+0x98>
 e46:	14 96       	adiw	r26, 0x04	; 4
 e48:	8d 91       	ld	r24, X+
 e4a:	9d 91       	ld	r25, X+
 e4c:	0d 90       	ld	r0, X+
 e4e:	bc 91       	ld	r27, X
 e50:	a0 2d       	mov	r26, r0
 e52:	24 81       	ldd	r18, Z+4	; 0x04
 e54:	35 81       	ldd	r19, Z+5	; 0x05
 e56:	46 81       	ldd	r20, Z+6	; 0x06
 e58:	57 81       	ldd	r21, Z+7	; 0x07
 e5a:	28 17       	cp	r18, r24
 e5c:	39 07       	cpc	r19, r25
 e5e:	4a 07       	cpc	r20, r26
 e60:	5b 07       	cpc	r21, r27
 e62:	18 f4       	brcc	.+6      	; 0xe6a <__fpcmp_parts_f+0x8e>
 e64:	11 23       	and	r17, r17
 e66:	41 f0       	breq	.+16     	; 0xe78 <__fpcmp_parts_f+0x9c>
 e68:	0a c0       	rjmp	.+20     	; 0xe7e <__fpcmp_parts_f+0xa2>
 e6a:	82 17       	cp	r24, r18
 e6c:	93 07       	cpc	r25, r19
 e6e:	a4 07       	cpc	r26, r20
 e70:	b5 07       	cpc	r27, r21
 e72:	40 f4       	brcc	.+16     	; 0xe84 <__fpcmp_parts_f+0xa8>
 e74:	11 23       	and	r17, r17
 e76:	19 f0       	breq	.+6      	; 0xe7e <__fpcmp_parts_f+0xa2>
 e78:	61 e0       	ldi	r22, 0x01	; 1
 e7a:	70 e0       	ldi	r23, 0x00	; 0
 e7c:	05 c0       	rjmp	.+10     	; 0xe88 <__fpcmp_parts_f+0xac>
 e7e:	6f ef       	ldi	r22, 0xFF	; 255
 e80:	7f ef       	ldi	r23, 0xFF	; 255
 e82:	02 c0       	rjmp	.+4      	; 0xe88 <__fpcmp_parts_f+0xac>
 e84:	60 e0       	ldi	r22, 0x00	; 0
 e86:	70 e0       	ldi	r23, 0x00	; 0
 e88:	cb 01       	movw	r24, r22
 e8a:	1f 91       	pop	r17
 e8c:	08 95       	ret

00000e8e <__divmodhi4>:
 e8e:	97 fb       	bst	r25, 7
 e90:	09 2e       	mov	r0, r25
 e92:	07 26       	eor	r0, r23
 e94:	0a d0       	rcall	.+20     	; 0xeaa <__divmodhi4_neg1>
 e96:	77 fd       	sbrc	r23, 7
 e98:	04 d0       	rcall	.+8      	; 0xea2 <__divmodhi4_neg2>
 e9a:	0c d0       	rcall	.+24     	; 0xeb4 <__udivmodhi4>
 e9c:	06 d0       	rcall	.+12     	; 0xeaa <__divmodhi4_neg1>
 e9e:	00 20       	and	r0, r0
 ea0:	1a f4       	brpl	.+6      	; 0xea8 <__divmodhi4_exit>

00000ea2 <__divmodhi4_neg2>:
 ea2:	70 95       	com	r23
 ea4:	61 95       	neg	r22
 ea6:	7f 4f       	sbci	r23, 0xFF	; 255

00000ea8 <__divmodhi4_exit>:
 ea8:	08 95       	ret

00000eaa <__divmodhi4_neg1>:
 eaa:	f6 f7       	brtc	.-4      	; 0xea8 <__divmodhi4_exit>
 eac:	90 95       	com	r25
 eae:	81 95       	neg	r24
 eb0:	9f 4f       	sbci	r25, 0xFF	; 255
 eb2:	08 95       	ret

00000eb4 <__udivmodhi4>:
 eb4:	aa 1b       	sub	r26, r26
 eb6:	bb 1b       	sub	r27, r27
 eb8:	51 e1       	ldi	r21, 0x11	; 17
 eba:	07 c0       	rjmp	.+14     	; 0xeca <__udivmodhi4_ep>

00000ebc <__udivmodhi4_loop>:
 ebc:	aa 1f       	adc	r26, r26
 ebe:	bb 1f       	adc	r27, r27
 ec0:	a6 17       	cp	r26, r22
 ec2:	b7 07       	cpc	r27, r23
 ec4:	10 f0       	brcs	.+4      	; 0xeca <__udivmodhi4_ep>
 ec6:	a6 1b       	sub	r26, r22
 ec8:	b7 0b       	sbc	r27, r23

00000eca <__udivmodhi4_ep>:
 eca:	88 1f       	adc	r24, r24
 ecc:	99 1f       	adc	r25, r25
 ece:	5a 95       	dec	r21
 ed0:	a9 f7       	brne	.-22     	; 0xebc <__udivmodhi4_loop>
 ed2:	80 95       	com	r24
 ed4:	90 95       	com	r25
 ed6:	bc 01       	movw	r22, r24
 ed8:	cd 01       	movw	r24, r26
 eda:	08 95       	ret

00000edc <__prologue_saves__>:
 edc:	2f 92       	push	r2
 ede:	3f 92       	push	r3
 ee0:	4f 92       	push	r4
 ee2:	5f 92       	push	r5
 ee4:	6f 92       	push	r6
 ee6:	7f 92       	push	r7
 ee8:	8f 92       	push	r8
 eea:	9f 92       	push	r9
 eec:	af 92       	push	r10
 eee:	bf 92       	push	r11
 ef0:	cf 92       	push	r12
 ef2:	df 92       	push	r13
 ef4:	ef 92       	push	r14
 ef6:	ff 92       	push	r15
 ef8:	0f 93       	push	r16
 efa:	1f 93       	push	r17
 efc:	cf 93       	push	r28
 efe:	df 93       	push	r29
 f00:	cd b7       	in	r28, 0x3d	; 61
 f02:	de b7       	in	r29, 0x3e	; 62
 f04:	ca 1b       	sub	r28, r26
 f06:	db 0b       	sbc	r29, r27
 f08:	0f b6       	in	r0, 0x3f	; 63
 f0a:	f8 94       	cli
 f0c:	de bf       	out	0x3e, r29	; 62
 f0e:	0f be       	out	0x3f, r0	; 63
 f10:	cd bf       	out	0x3d, r28	; 61
 f12:	09 94       	ijmp

00000f14 <__epilogue_restores__>:
 f14:	2a 88       	ldd	r2, Y+18	; 0x12
 f16:	39 88       	ldd	r3, Y+17	; 0x11
 f18:	48 88       	ldd	r4, Y+16	; 0x10
 f1a:	5f 84       	ldd	r5, Y+15	; 0x0f
 f1c:	6e 84       	ldd	r6, Y+14	; 0x0e
 f1e:	7d 84       	ldd	r7, Y+13	; 0x0d
 f20:	8c 84       	ldd	r8, Y+12	; 0x0c
 f22:	9b 84       	ldd	r9, Y+11	; 0x0b
 f24:	aa 84       	ldd	r10, Y+10	; 0x0a
 f26:	b9 84       	ldd	r11, Y+9	; 0x09
 f28:	c8 84       	ldd	r12, Y+8	; 0x08
 f2a:	df 80       	ldd	r13, Y+7	; 0x07
 f2c:	ee 80       	ldd	r14, Y+6	; 0x06
 f2e:	fd 80       	ldd	r15, Y+5	; 0x05
 f30:	0c 81       	ldd	r16, Y+4	; 0x04
 f32:	1b 81       	ldd	r17, Y+3	; 0x03
 f34:	aa 81       	ldd	r26, Y+2	; 0x02
 f36:	b9 81       	ldd	r27, Y+1	; 0x01
 f38:	ce 0f       	add	r28, r30
 f3a:	d1 1d       	adc	r29, r1
 f3c:	0f b6       	in	r0, 0x3f	; 63
 f3e:	f8 94       	cli
 f40:	de bf       	out	0x3e, r29	; 62
 f42:	0f be       	out	0x3f, r0	; 63
 f44:	cd bf       	out	0x3d, r28	; 61
 f46:	ed 01       	movw	r28, r26
 f48:	08 95       	ret

00000f4a <_exit>:
 f4a:	f8 94       	cli

00000f4c <__stop_program>:
 f4c:	ff cf       	rjmp	.-2      	; 0xf4c <__stop_program>
