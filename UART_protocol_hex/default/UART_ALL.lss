
UART_ALL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  00002422  000024b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002422  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800132  00800132  000024e8  2**0
                  ALLOC
  3 .debug_aranges 00000160  00000000  00000000  000024e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000280  00000000  00000000  00002648  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002453  00000000  00000000  000028c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000106a  00000000  00000000  00004d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001826  00000000  00000000  00005d85  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000240  00000000  00000000  000075ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003eb  00000000  00000000  000077ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  00007bd7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000083a5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 f2 06 	jmp	0xde4	; 0xde4 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 e2       	ldi	r30, 0x22	; 34
      7c:	f4 e2       	ldi	r31, 0x24	; 36
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a2 33       	cpi	r26, 0x32	; 50
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	a2 e3       	ldi	r26, 0x32	; 50
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ab 33       	cpi	r26, 0x3B	; 59
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <main>
      9e:	0c 94 0f 12 	jmp	0x241e	; 0x241e <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LED_ALTERNATING>:
void LED_ALTERNATING(unsigned char a)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
      ae:	6f 97       	sbiw	r28, 0x1f	; 31
      b0:	0f b6       	in	r0, 0x3f	; 63
      b2:	f8 94       	cli
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	0f be       	out	0x3f, r0	; 63
      b8:	cd bf       	out	0x3d, r28	; 61
      ba:	8f 8f       	std	Y+31, r24	; 0x1f
	for(int i=0;i<a;i++)
      bc:	1e 8e       	std	Y+30, r1	; 0x1e
      be:	1d 8e       	std	Y+29, r1	; 0x1d
      c0:	09 c1       	rjmp	.+530    	; 0x2d4 <LED_ALTERNATING+0x22e>
	{
		PORTB = (PORTB&0x02)|0x28;
      c2:	a5 e2       	ldi	r26, 0x25	; 37
      c4:	b0 e0       	ldi	r27, 0x00	; 0
      c6:	e5 e2       	ldi	r30, 0x25	; 37
      c8:	f0 e0       	ldi	r31, 0x00	; 0
      ca:	80 81       	ld	r24, Z
      cc:	82 70       	andi	r24, 0x02	; 2
      ce:	88 62       	ori	r24, 0x28	; 40
      d0:	8c 93       	st	X, r24
		PORTC = (PORTC&0x01)|0x14;
      d2:	a8 e2       	ldi	r26, 0x28	; 40
      d4:	b0 e0       	ldi	r27, 0x00	; 0
      d6:	e8 e2       	ldi	r30, 0x28	; 40
      d8:	f0 e0       	ldi	r31, 0x00	; 0
      da:	80 81       	ld	r24, Z
      dc:	81 70       	andi	r24, 0x01	; 1
      de:	84 61       	ori	r24, 0x14	; 20
      e0:	8c 93       	st	X, r24
      e2:	80 e0       	ldi	r24, 0x00	; 0
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	a6 e9       	ldi	r26, 0x96	; 150
      e8:	b3 e4       	ldi	r27, 0x43	; 67
      ea:	89 8f       	std	Y+25, r24	; 0x19
      ec:	9a 8f       	std	Y+26, r25	; 0x1a
      ee:	ab 8f       	std	Y+27, r26	; 0x1b
      f0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      f2:	69 8d       	ldd	r22, Y+25	; 0x19
      f4:	7a 8d       	ldd	r23, Y+26	; 0x1a
      f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
      f8:	9c 8d       	ldd	r25, Y+28	; 0x1c
      fa:	20 e0       	ldi	r18, 0x00	; 0
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	4a e7       	ldi	r20, 0x7A	; 122
     100:	55 e4       	ldi	r21, 0x45	; 69
     102:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     106:	dc 01       	movw	r26, r24
     108:	cb 01       	movw	r24, r22
     10a:	8d 8b       	std	Y+21, r24	; 0x15
     10c:	9e 8b       	std	Y+22, r25	; 0x16
     10e:	af 8b       	std	Y+23, r26	; 0x17
     110:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     112:	6d 89       	ldd	r22, Y+21	; 0x15
     114:	7e 89       	ldd	r23, Y+22	; 0x16
     116:	8f 89       	ldd	r24, Y+23	; 0x17
     118:	98 8d       	ldd	r25, Y+24	; 0x18
     11a:	20 e0       	ldi	r18, 0x00	; 0
     11c:	30 e0       	ldi	r19, 0x00	; 0
     11e:	40 e8       	ldi	r20, 0x80	; 128
     120:	5f e3       	ldi	r21, 0x3F	; 63
     122:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     126:	88 23       	and	r24, r24
     128:	2c f4       	brge	.+10     	; 0x134 <LED_ALTERNATING+0x8e>
		__ticks = 1;
     12a:	81 e0       	ldi	r24, 0x01	; 1
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	9c 8b       	std	Y+20, r25	; 0x14
     130:	8b 8b       	std	Y+19, r24	; 0x13
     132:	3f c0       	rjmp	.+126    	; 0x1b2 <LED_ALTERNATING+0x10c>
	else if (__tmp > 65535)
     134:	6d 89       	ldd	r22, Y+21	; 0x15
     136:	7e 89       	ldd	r23, Y+22	; 0x16
     138:	8f 89       	ldd	r24, Y+23	; 0x17
     13a:	98 8d       	ldd	r25, Y+24	; 0x18
     13c:	20 e0       	ldi	r18, 0x00	; 0
     13e:	3f ef       	ldi	r19, 0xFF	; 255
     140:	4f e7       	ldi	r20, 0x7F	; 127
     142:	57 e4       	ldi	r21, 0x47	; 71
     144:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     148:	18 16       	cp	r1, r24
     14a:	4c f5       	brge	.+82     	; 0x19e <LED_ALTERNATING+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     14c:	69 8d       	ldd	r22, Y+25	; 0x19
     14e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     150:	8b 8d       	ldd	r24, Y+27	; 0x1b
     152:	9c 8d       	ldd	r25, Y+28	; 0x1c
     154:	20 e0       	ldi	r18, 0x00	; 0
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	40 e2       	ldi	r20, 0x20	; 32
     15a:	51 e4       	ldi	r21, 0x41	; 65
     15c:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     160:	dc 01       	movw	r26, r24
     162:	cb 01       	movw	r24, r22
     164:	bc 01       	movw	r22, r24
     166:	cd 01       	movw	r24, r26
     168:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     16c:	dc 01       	movw	r26, r24
     16e:	cb 01       	movw	r24, r22
     170:	9c 8b       	std	Y+20, r25	; 0x14
     172:	8b 8b       	std	Y+19, r24	; 0x13
     174:	0f c0       	rjmp	.+30     	; 0x194 <LED_ALTERNATING+0xee>
     176:	80 e9       	ldi	r24, 0x90	; 144
     178:	91 e0       	ldi	r25, 0x01	; 1
     17a:	9a 8b       	std	Y+18, r25	; 0x12
     17c:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     17e:	89 89       	ldd	r24, Y+17	; 0x11
     180:	9a 89       	ldd	r25, Y+18	; 0x12
     182:	01 97       	sbiw	r24, 0x01	; 1
     184:	f1 f7       	brne	.-4      	; 0x182 <LED_ALTERNATING+0xdc>
     186:	9a 8b       	std	Y+18, r25	; 0x12
     188:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     18a:	8b 89       	ldd	r24, Y+19	; 0x13
     18c:	9c 89       	ldd	r25, Y+20	; 0x14
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	9c 8b       	std	Y+20, r25	; 0x14
     192:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     194:	8b 89       	ldd	r24, Y+19	; 0x13
     196:	9c 89       	ldd	r25, Y+20	; 0x14
     198:	00 97       	sbiw	r24, 0x00	; 0
     19a:	69 f7       	brne	.-38     	; 0x176 <LED_ALTERNATING+0xd0>
     19c:	14 c0       	rjmp	.+40     	; 0x1c6 <LED_ALTERNATING+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     19e:	6d 89       	ldd	r22, Y+21	; 0x15
     1a0:	7e 89       	ldd	r23, Y+22	; 0x16
     1a2:	8f 89       	ldd	r24, Y+23	; 0x17
     1a4:	98 8d       	ldd	r25, Y+24	; 0x18
     1a6:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     1aa:	dc 01       	movw	r26, r24
     1ac:	cb 01       	movw	r24, r22
     1ae:	9c 8b       	std	Y+20, r25	; 0x14
     1b0:	8b 8b       	std	Y+19, r24	; 0x13
     1b2:	8b 89       	ldd	r24, Y+19	; 0x13
     1b4:	9c 89       	ldd	r25, Y+20	; 0x14
     1b6:	98 8b       	std	Y+16, r25	; 0x10
     1b8:	8f 87       	std	Y+15, r24	; 0x0f
     1ba:	8f 85       	ldd	r24, Y+15	; 0x0f
     1bc:	98 89       	ldd	r25, Y+16	; 0x10
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	f1 f7       	brne	.-4      	; 0x1be <LED_ALTERNATING+0x118>
     1c2:	98 8b       	std	Y+16, r25	; 0x10
     1c4:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		PORTB = (PORTB&0x02)|0x14;
     1c6:	a5 e2       	ldi	r26, 0x25	; 37
     1c8:	b0 e0       	ldi	r27, 0x00	; 0
     1ca:	e5 e2       	ldi	r30, 0x25	; 37
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	80 81       	ld	r24, Z
     1d0:	82 70       	andi	r24, 0x02	; 2
     1d2:	84 61       	ori	r24, 0x14	; 20
     1d4:	8c 93       	st	X, r24
		PORTC = (PORTC&0x01)|0x0A;
     1d6:	a8 e2       	ldi	r26, 0x28	; 40
     1d8:	b0 e0       	ldi	r27, 0x00	; 0
     1da:	e8 e2       	ldi	r30, 0x28	; 40
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	81 70       	andi	r24, 0x01	; 1
     1e2:	8a 60       	ori	r24, 0x0A	; 10
     1e4:	8c 93       	st	X, r24
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	a6 e9       	ldi	r26, 0x96	; 150
     1ec:	b3 e4       	ldi	r27, 0x43	; 67
     1ee:	8b 87       	std	Y+11, r24	; 0x0b
     1f0:	9c 87       	std	Y+12, r25	; 0x0c
     1f2:	ad 87       	std	Y+13, r26	; 0x0d
     1f4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1f6:	6b 85       	ldd	r22, Y+11	; 0x0b
     1f8:	7c 85       	ldd	r23, Y+12	; 0x0c
     1fa:	8d 85       	ldd	r24, Y+13	; 0x0d
     1fc:	9e 85       	ldd	r25, Y+14	; 0x0e
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	4a e7       	ldi	r20, 0x7A	; 122
     204:	55 e4       	ldi	r21, 0x45	; 69
     206:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     20a:	dc 01       	movw	r26, r24
     20c:	cb 01       	movw	r24, r22
     20e:	8f 83       	std	Y+7, r24	; 0x07
     210:	98 87       	std	Y+8, r25	; 0x08
     212:	a9 87       	std	Y+9, r26	; 0x09
     214:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     216:	6f 81       	ldd	r22, Y+7	; 0x07
     218:	78 85       	ldd	r23, Y+8	; 0x08
     21a:	89 85       	ldd	r24, Y+9	; 0x09
     21c:	9a 85       	ldd	r25, Y+10	; 0x0a
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	40 e8       	ldi	r20, 0x80	; 128
     224:	5f e3       	ldi	r21, 0x3F	; 63
     226:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     22a:	88 23       	and	r24, r24
     22c:	2c f4       	brge	.+10     	; 0x238 <LED_ALTERNATING+0x192>
		__ticks = 1;
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	9e 83       	std	Y+6, r25	; 0x06
     234:	8d 83       	std	Y+5, r24	; 0x05
     236:	3f c0       	rjmp	.+126    	; 0x2b6 <LED_ALTERNATING+0x210>
	else if (__tmp > 65535)
     238:	6f 81       	ldd	r22, Y+7	; 0x07
     23a:	78 85       	ldd	r23, Y+8	; 0x08
     23c:	89 85       	ldd	r24, Y+9	; 0x09
     23e:	9a 85       	ldd	r25, Y+10	; 0x0a
     240:	20 e0       	ldi	r18, 0x00	; 0
     242:	3f ef       	ldi	r19, 0xFF	; 255
     244:	4f e7       	ldi	r20, 0x7F	; 127
     246:	57 e4       	ldi	r21, 0x47	; 71
     248:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     24c:	18 16       	cp	r1, r24
     24e:	4c f5       	brge	.+82     	; 0x2a2 <LED_ALTERNATING+0x1fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     250:	6b 85       	ldd	r22, Y+11	; 0x0b
     252:	7c 85       	ldd	r23, Y+12	; 0x0c
     254:	8d 85       	ldd	r24, Y+13	; 0x0d
     256:	9e 85       	ldd	r25, Y+14	; 0x0e
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	40 e2       	ldi	r20, 0x20	; 32
     25e:	51 e4       	ldi	r21, 0x41	; 65
     260:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     264:	dc 01       	movw	r26, r24
     266:	cb 01       	movw	r24, r22
     268:	bc 01       	movw	r22, r24
     26a:	cd 01       	movw	r24, r26
     26c:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     270:	dc 01       	movw	r26, r24
     272:	cb 01       	movw	r24, r22
     274:	9e 83       	std	Y+6, r25	; 0x06
     276:	8d 83       	std	Y+5, r24	; 0x05
     278:	0f c0       	rjmp	.+30     	; 0x298 <LED_ALTERNATING+0x1f2>
     27a:	80 e9       	ldi	r24, 0x90	; 144
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	9c 83       	std	Y+4, r25	; 0x04
     280:	8b 83       	std	Y+3, r24	; 0x03
     282:	8b 81       	ldd	r24, Y+3	; 0x03
     284:	9c 81       	ldd	r25, Y+4	; 0x04
     286:	01 97       	sbiw	r24, 0x01	; 1
     288:	f1 f7       	brne	.-4      	; 0x286 <LED_ALTERNATING+0x1e0>
     28a:	9c 83       	std	Y+4, r25	; 0x04
     28c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     28e:	8d 81       	ldd	r24, Y+5	; 0x05
     290:	9e 81       	ldd	r25, Y+6	; 0x06
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	9e 83       	std	Y+6, r25	; 0x06
     296:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     298:	8d 81       	ldd	r24, Y+5	; 0x05
     29a:	9e 81       	ldd	r25, Y+6	; 0x06
     29c:	00 97       	sbiw	r24, 0x00	; 0
     29e:	69 f7       	brne	.-38     	; 0x27a <LED_ALTERNATING+0x1d4>
     2a0:	14 c0       	rjmp	.+40     	; 0x2ca <LED_ALTERNATING+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2a2:	6f 81       	ldd	r22, Y+7	; 0x07
     2a4:	78 85       	ldd	r23, Y+8	; 0x08
     2a6:	89 85       	ldd	r24, Y+9	; 0x09
     2a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     2aa:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     2ae:	dc 01       	movw	r26, r24
     2b0:	cb 01       	movw	r24, r22
     2b2:	9e 83       	std	Y+6, r25	; 0x06
     2b4:	8d 83       	std	Y+5, r24	; 0x05
     2b6:	8d 81       	ldd	r24, Y+5	; 0x05
     2b8:	9e 81       	ldd	r25, Y+6	; 0x06
     2ba:	9a 83       	std	Y+2, r25	; 0x02
     2bc:	89 83       	std	Y+1, r24	; 0x01
     2be:	89 81       	ldd	r24, Y+1	; 0x01
     2c0:	9a 81       	ldd	r25, Y+2	; 0x02
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	f1 f7       	brne	.-4      	; 0x2c2 <LED_ALTERNATING+0x21c>
     2c6:	9a 83       	std	Y+2, r25	; 0x02
     2c8:	89 83       	std	Y+1, r24	; 0x01
void LED_ALTERNATING(unsigned char a)
{
	for(int i=0;i<a;i++)
     2ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2ce:	01 96       	adiw	r24, 0x01	; 1
     2d0:	9e 8f       	std	Y+30, r25	; 0x1e
     2d2:	8d 8f       	std	Y+29, r24	; 0x1d
     2d4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2d6:	28 2f       	mov	r18, r24
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2dc:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2de:	82 17       	cp	r24, r18
     2e0:	93 07       	cpc	r25, r19
     2e2:	0c f4       	brge	.+2      	; 0x2e6 <LED_ALTERNATING+0x240>
     2e4:	ee ce       	rjmp	.-548    	; 0xc2 <LED_ALTERNATING+0x1c>
		PORTB = (PORTB&0x02)|0x14;
		PORTC = (PORTC&0x01)|0x0A;
		_delay_ms(300);
	}

}
     2e6:	6f 96       	adiw	r28, 0x1f	; 31
     2e8:	0f b6       	in	r0, 0x3f	; 63
     2ea:	f8 94       	cli
     2ec:	de bf       	out	0x3e, r29	; 62
     2ee:	0f be       	out	0x3f, r0	; 63
     2f0:	cd bf       	out	0x3d, r28	; 61
     2f2:	cf 91       	pop	r28
     2f4:	df 91       	pop	r29
     2f6:	08 95       	ret

000002f8 <LED_ALL_ON_OFF>:
void LED_ALL_ON_OFF(unsigned char a)
{
     2f8:	df 93       	push	r29
     2fa:	cf 93       	push	r28
     2fc:	cd b7       	in	r28, 0x3d	; 61
     2fe:	de b7       	in	r29, 0x3e	; 62
     300:	6f 97       	sbiw	r28, 0x1f	; 31
     302:	0f b6       	in	r0, 0x3f	; 63
     304:	f8 94       	cli
     306:	de bf       	out	0x3e, r29	; 62
     308:	0f be       	out	0x3f, r0	; 63
     30a:	cd bf       	out	0x3d, r28	; 61
     30c:	8f 8f       	std	Y+31, r24	; 0x1f
	for(int i=0;i<a;i++)
     30e:	1e 8e       	std	Y+30, r1	; 0x1e
     310:	1d 8e       	std	Y+29, r1	; 0x1d
     312:	07 c1       	rjmp	.+526    	; 0x522 <LED_ALL_ON_OFF+0x22a>
	{
		PORTB = (PINB&0x02);
     314:	a5 e2       	ldi	r26, 0x25	; 37
     316:	b0 e0       	ldi	r27, 0x00	; 0
     318:	e3 e2       	ldi	r30, 0x23	; 35
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	80 81       	ld	r24, Z
     31e:	82 70       	andi	r24, 0x02	; 2
     320:	8c 93       	st	X, r24
		PORTC = (PINC&0x01);
     322:	a8 e2       	ldi	r26, 0x28	; 40
     324:	b0 e0       	ldi	r27, 0x00	; 0
     326:	e6 e2       	ldi	r30, 0x26	; 38
     328:	f0 e0       	ldi	r31, 0x00	; 0
     32a:	80 81       	ld	r24, Z
     32c:	81 70       	andi	r24, 0x01	; 1
     32e:	8c 93       	st	X, r24
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	a6 e9       	ldi	r26, 0x96	; 150
     336:	b3 e4       	ldi	r27, 0x43	; 67
     338:	89 8f       	std	Y+25, r24	; 0x19
     33a:	9a 8f       	std	Y+26, r25	; 0x1a
     33c:	ab 8f       	std	Y+27, r26	; 0x1b
     33e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     340:	69 8d       	ldd	r22, Y+25	; 0x19
     342:	7a 8d       	ldd	r23, Y+26	; 0x1a
     344:	8b 8d       	ldd	r24, Y+27	; 0x1b
     346:	9c 8d       	ldd	r25, Y+28	; 0x1c
     348:	20 e0       	ldi	r18, 0x00	; 0
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	4a e7       	ldi	r20, 0x7A	; 122
     34e:	55 e4       	ldi	r21, 0x45	; 69
     350:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     354:	dc 01       	movw	r26, r24
     356:	cb 01       	movw	r24, r22
     358:	8d 8b       	std	Y+21, r24	; 0x15
     35a:	9e 8b       	std	Y+22, r25	; 0x16
     35c:	af 8b       	std	Y+23, r26	; 0x17
     35e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     360:	6d 89       	ldd	r22, Y+21	; 0x15
     362:	7e 89       	ldd	r23, Y+22	; 0x16
     364:	8f 89       	ldd	r24, Y+23	; 0x17
     366:	98 8d       	ldd	r25, Y+24	; 0x18
     368:	20 e0       	ldi	r18, 0x00	; 0
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	40 e8       	ldi	r20, 0x80	; 128
     36e:	5f e3       	ldi	r21, 0x3F	; 63
     370:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     374:	88 23       	and	r24, r24
     376:	2c f4       	brge	.+10     	; 0x382 <LED_ALL_ON_OFF+0x8a>
		__ticks = 1;
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	9c 8b       	std	Y+20, r25	; 0x14
     37e:	8b 8b       	std	Y+19, r24	; 0x13
     380:	3f c0       	rjmp	.+126    	; 0x400 <LED_ALL_ON_OFF+0x108>
	else if (__tmp > 65535)
     382:	6d 89       	ldd	r22, Y+21	; 0x15
     384:	7e 89       	ldd	r23, Y+22	; 0x16
     386:	8f 89       	ldd	r24, Y+23	; 0x17
     388:	98 8d       	ldd	r25, Y+24	; 0x18
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	3f ef       	ldi	r19, 0xFF	; 255
     38e:	4f e7       	ldi	r20, 0x7F	; 127
     390:	57 e4       	ldi	r21, 0x47	; 71
     392:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     396:	18 16       	cp	r1, r24
     398:	4c f5       	brge	.+82     	; 0x3ec <LED_ALL_ON_OFF+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     39a:	69 8d       	ldd	r22, Y+25	; 0x19
     39c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     39e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	40 e2       	ldi	r20, 0x20	; 32
     3a8:	51 e4       	ldi	r21, 0x41	; 65
     3aa:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     3ae:	dc 01       	movw	r26, r24
     3b0:	cb 01       	movw	r24, r22
     3b2:	bc 01       	movw	r22, r24
     3b4:	cd 01       	movw	r24, r26
     3b6:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     3ba:	dc 01       	movw	r26, r24
     3bc:	cb 01       	movw	r24, r22
     3be:	9c 8b       	std	Y+20, r25	; 0x14
     3c0:	8b 8b       	std	Y+19, r24	; 0x13
     3c2:	0f c0       	rjmp	.+30     	; 0x3e2 <LED_ALL_ON_OFF+0xea>
     3c4:	80 e9       	ldi	r24, 0x90	; 144
     3c6:	91 e0       	ldi	r25, 0x01	; 1
     3c8:	9a 8b       	std	Y+18, r25	; 0x12
     3ca:	89 8b       	std	Y+17, r24	; 0x11
     3cc:	89 89       	ldd	r24, Y+17	; 0x11
     3ce:	9a 89       	ldd	r25, Y+18	; 0x12
     3d0:	01 97       	sbiw	r24, 0x01	; 1
     3d2:	f1 f7       	brne	.-4      	; 0x3d0 <LED_ALL_ON_OFF+0xd8>
     3d4:	9a 8b       	std	Y+18, r25	; 0x12
     3d6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3d8:	8b 89       	ldd	r24, Y+19	; 0x13
     3da:	9c 89       	ldd	r25, Y+20	; 0x14
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	9c 8b       	std	Y+20, r25	; 0x14
     3e0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3e2:	8b 89       	ldd	r24, Y+19	; 0x13
     3e4:	9c 89       	ldd	r25, Y+20	; 0x14
     3e6:	00 97       	sbiw	r24, 0x00	; 0
     3e8:	69 f7       	brne	.-38     	; 0x3c4 <LED_ALL_ON_OFF+0xcc>
     3ea:	14 c0       	rjmp	.+40     	; 0x414 <LED_ALL_ON_OFF+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ec:	6d 89       	ldd	r22, Y+21	; 0x15
     3ee:	7e 89       	ldd	r23, Y+22	; 0x16
     3f0:	8f 89       	ldd	r24, Y+23	; 0x17
     3f2:	98 8d       	ldd	r25, Y+24	; 0x18
     3f4:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	9c 8b       	std	Y+20, r25	; 0x14
     3fe:	8b 8b       	std	Y+19, r24	; 0x13
     400:	8b 89       	ldd	r24, Y+19	; 0x13
     402:	9c 89       	ldd	r25, Y+20	; 0x14
     404:	98 8b       	std	Y+16, r25	; 0x10
     406:	8f 87       	std	Y+15, r24	; 0x0f
     408:	8f 85       	ldd	r24, Y+15	; 0x0f
     40a:	98 89       	ldd	r25, Y+16	; 0x10
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <LED_ALL_ON_OFF+0x114>
     410:	98 8b       	std	Y+16, r25	; 0x10
     412:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		PORTB = (PINB&0x02)|0x3C;
     414:	a5 e2       	ldi	r26, 0x25	; 37
     416:	b0 e0       	ldi	r27, 0x00	; 0
     418:	e3 e2       	ldi	r30, 0x23	; 35
     41a:	f0 e0       	ldi	r31, 0x00	; 0
     41c:	80 81       	ld	r24, Z
     41e:	82 70       	andi	r24, 0x02	; 2
     420:	8c 63       	ori	r24, 0x3C	; 60
     422:	8c 93       	st	X, r24
		PORTC = (PINC&0x01)|0x1E;
     424:	a8 e2       	ldi	r26, 0x28	; 40
     426:	b0 e0       	ldi	r27, 0x00	; 0
     428:	e6 e2       	ldi	r30, 0x26	; 38
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	80 81       	ld	r24, Z
     42e:	81 70       	andi	r24, 0x01	; 1
     430:	8e 61       	ori	r24, 0x1E	; 30
     432:	8c 93       	st	X, r24
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	a6 e9       	ldi	r26, 0x96	; 150
     43a:	b3 e4       	ldi	r27, 0x43	; 67
     43c:	8b 87       	std	Y+11, r24	; 0x0b
     43e:	9c 87       	std	Y+12, r25	; 0x0c
     440:	ad 87       	std	Y+13, r26	; 0x0d
     442:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     444:	6b 85       	ldd	r22, Y+11	; 0x0b
     446:	7c 85       	ldd	r23, Y+12	; 0x0c
     448:	8d 85       	ldd	r24, Y+13	; 0x0d
     44a:	9e 85       	ldd	r25, Y+14	; 0x0e
     44c:	20 e0       	ldi	r18, 0x00	; 0
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	4a e7       	ldi	r20, 0x7A	; 122
     452:	55 e4       	ldi	r21, 0x45	; 69
     454:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     458:	dc 01       	movw	r26, r24
     45a:	cb 01       	movw	r24, r22
     45c:	8f 83       	std	Y+7, r24	; 0x07
     45e:	98 87       	std	Y+8, r25	; 0x08
     460:	a9 87       	std	Y+9, r26	; 0x09
     462:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     464:	6f 81       	ldd	r22, Y+7	; 0x07
     466:	78 85       	ldd	r23, Y+8	; 0x08
     468:	89 85       	ldd	r24, Y+9	; 0x09
     46a:	9a 85       	ldd	r25, Y+10	; 0x0a
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	40 e8       	ldi	r20, 0x80	; 128
     472:	5f e3       	ldi	r21, 0x3F	; 63
     474:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     478:	88 23       	and	r24, r24
     47a:	2c f4       	brge	.+10     	; 0x486 <LED_ALL_ON_OFF+0x18e>
		__ticks = 1;
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	9e 83       	std	Y+6, r25	; 0x06
     482:	8d 83       	std	Y+5, r24	; 0x05
     484:	3f c0       	rjmp	.+126    	; 0x504 <LED_ALL_ON_OFF+0x20c>
	else if (__tmp > 65535)
     486:	6f 81       	ldd	r22, Y+7	; 0x07
     488:	78 85       	ldd	r23, Y+8	; 0x08
     48a:	89 85       	ldd	r24, Y+9	; 0x09
     48c:	9a 85       	ldd	r25, Y+10	; 0x0a
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	3f ef       	ldi	r19, 0xFF	; 255
     492:	4f e7       	ldi	r20, 0x7F	; 127
     494:	57 e4       	ldi	r21, 0x47	; 71
     496:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     49a:	18 16       	cp	r1, r24
     49c:	4c f5       	brge	.+82     	; 0x4f0 <LED_ALL_ON_OFF+0x1f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     49e:	6b 85       	ldd	r22, Y+11	; 0x0b
     4a0:	7c 85       	ldd	r23, Y+12	; 0x0c
     4a2:	8d 85       	ldd	r24, Y+13	; 0x0d
     4a4:	9e 85       	ldd	r25, Y+14	; 0x0e
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	40 e2       	ldi	r20, 0x20	; 32
     4ac:	51 e4       	ldi	r21, 0x41	; 65
     4ae:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     4b2:	dc 01       	movw	r26, r24
     4b4:	cb 01       	movw	r24, r22
     4b6:	bc 01       	movw	r22, r24
     4b8:	cd 01       	movw	r24, r26
     4ba:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     4be:	dc 01       	movw	r26, r24
     4c0:	cb 01       	movw	r24, r22
     4c2:	9e 83       	std	Y+6, r25	; 0x06
     4c4:	8d 83       	std	Y+5, r24	; 0x05
     4c6:	0f c0       	rjmp	.+30     	; 0x4e6 <LED_ALL_ON_OFF+0x1ee>
     4c8:	80 e9       	ldi	r24, 0x90	; 144
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	9c 83       	std	Y+4, r25	; 0x04
     4ce:	8b 83       	std	Y+3, r24	; 0x03
     4d0:	8b 81       	ldd	r24, Y+3	; 0x03
     4d2:	9c 81       	ldd	r25, Y+4	; 0x04
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	f1 f7       	brne	.-4      	; 0x4d4 <LED_ALL_ON_OFF+0x1dc>
     4d8:	9c 83       	std	Y+4, r25	; 0x04
     4da:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4dc:	8d 81       	ldd	r24, Y+5	; 0x05
     4de:	9e 81       	ldd	r25, Y+6	; 0x06
     4e0:	01 97       	sbiw	r24, 0x01	; 1
     4e2:	9e 83       	std	Y+6, r25	; 0x06
     4e4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4e6:	8d 81       	ldd	r24, Y+5	; 0x05
     4e8:	9e 81       	ldd	r25, Y+6	; 0x06
     4ea:	00 97       	sbiw	r24, 0x00	; 0
     4ec:	69 f7       	brne	.-38     	; 0x4c8 <LED_ALL_ON_OFF+0x1d0>
     4ee:	14 c0       	rjmp	.+40     	; 0x518 <LED_ALL_ON_OFF+0x220>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f0:	6f 81       	ldd	r22, Y+7	; 0x07
     4f2:	78 85       	ldd	r23, Y+8	; 0x08
     4f4:	89 85       	ldd	r24, Y+9	; 0x09
     4f6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4f8:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     4fc:	dc 01       	movw	r26, r24
     4fe:	cb 01       	movw	r24, r22
     500:	9e 83       	std	Y+6, r25	; 0x06
     502:	8d 83       	std	Y+5, r24	; 0x05
     504:	8d 81       	ldd	r24, Y+5	; 0x05
     506:	9e 81       	ldd	r25, Y+6	; 0x06
     508:	9a 83       	std	Y+2, r25	; 0x02
     50a:	89 83       	std	Y+1, r24	; 0x01
     50c:	89 81       	ldd	r24, Y+1	; 0x01
     50e:	9a 81       	ldd	r25, Y+2	; 0x02
     510:	01 97       	sbiw	r24, 0x01	; 1
     512:	f1 f7       	brne	.-4      	; 0x510 <LED_ALL_ON_OFF+0x218>
     514:	9a 83       	std	Y+2, r25	; 0x02
     516:	89 83       	std	Y+1, r24	; 0x01
void LED_ALL_ON_OFF(unsigned char a)
{
	for(int i=0;i<a;i++)
     518:	8d 8d       	ldd	r24, Y+29	; 0x1d
     51a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     51c:	01 96       	adiw	r24, 0x01	; 1
     51e:	9e 8f       	std	Y+30, r25	; 0x1e
     520:	8d 8f       	std	Y+29, r24	; 0x1d
     522:	8f 8d       	ldd	r24, Y+31	; 0x1f
     524:	28 2f       	mov	r18, r24
     526:	30 e0       	ldi	r19, 0x00	; 0
     528:	8d 8d       	ldd	r24, Y+29	; 0x1d
     52a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     52c:	82 17       	cp	r24, r18
     52e:	93 07       	cpc	r25, r19
     530:	0c f4       	brge	.+2      	; 0x534 <LED_ALL_ON_OFF+0x23c>
     532:	f0 ce       	rjmp	.-544    	; 0x314 <LED_ALL_ON_OFF+0x1c>
		_delay_ms(300);
		PORTB = (PINB&0x02)|0x3C;
		PORTC = (PINC&0x01)|0x1E;
		_delay_ms(300);
	}
}
     534:	6f 96       	adiw	r28, 0x1f	; 31
     536:	0f b6       	in	r0, 0x3f	; 63
     538:	f8 94       	cli
     53a:	de bf       	out	0x3e, r29	; 62
     53c:	0f be       	out	0x3f, r0	; 63
     53e:	cd bf       	out	0x3d, r28	; 61
     540:	cf 91       	pop	r28
     542:	df 91       	pop	r29
     544:	08 95       	ret

00000546 <LED_SHIFT>:
void LED_SHIFT(unsigned char a)
{
     546:	df 93       	push	r29
     548:	cf 93       	push	r28
     54a:	cd b7       	in	r28, 0x3d	; 61
     54c:	de b7       	in	r29, 0x3e	; 62
     54e:	c3 54       	subi	r28, 0x43	; 67
     550:	d0 40       	sbci	r29, 0x00	; 0
     552:	0f b6       	in	r0, 0x3f	; 63
     554:	f8 94       	cli
     556:	de bf       	out	0x3e, r29	; 62
     558:	0f be       	out	0x3f, r0	; 63
     55a:	cd bf       	out	0x3d, r28	; 61
     55c:	fe 01       	movw	r30, r28
     55e:	ed 5b       	subi	r30, 0xBD	; 189
     560:	ff 4f       	sbci	r31, 0xFF	; 255
     562:	80 83       	st	Z, r24
	PORTB = (PINB&0x02)|0xFD;
     564:	a5 e2       	ldi	r26, 0x25	; 37
     566:	b0 e0       	ldi	r27, 0x00	; 0
     568:	e3 e2       	ldi	r30, 0x23	; 35
     56a:	f0 e0       	ldi	r31, 0x00	; 0
     56c:	80 81       	ld	r24, Z
     56e:	8d 6f       	ori	r24, 0xFD	; 253
     570:	8c 93       	st	X, r24
	PORTC = (PINC&0x01)|0xFE;
     572:	a8 e2       	ldi	r26, 0x28	; 40
     574:	b0 e0       	ldi	r27, 0x00	; 0
     576:	e6 e2       	ldi	r30, 0x26	; 38
     578:	f0 e0       	ldi	r31, 0x00	; 0
     57a:	80 81       	ld	r24, Z
     57c:	8e 6f       	ori	r24, 0xFE	; 254
     57e:	8c 93       	st	X, r24
	for(int j = 0;j<a;j++)
     580:	fe 01       	movw	r30, r28
     582:	ef 5b       	subi	r30, 0xBF	; 191
     584:	ff 4f       	sbci	r31, 0xFF	; 255
     586:	11 82       	std	Z+1, r1	; 0x01
     588:	10 82       	st	Z, r1
     58a:	60 c2       	rjmp	.+1216   	; 0xa4c <__stack+0x14d>
	{
		for(int i=0;i<5;i++)
     58c:	fe 01       	movw	r30, r28
     58e:	ff 96       	adiw	r30, 0x3f	; 63
     590:	11 82       	std	Z+1, r1	; 0x01
     592:	10 82       	st	Z, r1
     594:	8e c0       	rjmp	.+284    	; 0x6b2 <LED_SHIFT+0x16c>
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	a8 e4       	ldi	r26, 0x48	; 72
     59c:	b3 e4       	ldi	r27, 0x43	; 67
     59e:	8d ab       	std	Y+53, r24	; 0x35
     5a0:	9e ab       	std	Y+54, r25	; 0x36
     5a2:	af ab       	std	Y+55, r26	; 0x37
     5a4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5a6:	6d a9       	ldd	r22, Y+53	; 0x35
     5a8:	7e a9       	ldd	r23, Y+54	; 0x36
     5aa:	8f a9       	ldd	r24, Y+55	; 0x37
     5ac:	98 ad       	ldd	r25, Y+56	; 0x38
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	4a e7       	ldi	r20, 0x7A	; 122
     5b4:	55 e4       	ldi	r21, 0x45	; 69
     5b6:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     5ba:	dc 01       	movw	r26, r24
     5bc:	cb 01       	movw	r24, r22
     5be:	89 ab       	std	Y+49, r24	; 0x31
     5c0:	9a ab       	std	Y+50, r25	; 0x32
     5c2:	ab ab       	std	Y+51, r26	; 0x33
     5c4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     5c6:	69 a9       	ldd	r22, Y+49	; 0x31
     5c8:	7a a9       	ldd	r23, Y+50	; 0x32
     5ca:	8b a9       	ldd	r24, Y+51	; 0x33
     5cc:	9c a9       	ldd	r25, Y+52	; 0x34
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	30 e0       	ldi	r19, 0x00	; 0
     5d2:	40 e8       	ldi	r20, 0x80	; 128
     5d4:	5f e3       	ldi	r21, 0x3F	; 63
     5d6:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     5da:	88 23       	and	r24, r24
     5dc:	2c f4       	brge	.+10     	; 0x5e8 <LED_SHIFT+0xa2>
		__ticks = 1;
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	98 ab       	std	Y+48, r25	; 0x30
     5e4:	8f a7       	std	Y+47, r24	; 0x2f
     5e6:	3f c0       	rjmp	.+126    	; 0x666 <LED_SHIFT+0x120>
	else if (__tmp > 65535)
     5e8:	69 a9       	ldd	r22, Y+49	; 0x31
     5ea:	7a a9       	ldd	r23, Y+50	; 0x32
     5ec:	8b a9       	ldd	r24, Y+51	; 0x33
     5ee:	9c a9       	ldd	r25, Y+52	; 0x34
     5f0:	20 e0       	ldi	r18, 0x00	; 0
     5f2:	3f ef       	ldi	r19, 0xFF	; 255
     5f4:	4f e7       	ldi	r20, 0x7F	; 127
     5f6:	57 e4       	ldi	r21, 0x47	; 71
     5f8:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     5fc:	18 16       	cp	r1, r24
     5fe:	4c f5       	brge	.+82     	; 0x652 <LED_SHIFT+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     600:	6d a9       	ldd	r22, Y+53	; 0x35
     602:	7e a9       	ldd	r23, Y+54	; 0x36
     604:	8f a9       	ldd	r24, Y+55	; 0x37
     606:	98 ad       	ldd	r25, Y+56	; 0x38
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	40 e2       	ldi	r20, 0x20	; 32
     60e:	51 e4       	ldi	r21, 0x41	; 65
     610:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     614:	dc 01       	movw	r26, r24
     616:	cb 01       	movw	r24, r22
     618:	bc 01       	movw	r22, r24
     61a:	cd 01       	movw	r24, r26
     61c:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	98 ab       	std	Y+48, r25	; 0x30
     626:	8f a7       	std	Y+47, r24	; 0x2f
     628:	0f c0       	rjmp	.+30     	; 0x648 <LED_SHIFT+0x102>
     62a:	80 e9       	ldi	r24, 0x90	; 144
     62c:	91 e0       	ldi	r25, 0x01	; 1
     62e:	9e a7       	std	Y+46, r25	; 0x2e
     630:	8d a7       	std	Y+45, r24	; 0x2d
     632:	8d a5       	ldd	r24, Y+45	; 0x2d
     634:	9e a5       	ldd	r25, Y+46	; 0x2e
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <LED_SHIFT+0xf0>
     63a:	9e a7       	std	Y+46, r25	; 0x2e
     63c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     63e:	8f a5       	ldd	r24, Y+47	; 0x2f
     640:	98 a9       	ldd	r25, Y+48	; 0x30
     642:	01 97       	sbiw	r24, 0x01	; 1
     644:	98 ab       	std	Y+48, r25	; 0x30
     646:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     648:	8f a5       	ldd	r24, Y+47	; 0x2f
     64a:	98 a9       	ldd	r25, Y+48	; 0x30
     64c:	00 97       	sbiw	r24, 0x00	; 0
     64e:	69 f7       	brne	.-38     	; 0x62a <LED_SHIFT+0xe4>
     650:	14 c0       	rjmp	.+40     	; 0x67a <LED_SHIFT+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     652:	69 a9       	ldd	r22, Y+49	; 0x31
     654:	7a a9       	ldd	r23, Y+50	; 0x32
     656:	8b a9       	ldd	r24, Y+51	; 0x33
     658:	9c a9       	ldd	r25, Y+52	; 0x34
     65a:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     65e:	dc 01       	movw	r26, r24
     660:	cb 01       	movw	r24, r22
     662:	98 ab       	std	Y+48, r25	; 0x30
     664:	8f a7       	std	Y+47, r24	; 0x2f
     666:	8f a5       	ldd	r24, Y+47	; 0x2f
     668:	98 a9       	ldd	r25, Y+48	; 0x30
     66a:	9c a7       	std	Y+44, r25	; 0x2c
     66c:	8b a7       	std	Y+43, r24	; 0x2b
     66e:	8b a5       	ldd	r24, Y+43	; 0x2b
     670:	9c a5       	ldd	r25, Y+44	; 0x2c
     672:	01 97       	sbiw	r24, 0x01	; 1
     674:	f1 f7       	brne	.-4      	; 0x672 <LED_SHIFT+0x12c>
     676:	9c a7       	std	Y+44, r25	; 0x2c
     678:	8b a7       	std	Y+43, r24	; 0x2b
		{
			_delay_ms(200);
			PORTB = (PINB&0x02)|((~(0x04<<i))&0x3C);
     67a:	a5 e2       	ldi	r26, 0x25	; 37
     67c:	b0 e0       	ldi	r27, 0x00	; 0
     67e:	e3 e2       	ldi	r30, 0x23	; 35
     680:	f0 e0       	ldi	r31, 0x00	; 0
     682:	80 81       	ld	r24, Z
     684:	28 2f       	mov	r18, r24
     686:	22 70       	andi	r18, 0x02	; 2
     688:	84 e0       	ldi	r24, 0x04	; 4
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	0f ac       	ldd	r0, Y+63	; 0x3f
     68e:	02 c0       	rjmp	.+4      	; 0x694 <LED_SHIFT+0x14e>
     690:	88 0f       	add	r24, r24
     692:	99 1f       	adc	r25, r25
     694:	0a 94       	dec	r0
     696:	e2 f7       	brpl	.-8      	; 0x690 <LED_SHIFT+0x14a>
     698:	80 95       	com	r24
     69a:	8c 73       	andi	r24, 0x3C	; 60
     69c:	82 2b       	or	r24, r18
     69e:	8c 93       	st	X, r24
{
	PORTB = (PINB&0x02)|0xFD;
	PORTC = (PINC&0x01)|0xFE;
	for(int j = 0;j<a;j++)
	{
		for(int i=0;i<5;i++)
     6a0:	fe 01       	movw	r30, r28
     6a2:	ff 96       	adiw	r30, 0x3f	; 63
     6a4:	80 81       	ld	r24, Z
     6a6:	91 81       	ldd	r25, Z+1	; 0x01
     6a8:	01 96       	adiw	r24, 0x01	; 1
     6aa:	fe 01       	movw	r30, r28
     6ac:	ff 96       	adiw	r30, 0x3f	; 63
     6ae:	91 83       	std	Z+1, r25	; 0x01
     6b0:	80 83       	st	Z, r24
     6b2:	fe 01       	movw	r30, r28
     6b4:	ff 96       	adiw	r30, 0x3f	; 63
     6b6:	80 81       	ld	r24, Z
     6b8:	91 81       	ldd	r25, Z+1	; 0x01
     6ba:	85 30       	cpi	r24, 0x05	; 5
     6bc:	91 05       	cpc	r25, r1
     6be:	0c f4       	brge	.+2      	; 0x6c2 <LED_SHIFT+0x17c>
     6c0:	6a cf       	rjmp	.-300    	; 0x596 <LED_SHIFT+0x50>
		{
			_delay_ms(200);
			PORTB = (PINB&0x02)|((~(0x04<<i))&0x3C);
		}
		for(int i=0;i<4;i++)
     6c2:	1e ae       	std	Y+62, r1	; 0x3e
     6c4:	1d ae       	std	Y+61, r1	; 0x3d
     6c6:	8a c0       	rjmp	.+276    	; 0x7dc <LED_SHIFT+0x296>
		{
			PORTC = (PINC&0x01)|((~(0x02<<i))&0x1E);
     6c8:	a8 e2       	ldi	r26, 0x28	; 40
     6ca:	b0 e0       	ldi	r27, 0x00	; 0
     6cc:	e6 e2       	ldi	r30, 0x26	; 38
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	80 81       	ld	r24, Z
     6d2:	28 2f       	mov	r18, r24
     6d4:	21 70       	andi	r18, 0x01	; 1
     6d6:	82 e0       	ldi	r24, 0x02	; 2
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	0d ac       	ldd	r0, Y+61	; 0x3d
     6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <LED_SHIFT+0x19c>
     6de:	88 0f       	add	r24, r24
     6e0:	99 1f       	adc	r25, r25
     6e2:	0a 94       	dec	r0
     6e4:	e2 f7       	brpl	.-8      	; 0x6de <LED_SHIFT+0x198>
     6e6:	80 95       	com	r24
     6e8:	8e 71       	andi	r24, 0x1E	; 30
     6ea:	82 2b       	or	r24, r18
     6ec:	8c 93       	st	X, r24
     6ee:	80 e0       	ldi	r24, 0x00	; 0
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	a8 e4       	ldi	r26, 0x48	; 72
     6f4:	b3 e4       	ldi	r27, 0x43	; 67
     6f6:	8f a3       	std	Y+39, r24	; 0x27
     6f8:	98 a7       	std	Y+40, r25	; 0x28
     6fa:	a9 a7       	std	Y+41, r26	; 0x29
     6fc:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6fe:	6f a1       	ldd	r22, Y+39	; 0x27
     700:	78 a5       	ldd	r23, Y+40	; 0x28
     702:	89 a5       	ldd	r24, Y+41	; 0x29
     704:	9a a5       	ldd	r25, Y+42	; 0x2a
     706:	20 e0       	ldi	r18, 0x00	; 0
     708:	30 e0       	ldi	r19, 0x00	; 0
     70a:	4a e7       	ldi	r20, 0x7A	; 122
     70c:	55 e4       	ldi	r21, 0x45	; 69
     70e:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     712:	dc 01       	movw	r26, r24
     714:	cb 01       	movw	r24, r22
     716:	8b a3       	std	Y+35, r24	; 0x23
     718:	9c a3       	std	Y+36, r25	; 0x24
     71a:	ad a3       	std	Y+37, r26	; 0x25
     71c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     71e:	6b a1       	ldd	r22, Y+35	; 0x23
     720:	7c a1       	ldd	r23, Y+36	; 0x24
     722:	8d a1       	ldd	r24, Y+37	; 0x25
     724:	9e a1       	ldd	r25, Y+38	; 0x26
     726:	20 e0       	ldi	r18, 0x00	; 0
     728:	30 e0       	ldi	r19, 0x00	; 0
     72a:	40 e8       	ldi	r20, 0x80	; 128
     72c:	5f e3       	ldi	r21, 0x3F	; 63
     72e:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     732:	88 23       	and	r24, r24
     734:	2c f4       	brge	.+10     	; 0x740 <LED_SHIFT+0x1fa>
		__ticks = 1;
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	9a a3       	std	Y+34, r25	; 0x22
     73c:	89 a3       	std	Y+33, r24	; 0x21
     73e:	3f c0       	rjmp	.+126    	; 0x7be <LED_SHIFT+0x278>
	else if (__tmp > 65535)
     740:	6b a1       	ldd	r22, Y+35	; 0x23
     742:	7c a1       	ldd	r23, Y+36	; 0x24
     744:	8d a1       	ldd	r24, Y+37	; 0x25
     746:	9e a1       	ldd	r25, Y+38	; 0x26
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	3f ef       	ldi	r19, 0xFF	; 255
     74c:	4f e7       	ldi	r20, 0x7F	; 127
     74e:	57 e4       	ldi	r21, 0x47	; 71
     750:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     754:	18 16       	cp	r1, r24
     756:	4c f5       	brge	.+82     	; 0x7aa <LED_SHIFT+0x264>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     758:	6f a1       	ldd	r22, Y+39	; 0x27
     75a:	78 a5       	ldd	r23, Y+40	; 0x28
     75c:	89 a5       	ldd	r24, Y+41	; 0x29
     75e:	9a a5       	ldd	r25, Y+42	; 0x2a
     760:	20 e0       	ldi	r18, 0x00	; 0
     762:	30 e0       	ldi	r19, 0x00	; 0
     764:	40 e2       	ldi	r20, 0x20	; 32
     766:	51 e4       	ldi	r21, 0x41	; 65
     768:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     76c:	dc 01       	movw	r26, r24
     76e:	cb 01       	movw	r24, r22
     770:	bc 01       	movw	r22, r24
     772:	cd 01       	movw	r24, r26
     774:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     778:	dc 01       	movw	r26, r24
     77a:	cb 01       	movw	r24, r22
     77c:	9a a3       	std	Y+34, r25	; 0x22
     77e:	89 a3       	std	Y+33, r24	; 0x21
     780:	0f c0       	rjmp	.+30     	; 0x7a0 <LED_SHIFT+0x25a>
     782:	80 e9       	ldi	r24, 0x90	; 144
     784:	91 e0       	ldi	r25, 0x01	; 1
     786:	98 a3       	std	Y+32, r25	; 0x20
     788:	8f 8f       	std	Y+31, r24	; 0x1f
     78a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     78c:	98 a1       	ldd	r25, Y+32	; 0x20
     78e:	01 97       	sbiw	r24, 0x01	; 1
     790:	f1 f7       	brne	.-4      	; 0x78e <LED_SHIFT+0x248>
     792:	98 a3       	std	Y+32, r25	; 0x20
     794:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     796:	89 a1       	ldd	r24, Y+33	; 0x21
     798:	9a a1       	ldd	r25, Y+34	; 0x22
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	9a a3       	std	Y+34, r25	; 0x22
     79e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7a0:	89 a1       	ldd	r24, Y+33	; 0x21
     7a2:	9a a1       	ldd	r25, Y+34	; 0x22
     7a4:	00 97       	sbiw	r24, 0x00	; 0
     7a6:	69 f7       	brne	.-38     	; 0x782 <LED_SHIFT+0x23c>
     7a8:	14 c0       	rjmp	.+40     	; 0x7d2 <LED_SHIFT+0x28c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7aa:	6b a1       	ldd	r22, Y+35	; 0x23
     7ac:	7c a1       	ldd	r23, Y+36	; 0x24
     7ae:	8d a1       	ldd	r24, Y+37	; 0x25
     7b0:	9e a1       	ldd	r25, Y+38	; 0x26
     7b2:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     7b6:	dc 01       	movw	r26, r24
     7b8:	cb 01       	movw	r24, r22
     7ba:	9a a3       	std	Y+34, r25	; 0x22
     7bc:	89 a3       	std	Y+33, r24	; 0x21
     7be:	89 a1       	ldd	r24, Y+33	; 0x21
     7c0:	9a a1       	ldd	r25, Y+34	; 0x22
     7c2:	9e 8f       	std	Y+30, r25	; 0x1e
     7c4:	8d 8f       	std	Y+29, r24	; 0x1d
     7c6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     7c8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     7ca:	01 97       	sbiw	r24, 0x01	; 1
     7cc:	f1 f7       	brne	.-4      	; 0x7ca <LED_SHIFT+0x284>
     7ce:	9e 8f       	std	Y+30, r25	; 0x1e
     7d0:	8d 8f       	std	Y+29, r24	; 0x1d
		for(int i=0;i<5;i++)
		{
			_delay_ms(200);
			PORTB = (PINB&0x02)|((~(0x04<<i))&0x3C);
		}
		for(int i=0;i<4;i++)
     7d2:	8d ad       	ldd	r24, Y+61	; 0x3d
     7d4:	9e ad       	ldd	r25, Y+62	; 0x3e
     7d6:	01 96       	adiw	r24, 0x01	; 1
     7d8:	9e af       	std	Y+62, r25	; 0x3e
     7da:	8d af       	std	Y+61, r24	; 0x3d
     7dc:	8d ad       	ldd	r24, Y+61	; 0x3d
     7de:	9e ad       	ldd	r25, Y+62	; 0x3e
     7e0:	84 30       	cpi	r24, 0x04	; 4
     7e2:	91 05       	cpc	r25, r1
     7e4:	0c f4       	brge	.+2      	; 0x7e8 <LED_SHIFT+0x2a2>
     7e6:	70 cf       	rjmp	.-288    	; 0x6c8 <LED_SHIFT+0x182>
		{
			PORTC = (PINC&0x01)|((~(0x02<<i))&0x1E);
			_delay_ms(200);
		}
		for(int i=0;i<5;i++)
     7e8:	1c ae       	std	Y+60, r1	; 0x3c
     7ea:	1b ae       	std	Y+59, r1	; 0x3b
     7ec:	8a c0       	rjmp	.+276    	; 0x902 <__stack+0x3>
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	a8 e4       	ldi	r26, 0x48	; 72
     7f4:	b3 e4       	ldi	r27, 0x43	; 67
     7f6:	89 8f       	std	Y+25, r24	; 0x19
     7f8:	9a 8f       	std	Y+26, r25	; 0x1a
     7fa:	ab 8f       	std	Y+27, r26	; 0x1b
     7fc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     7fe:	69 8d       	ldd	r22, Y+25	; 0x19
     800:	7a 8d       	ldd	r23, Y+26	; 0x1a
     802:	8b 8d       	ldd	r24, Y+27	; 0x1b
     804:	9c 8d       	ldd	r25, Y+28	; 0x1c
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	4a e7       	ldi	r20, 0x7A	; 122
     80c:	55 e4       	ldi	r21, 0x45	; 69
     80e:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     812:	dc 01       	movw	r26, r24
     814:	cb 01       	movw	r24, r22
     816:	8d 8b       	std	Y+21, r24	; 0x15
     818:	9e 8b       	std	Y+22, r25	; 0x16
     81a:	af 8b       	std	Y+23, r26	; 0x17
     81c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     81e:	6d 89       	ldd	r22, Y+21	; 0x15
     820:	7e 89       	ldd	r23, Y+22	; 0x16
     822:	8f 89       	ldd	r24, Y+23	; 0x17
     824:	98 8d       	ldd	r25, Y+24	; 0x18
     826:	20 e0       	ldi	r18, 0x00	; 0
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	40 e8       	ldi	r20, 0x80	; 128
     82c:	5f e3       	ldi	r21, 0x3F	; 63
     82e:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     832:	88 23       	and	r24, r24
     834:	2c f4       	brge	.+10     	; 0x840 <LED_SHIFT+0x2fa>
		__ticks = 1;
     836:	81 e0       	ldi	r24, 0x01	; 1
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	9c 8b       	std	Y+20, r25	; 0x14
     83c:	8b 8b       	std	Y+19, r24	; 0x13
     83e:	3f c0       	rjmp	.+126    	; 0x8be <LED_SHIFT+0x378>
	else if (__tmp > 65535)
     840:	6d 89       	ldd	r22, Y+21	; 0x15
     842:	7e 89       	ldd	r23, Y+22	; 0x16
     844:	8f 89       	ldd	r24, Y+23	; 0x17
     846:	98 8d       	ldd	r25, Y+24	; 0x18
     848:	20 e0       	ldi	r18, 0x00	; 0
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	4f e7       	ldi	r20, 0x7F	; 127
     84e:	57 e4       	ldi	r21, 0x47	; 71
     850:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     854:	18 16       	cp	r1, r24
     856:	4c f5       	brge	.+82     	; 0x8aa <LED_SHIFT+0x364>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     858:	69 8d       	ldd	r22, Y+25	; 0x19
     85a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     85c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     85e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	40 e2       	ldi	r20, 0x20	; 32
     866:	51 e4       	ldi	r21, 0x41	; 65
     868:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     86c:	dc 01       	movw	r26, r24
     86e:	cb 01       	movw	r24, r22
     870:	bc 01       	movw	r22, r24
     872:	cd 01       	movw	r24, r26
     874:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     878:	dc 01       	movw	r26, r24
     87a:	cb 01       	movw	r24, r22
     87c:	9c 8b       	std	Y+20, r25	; 0x14
     87e:	8b 8b       	std	Y+19, r24	; 0x13
     880:	0f c0       	rjmp	.+30     	; 0x8a0 <LED_SHIFT+0x35a>
     882:	80 e9       	ldi	r24, 0x90	; 144
     884:	91 e0       	ldi	r25, 0x01	; 1
     886:	9a 8b       	std	Y+18, r25	; 0x12
     888:	89 8b       	std	Y+17, r24	; 0x11
     88a:	89 89       	ldd	r24, Y+17	; 0x11
     88c:	9a 89       	ldd	r25, Y+18	; 0x12
     88e:	01 97       	sbiw	r24, 0x01	; 1
     890:	f1 f7       	brne	.-4      	; 0x88e <LED_SHIFT+0x348>
     892:	9a 8b       	std	Y+18, r25	; 0x12
     894:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     896:	8b 89       	ldd	r24, Y+19	; 0x13
     898:	9c 89       	ldd	r25, Y+20	; 0x14
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	9c 8b       	std	Y+20, r25	; 0x14
     89e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8a0:	8b 89       	ldd	r24, Y+19	; 0x13
     8a2:	9c 89       	ldd	r25, Y+20	; 0x14
     8a4:	00 97       	sbiw	r24, 0x00	; 0
     8a6:	69 f7       	brne	.-38     	; 0x882 <LED_SHIFT+0x33c>
     8a8:	14 c0       	rjmp	.+40     	; 0x8d2 <LED_SHIFT+0x38c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8aa:	6d 89       	ldd	r22, Y+21	; 0x15
     8ac:	7e 89       	ldd	r23, Y+22	; 0x16
     8ae:	8f 89       	ldd	r24, Y+23	; 0x17
     8b0:	98 8d       	ldd	r25, Y+24	; 0x18
     8b2:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     8b6:	dc 01       	movw	r26, r24
     8b8:	cb 01       	movw	r24, r22
     8ba:	9c 8b       	std	Y+20, r25	; 0x14
     8bc:	8b 8b       	std	Y+19, r24	; 0x13
     8be:	8b 89       	ldd	r24, Y+19	; 0x13
     8c0:	9c 89       	ldd	r25, Y+20	; 0x14
     8c2:	98 8b       	std	Y+16, r25	; 0x10
     8c4:	8f 87       	std	Y+15, r24	; 0x0f
     8c6:	8f 85       	ldd	r24, Y+15	; 0x0f
     8c8:	98 89       	ldd	r25, Y+16	; 0x10
     8ca:	01 97       	sbiw	r24, 0x01	; 1
     8cc:	f1 f7       	brne	.-4      	; 0x8ca <LED_SHIFT+0x384>
     8ce:	98 8b       	std	Y+16, r25	; 0x10
     8d0:	8f 87       	std	Y+15, r24	; 0x0f
		{
			_delay_ms(200);
			PORTC = (PINC&0x01)|((~(0x10>>i))&0x1E);
     8d2:	a8 e2       	ldi	r26, 0x28	; 40
     8d4:	b0 e0       	ldi	r27, 0x00	; 0
     8d6:	e6 e2       	ldi	r30, 0x26	; 38
     8d8:	f0 e0       	ldi	r31, 0x00	; 0
     8da:	80 81       	ld	r24, Z
     8dc:	28 2f       	mov	r18, r24
     8de:	21 70       	andi	r18, 0x01	; 1
     8e0:	80 e1       	ldi	r24, 0x10	; 16
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	0b ac       	ldd	r0, Y+59	; 0x3b
     8e6:	02 c0       	rjmp	.+4      	; 0x8ec <LED_SHIFT+0x3a6>
     8e8:	95 95       	asr	r25
     8ea:	87 95       	ror	r24
     8ec:	0a 94       	dec	r0
     8ee:	e2 f7       	brpl	.-8      	; 0x8e8 <LED_SHIFT+0x3a2>
     8f0:	80 95       	com	r24
     8f2:	8e 71       	andi	r24, 0x1E	; 30
     8f4:	82 2b       	or	r24, r18
     8f6:	8c 93       	st	X, r24
		for(int i=0;i<4;i++)
		{
			PORTC = (PINC&0x01)|((~(0x02<<i))&0x1E);
			_delay_ms(200);
		}
		for(int i=0;i<5;i++)
     8f8:	8b ad       	ldd	r24, Y+59	; 0x3b
     8fa:	9c ad       	ldd	r25, Y+60	; 0x3c
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	9c af       	std	Y+60, r25	; 0x3c
     900:	8b af       	std	Y+59, r24	; 0x3b
     902:	8b ad       	ldd	r24, Y+59	; 0x3b
     904:	9c ad       	ldd	r25, Y+60	; 0x3c
     906:	85 30       	cpi	r24, 0x05	; 5
     908:	91 05       	cpc	r25, r1
     90a:	0c f4       	brge	.+2      	; 0x90e <__stack+0xf>
     90c:	70 cf       	rjmp	.-288    	; 0x7ee <LED_SHIFT+0x2a8>
		{
			_delay_ms(200);
			PORTC = (PINC&0x01)|((~(0x10>>i))&0x1E);
		}
		for(int i=0;i<4;i++)
     90e:	1a ae       	std	Y+58, r1	; 0x3a
     910:	19 ae       	std	Y+57, r1	; 0x39
     912:	8a c0       	rjmp	.+276    	; 0xa28 <__stack+0x129>
		{
			PORTB = (PINB&0x02)|((~(0x20>>i))&0x3C);
     914:	a5 e2       	ldi	r26, 0x25	; 37
     916:	b0 e0       	ldi	r27, 0x00	; 0
     918:	e3 e2       	ldi	r30, 0x23	; 35
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	80 81       	ld	r24, Z
     91e:	28 2f       	mov	r18, r24
     920:	22 70       	andi	r18, 0x02	; 2
     922:	80 e2       	ldi	r24, 0x20	; 32
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	09 ac       	ldd	r0, Y+57	; 0x39
     928:	02 c0       	rjmp	.+4      	; 0x92e <__stack+0x2f>
     92a:	95 95       	asr	r25
     92c:	87 95       	ror	r24
     92e:	0a 94       	dec	r0
     930:	e2 f7       	brpl	.-8      	; 0x92a <__stack+0x2b>
     932:	80 95       	com	r24
     934:	8c 73       	andi	r24, 0x3C	; 60
     936:	82 2b       	or	r24, r18
     938:	8c 93       	st	X, r24
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	a8 e4       	ldi	r26, 0x48	; 72
     940:	b3 e4       	ldi	r27, 0x43	; 67
     942:	8b 87       	std	Y+11, r24	; 0x0b
     944:	9c 87       	std	Y+12, r25	; 0x0c
     946:	ad 87       	std	Y+13, r26	; 0x0d
     948:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     94a:	6b 85       	ldd	r22, Y+11	; 0x0b
     94c:	7c 85       	ldd	r23, Y+12	; 0x0c
     94e:	8d 85       	ldd	r24, Y+13	; 0x0d
     950:	9e 85       	ldd	r25, Y+14	; 0x0e
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	4a e7       	ldi	r20, 0x7A	; 122
     958:	55 e4       	ldi	r21, 0x45	; 69
     95a:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     95e:	dc 01       	movw	r26, r24
     960:	cb 01       	movw	r24, r22
     962:	8f 83       	std	Y+7, r24	; 0x07
     964:	98 87       	std	Y+8, r25	; 0x08
     966:	a9 87       	std	Y+9, r26	; 0x09
     968:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     96a:	6f 81       	ldd	r22, Y+7	; 0x07
     96c:	78 85       	ldd	r23, Y+8	; 0x08
     96e:	89 85       	ldd	r24, Y+9	; 0x09
     970:	9a 85       	ldd	r25, Y+10	; 0x0a
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	40 e8       	ldi	r20, 0x80	; 128
     978:	5f e3       	ldi	r21, 0x3F	; 63
     97a:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     97e:	88 23       	and	r24, r24
     980:	2c f4       	brge	.+10     	; 0x98c <__stack+0x8d>
		__ticks = 1;
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	9e 83       	std	Y+6, r25	; 0x06
     988:	8d 83       	std	Y+5, r24	; 0x05
     98a:	3f c0       	rjmp	.+126    	; 0xa0a <__stack+0x10b>
	else if (__tmp > 65535)
     98c:	6f 81       	ldd	r22, Y+7	; 0x07
     98e:	78 85       	ldd	r23, Y+8	; 0x08
     990:	89 85       	ldd	r24, Y+9	; 0x09
     992:	9a 85       	ldd	r25, Y+10	; 0x0a
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	3f ef       	ldi	r19, 0xFF	; 255
     998:	4f e7       	ldi	r20, 0x7F	; 127
     99a:	57 e4       	ldi	r21, 0x47	; 71
     99c:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     9a0:	18 16       	cp	r1, r24
     9a2:	4c f5       	brge	.+82     	; 0x9f6 <__stack+0xf7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9a4:	6b 85       	ldd	r22, Y+11	; 0x0b
     9a6:	7c 85       	ldd	r23, Y+12	; 0x0c
     9a8:	8d 85       	ldd	r24, Y+13	; 0x0d
     9aa:	9e 85       	ldd	r25, Y+14	; 0x0e
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	40 e2       	ldi	r20, 0x20	; 32
     9b2:	51 e4       	ldi	r21, 0x41	; 65
     9b4:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     9b8:	dc 01       	movw	r26, r24
     9ba:	cb 01       	movw	r24, r22
     9bc:	bc 01       	movw	r22, r24
     9be:	cd 01       	movw	r24, r26
     9c0:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     9c4:	dc 01       	movw	r26, r24
     9c6:	cb 01       	movw	r24, r22
     9c8:	9e 83       	std	Y+6, r25	; 0x06
     9ca:	8d 83       	std	Y+5, r24	; 0x05
     9cc:	0f c0       	rjmp	.+30     	; 0x9ec <__stack+0xed>
     9ce:	80 e9       	ldi	r24, 0x90	; 144
     9d0:	91 e0       	ldi	r25, 0x01	; 1
     9d2:	9c 83       	std	Y+4, r25	; 0x04
     9d4:	8b 83       	std	Y+3, r24	; 0x03
     9d6:	8b 81       	ldd	r24, Y+3	; 0x03
     9d8:	9c 81       	ldd	r25, Y+4	; 0x04
     9da:	01 97       	sbiw	r24, 0x01	; 1
     9dc:	f1 f7       	brne	.-4      	; 0x9da <__stack+0xdb>
     9de:	9c 83       	std	Y+4, r25	; 0x04
     9e0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9e2:	8d 81       	ldd	r24, Y+5	; 0x05
     9e4:	9e 81       	ldd	r25, Y+6	; 0x06
     9e6:	01 97       	sbiw	r24, 0x01	; 1
     9e8:	9e 83       	std	Y+6, r25	; 0x06
     9ea:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9ec:	8d 81       	ldd	r24, Y+5	; 0x05
     9ee:	9e 81       	ldd	r25, Y+6	; 0x06
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	69 f7       	brne	.-38     	; 0x9ce <__stack+0xcf>
     9f4:	14 c0       	rjmp	.+40     	; 0xa1e <__stack+0x11f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9f6:	6f 81       	ldd	r22, Y+7	; 0x07
     9f8:	78 85       	ldd	r23, Y+8	; 0x08
     9fa:	89 85       	ldd	r24, Y+9	; 0x09
     9fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     9fe:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     a02:	dc 01       	movw	r26, r24
     a04:	cb 01       	movw	r24, r22
     a06:	9e 83       	std	Y+6, r25	; 0x06
     a08:	8d 83       	std	Y+5, r24	; 0x05
     a0a:	8d 81       	ldd	r24, Y+5	; 0x05
     a0c:	9e 81       	ldd	r25, Y+6	; 0x06
     a0e:	9a 83       	std	Y+2, r25	; 0x02
     a10:	89 83       	std	Y+1, r24	; 0x01
     a12:	89 81       	ldd	r24, Y+1	; 0x01
     a14:	9a 81       	ldd	r25, Y+2	; 0x02
     a16:	01 97       	sbiw	r24, 0x01	; 1
     a18:	f1 f7       	brne	.-4      	; 0xa16 <__stack+0x117>
     a1a:	9a 83       	std	Y+2, r25	; 0x02
     a1c:	89 83       	std	Y+1, r24	; 0x01
		for(int i=0;i<5;i++)
		{
			_delay_ms(200);
			PORTC = (PINC&0x01)|((~(0x10>>i))&0x1E);
		}
		for(int i=0;i<4;i++)
     a1e:	89 ad       	ldd	r24, Y+57	; 0x39
     a20:	9a ad       	ldd	r25, Y+58	; 0x3a
     a22:	01 96       	adiw	r24, 0x01	; 1
     a24:	9a af       	std	Y+58, r25	; 0x3a
     a26:	89 af       	std	Y+57, r24	; 0x39
     a28:	89 ad       	ldd	r24, Y+57	; 0x39
     a2a:	9a ad       	ldd	r25, Y+58	; 0x3a
     a2c:	84 30       	cpi	r24, 0x04	; 4
     a2e:	91 05       	cpc	r25, r1
     a30:	0c f4       	brge	.+2      	; 0xa34 <__stack+0x135>
     a32:	70 cf       	rjmp	.-288    	; 0x914 <__stack+0x15>
void LED_SHIFT(unsigned char a)
{
	PORTB = (PINB&0x02)|0xFD;
	PORTC = (PINC&0x01)|0xFE;
	for(int j = 0;j<a;j++)
     a34:	de 01       	movw	r26, r28
     a36:	af 5b       	subi	r26, 0xBF	; 191
     a38:	bf 4f       	sbci	r27, 0xFF	; 255
     a3a:	fe 01       	movw	r30, r28
     a3c:	ef 5b       	subi	r30, 0xBF	; 191
     a3e:	ff 4f       	sbci	r31, 0xFF	; 255
     a40:	80 81       	ld	r24, Z
     a42:	91 81       	ldd	r25, Z+1	; 0x01
     a44:	01 96       	adiw	r24, 0x01	; 1
     a46:	11 96       	adiw	r26, 0x01	; 1
     a48:	9c 93       	st	X, r25
     a4a:	8e 93       	st	-X, r24
     a4c:	fe 01       	movw	r30, r28
     a4e:	ed 5b       	subi	r30, 0xBD	; 189
     a50:	ff 4f       	sbci	r31, 0xFF	; 255
     a52:	80 81       	ld	r24, Z
     a54:	28 2f       	mov	r18, r24
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	fe 01       	movw	r30, r28
     a5a:	ef 5b       	subi	r30, 0xBF	; 191
     a5c:	ff 4f       	sbci	r31, 0xFF	; 255
     a5e:	80 81       	ld	r24, Z
     a60:	91 81       	ldd	r25, Z+1	; 0x01
     a62:	82 17       	cp	r24, r18
     a64:	93 07       	cpc	r25, r19
     a66:	0c f4       	brge	.+2      	; 0xa6a <__stack+0x16b>
     a68:	91 cd       	rjmp	.-1246   	; 0x58c <LED_SHIFT+0x46>
		{
			PORTB = (PINB&0x02)|((~(0x20>>i))&0x3C);
			_delay_ms(200);
		}
	}
}
     a6a:	cd 5b       	subi	r28, 0xBD	; 189
     a6c:	df 4f       	sbci	r29, 0xFF	; 255
     a6e:	0f b6       	in	r0, 0x3f	; 63
     a70:	f8 94       	cli
     a72:	de bf       	out	0x3e, r29	; 62
     a74:	0f be       	out	0x3f, r0	; 63
     a76:	cd bf       	out	0x3d, r28	; 61
     a78:	cf 91       	pop	r28
     a7a:	df 91       	pop	r29
     a7c:	08 95       	ret

00000a7e <SEG_UPCOUNTING>:
unsigned char seg[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x27,0x7F,0x6F};

void SEG_UPCOUNTING(int a)
{
     a7e:	0f 93       	push	r16
     a80:	1f 93       	push	r17
     a82:	df 93       	push	r29
     a84:	cf 93       	push	r28
     a86:	cd b7       	in	r28, 0x3d	; 61
     a88:	de b7       	in	r29, 0x3e	; 62
     a8a:	64 97       	sbiw	r28, 0x14	; 20
     a8c:	0f b6       	in	r0, 0x3f	; 63
     a8e:	f8 94       	cli
     a90:	de bf       	out	0x3e, r29	; 62
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	cd bf       	out	0x3d, r28	; 61
     a96:	9c 8b       	std	Y+20, r25	; 0x14
     a98:	8b 8b       	std	Y+19, r24	; 0x13
	for(int j = 0; j<a; j++)
     a9a:	1a 8a       	std	Y+18, r1	; 0x12
     a9c:	19 8a       	std	Y+17, r1	; 0x11
     a9e:	ba c0       	rjmp	.+372    	; 0xc14 <SEG_UPCOUNTING+0x196>
	{
		for(int i = 0; i<10;i++)
     aa0:	18 8a       	std	Y+16, r1	; 0x10
     aa2:	1f 86       	std	Y+15, r1	; 0x0f
     aa4:	ac c0       	rjmp	.+344    	; 0xbfe <SEG_UPCOUNTING+0x180>
		{
			PORTB = (PINB&0x02)|((seg[i%10]<<2)&0x3C);
     aa6:	05 e2       	ldi	r16, 0x25	; 37
     aa8:	10 e0       	ldi	r17, 0x00	; 0
     aaa:	e3 e2       	ldi	r30, 0x23	; 35
     aac:	f0 e0       	ldi	r31, 0x00	; 0
     aae:	80 81       	ld	r24, Z
     ab0:	48 2f       	mov	r20, r24
     ab2:	42 70       	andi	r20, 0x02	; 2
     ab4:	8f 85       	ldd	r24, Y+15	; 0x0f
     ab6:	98 89       	ldd	r25, Y+16	; 0x10
     ab8:	2a e0       	ldi	r18, 0x0A	; 10
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	b9 01       	movw	r22, r18
     abe:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__divmodhi4>
     ac2:	fc 01       	movw	r30, r24
     ac4:	e0 50       	subi	r30, 0x00	; 0
     ac6:	ff 4f       	sbci	r31, 0xFF	; 255
     ac8:	80 81       	ld	r24, Z
     aca:	88 2f       	mov	r24, r24
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	88 0f       	add	r24, r24
     ad0:	99 1f       	adc	r25, r25
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	8c 73       	andi	r24, 0x3C	; 60
     ad8:	84 2b       	or	r24, r20
     ada:	f8 01       	movw	r30, r16
     adc:	80 83       	st	Z, r24
			PORTC = (PINC&0x01)|((seg[i%10]>>3)&0x1E);
     ade:	08 e2       	ldi	r16, 0x28	; 40
     ae0:	10 e0       	ldi	r17, 0x00	; 0
     ae2:	e6 e2       	ldi	r30, 0x26	; 38
     ae4:	f0 e0       	ldi	r31, 0x00	; 0
     ae6:	80 81       	ld	r24, Z
     ae8:	48 2f       	mov	r20, r24
     aea:	41 70       	andi	r20, 0x01	; 1
     aec:	8f 85       	ldd	r24, Y+15	; 0x0f
     aee:	98 89       	ldd	r25, Y+16	; 0x10
     af0:	2a e0       	ldi	r18, 0x0A	; 10
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	b9 01       	movw	r22, r18
     af6:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__divmodhi4>
     afa:	fc 01       	movw	r30, r24
     afc:	e0 50       	subi	r30, 0x00	; 0
     afe:	ff 4f       	sbci	r31, 0xFF	; 255
     b00:	80 81       	ld	r24, Z
     b02:	86 95       	lsr	r24
     b04:	86 95       	lsr	r24
     b06:	86 95       	lsr	r24
     b08:	8e 71       	andi	r24, 0x1E	; 30
     b0a:	84 2b       	or	r24, r20
     b0c:	f8 01       	movw	r30, r16
     b0e:	80 83       	st	Z, r24
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	a8 e4       	ldi	r26, 0x48	; 72
     b16:	b3 e4       	ldi	r27, 0x43	; 67
     b18:	8b 87       	std	Y+11, r24	; 0x0b
     b1a:	9c 87       	std	Y+12, r25	; 0x0c
     b1c:	ad 87       	std	Y+13, r26	; 0x0d
     b1e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b20:	6b 85       	ldd	r22, Y+11	; 0x0b
     b22:	7c 85       	ldd	r23, Y+12	; 0x0c
     b24:	8d 85       	ldd	r24, Y+13	; 0x0d
     b26:	9e 85       	ldd	r25, Y+14	; 0x0e
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	4a e7       	ldi	r20, 0x7A	; 122
     b2e:	55 e4       	ldi	r21, 0x45	; 69
     b30:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     b34:	dc 01       	movw	r26, r24
     b36:	cb 01       	movw	r24, r22
     b38:	8f 83       	std	Y+7, r24	; 0x07
     b3a:	98 87       	std	Y+8, r25	; 0x08
     b3c:	a9 87       	std	Y+9, r26	; 0x09
     b3e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     b40:	6f 81       	ldd	r22, Y+7	; 0x07
     b42:	78 85       	ldd	r23, Y+8	; 0x08
     b44:	89 85       	ldd	r24, Y+9	; 0x09
     b46:	9a 85       	ldd	r25, Y+10	; 0x0a
     b48:	20 e0       	ldi	r18, 0x00	; 0
     b4a:	30 e0       	ldi	r19, 0x00	; 0
     b4c:	40 e8       	ldi	r20, 0x80	; 128
     b4e:	5f e3       	ldi	r21, 0x3F	; 63
     b50:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     b54:	88 23       	and	r24, r24
     b56:	2c f4       	brge	.+10     	; 0xb62 <SEG_UPCOUNTING+0xe4>
		__ticks = 1;
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	9e 83       	std	Y+6, r25	; 0x06
     b5e:	8d 83       	std	Y+5, r24	; 0x05
     b60:	3f c0       	rjmp	.+126    	; 0xbe0 <SEG_UPCOUNTING+0x162>
	else if (__tmp > 65535)
     b62:	6f 81       	ldd	r22, Y+7	; 0x07
     b64:	78 85       	ldd	r23, Y+8	; 0x08
     b66:	89 85       	ldd	r24, Y+9	; 0x09
     b68:	9a 85       	ldd	r25, Y+10	; 0x0a
     b6a:	20 e0       	ldi	r18, 0x00	; 0
     b6c:	3f ef       	ldi	r19, 0xFF	; 255
     b6e:	4f e7       	ldi	r20, 0x7F	; 127
     b70:	57 e4       	ldi	r21, 0x47	; 71
     b72:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     b76:	18 16       	cp	r1, r24
     b78:	4c f5       	brge	.+82     	; 0xbcc <SEG_UPCOUNTING+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b7a:	6b 85       	ldd	r22, Y+11	; 0x0b
     b7c:	7c 85       	ldd	r23, Y+12	; 0x0c
     b7e:	8d 85       	ldd	r24, Y+13	; 0x0d
     b80:	9e 85       	ldd	r25, Y+14	; 0x0e
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	30 e0       	ldi	r19, 0x00	; 0
     b86:	40 e2       	ldi	r20, 0x20	; 32
     b88:	51 e4       	ldi	r21, 0x41	; 65
     b8a:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     b8e:	dc 01       	movw	r26, r24
     b90:	cb 01       	movw	r24, r22
     b92:	bc 01       	movw	r22, r24
     b94:	cd 01       	movw	r24, r26
     b96:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     b9a:	dc 01       	movw	r26, r24
     b9c:	cb 01       	movw	r24, r22
     b9e:	9e 83       	std	Y+6, r25	; 0x06
     ba0:	8d 83       	std	Y+5, r24	; 0x05
     ba2:	0f c0       	rjmp	.+30     	; 0xbc2 <SEG_UPCOUNTING+0x144>
     ba4:	80 e9       	ldi	r24, 0x90	; 144
     ba6:	91 e0       	ldi	r25, 0x01	; 1
     ba8:	9c 83       	std	Y+4, r25	; 0x04
     baa:	8b 83       	std	Y+3, r24	; 0x03
     bac:	8b 81       	ldd	r24, Y+3	; 0x03
     bae:	9c 81       	ldd	r25, Y+4	; 0x04
     bb0:	01 97       	sbiw	r24, 0x01	; 1
     bb2:	f1 f7       	brne	.-4      	; 0xbb0 <SEG_UPCOUNTING+0x132>
     bb4:	9c 83       	std	Y+4, r25	; 0x04
     bb6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bb8:	8d 81       	ldd	r24, Y+5	; 0x05
     bba:	9e 81       	ldd	r25, Y+6	; 0x06
     bbc:	01 97       	sbiw	r24, 0x01	; 1
     bbe:	9e 83       	std	Y+6, r25	; 0x06
     bc0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bc2:	8d 81       	ldd	r24, Y+5	; 0x05
     bc4:	9e 81       	ldd	r25, Y+6	; 0x06
     bc6:	00 97       	sbiw	r24, 0x00	; 0
     bc8:	69 f7       	brne	.-38     	; 0xba4 <SEG_UPCOUNTING+0x126>
     bca:	14 c0       	rjmp	.+40     	; 0xbf4 <SEG_UPCOUNTING+0x176>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bcc:	6f 81       	ldd	r22, Y+7	; 0x07
     bce:	78 85       	ldd	r23, Y+8	; 0x08
     bd0:	89 85       	ldd	r24, Y+9	; 0x09
     bd2:	9a 85       	ldd	r25, Y+10	; 0x0a
     bd4:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     bd8:	dc 01       	movw	r26, r24
     bda:	cb 01       	movw	r24, r22
     bdc:	9e 83       	std	Y+6, r25	; 0x06
     bde:	8d 83       	std	Y+5, r24	; 0x05
     be0:	8d 81       	ldd	r24, Y+5	; 0x05
     be2:	9e 81       	ldd	r25, Y+6	; 0x06
     be4:	9a 83       	std	Y+2, r25	; 0x02
     be6:	89 83       	std	Y+1, r24	; 0x01
     be8:	89 81       	ldd	r24, Y+1	; 0x01
     bea:	9a 81       	ldd	r25, Y+2	; 0x02
     bec:	01 97       	sbiw	r24, 0x01	; 1
     bee:	f1 f7       	brne	.-4      	; 0xbec <SEG_UPCOUNTING+0x16e>
     bf0:	9a 83       	std	Y+2, r25	; 0x02
     bf2:	89 83       	std	Y+1, r24	; 0x01

void SEG_UPCOUNTING(int a)
{
	for(int j = 0; j<a; j++)
	{
		for(int i = 0; i<10;i++)
     bf4:	8f 85       	ldd	r24, Y+15	; 0x0f
     bf6:	98 89       	ldd	r25, Y+16	; 0x10
     bf8:	01 96       	adiw	r24, 0x01	; 1
     bfa:	98 8b       	std	Y+16, r25	; 0x10
     bfc:	8f 87       	std	Y+15, r24	; 0x0f
     bfe:	8f 85       	ldd	r24, Y+15	; 0x0f
     c00:	98 89       	ldd	r25, Y+16	; 0x10
     c02:	8a 30       	cpi	r24, 0x0A	; 10
     c04:	91 05       	cpc	r25, r1
     c06:	0c f4       	brge	.+2      	; 0xc0a <SEG_UPCOUNTING+0x18c>
     c08:	4e cf       	rjmp	.-356    	; 0xaa6 <SEG_UPCOUNTING+0x28>
unsigned char seg[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x27,0x7F,0x6F};

void SEG_UPCOUNTING(int a)
{
	for(int j = 0; j<a; j++)
     c0a:	89 89       	ldd	r24, Y+17	; 0x11
     c0c:	9a 89       	ldd	r25, Y+18	; 0x12
     c0e:	01 96       	adiw	r24, 0x01	; 1
     c10:	9a 8b       	std	Y+18, r25	; 0x12
     c12:	89 8b       	std	Y+17, r24	; 0x11
     c14:	29 89       	ldd	r18, Y+17	; 0x11
     c16:	3a 89       	ldd	r19, Y+18	; 0x12
     c18:	8b 89       	ldd	r24, Y+19	; 0x13
     c1a:	9c 89       	ldd	r25, Y+20	; 0x14
     c1c:	28 17       	cp	r18, r24
     c1e:	39 07       	cpc	r19, r25
     c20:	0c f4       	brge	.+2      	; 0xc24 <SEG_UPCOUNTING+0x1a6>
     c22:	3e cf       	rjmp	.-388    	; 0xaa0 <SEG_UPCOUNTING+0x22>
			PORTB = (PINB&0x02)|((seg[i%10]<<2)&0x3C);
			PORTC = (PINC&0x01)|((seg[i%10]>>3)&0x1E);
			_delay_ms(200);
		}
	}
}
     c24:	64 96       	adiw	r28, 0x14	; 20
     c26:	0f b6       	in	r0, 0x3f	; 63
     c28:	f8 94       	cli
     c2a:	de bf       	out	0x3e, r29	; 62
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	cd bf       	out	0x3d, r28	; 61
     c30:	cf 91       	pop	r28
     c32:	df 91       	pop	r29
     c34:	1f 91       	pop	r17
     c36:	0f 91       	pop	r16
     c38:	08 95       	ret

00000c3a <tx_char>:
#include <stdio.h>
void tx_char(unsigned char txChar)
{
     c3a:	df 93       	push	r29
     c3c:	cf 93       	push	r28
     c3e:	0f 92       	push	r0
     c40:	cd b7       	in	r28, 0x3d	; 61
     c42:	de b7       	in	r29, 0x3e	; 62
     c44:	89 83       	std	Y+1, r24	; 0x01
   while(!(UCSR0A & (1<<UDRE0)));
     c46:	e0 ec       	ldi	r30, 0xC0	; 192
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	80 81       	ld	r24, Z
     c4c:	88 2f       	mov	r24, r24
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	80 72       	andi	r24, 0x20	; 32
     c52:	90 70       	andi	r25, 0x00	; 0
     c54:	00 97       	sbiw	r24, 0x00	; 0
     c56:	b9 f3       	breq	.-18     	; 0xc46 <tx_char+0xc>
   UDR0 = txChar;
     c58:	e6 ec       	ldi	r30, 0xC6	; 198
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	89 81       	ldd	r24, Y+1	; 0x01
     c5e:	80 83       	st	Z, r24
}
     c60:	0f 90       	pop	r0
     c62:	cf 91       	pop	r28
     c64:	df 91       	pop	r29
     c66:	08 95       	ret

00000c68 <tx_str>:

void tx_str(unsigned char *txStr, int len)
{
     c68:	df 93       	push	r29
     c6a:	cf 93       	push	r28
     c6c:	00 d0       	rcall	.+0      	; 0xc6e <tx_str+0x6>
     c6e:	00 d0       	rcall	.+0      	; 0xc70 <tx_str+0x8>
     c70:	00 d0       	rcall	.+0      	; 0xc72 <tx_str+0xa>
     c72:	cd b7       	in	r28, 0x3d	; 61
     c74:	de b7       	in	r29, 0x3e	; 62
     c76:	9c 83       	std	Y+4, r25	; 0x04
     c78:	8b 83       	std	Y+3, r24	; 0x03
     c7a:	7e 83       	std	Y+6, r23	; 0x06
     c7c:	6d 83       	std	Y+5, r22	; 0x05
   int i;
   for(i = 0;i< len; i++){
     c7e:	1a 82       	std	Y+2, r1	; 0x02
     c80:	19 82       	std	Y+1, r1	; 0x01
     c82:	0f c0       	rjmp	.+30     	; 0xca2 <tx_str+0x3a>
      tx_char(txStr[i]);
     c84:	29 81       	ldd	r18, Y+1	; 0x01
     c86:	3a 81       	ldd	r19, Y+2	; 0x02
     c88:	8b 81       	ldd	r24, Y+3	; 0x03
     c8a:	9c 81       	ldd	r25, Y+4	; 0x04
     c8c:	fc 01       	movw	r30, r24
     c8e:	e2 0f       	add	r30, r18
     c90:	f3 1f       	adc	r31, r19
     c92:	80 81       	ld	r24, Z
     c94:	0e 94 1d 06 	call	0xc3a	; 0xc3a <tx_char>
}

void tx_str(unsigned char *txStr, int len)
{
   int i;
   for(i = 0;i< len; i++){
     c98:	89 81       	ldd	r24, Y+1	; 0x01
     c9a:	9a 81       	ldd	r25, Y+2	; 0x02
     c9c:	01 96       	adiw	r24, 0x01	; 1
     c9e:	9a 83       	std	Y+2, r25	; 0x02
     ca0:	89 83       	std	Y+1, r24	; 0x01
     ca2:	29 81       	ldd	r18, Y+1	; 0x01
     ca4:	3a 81       	ldd	r19, Y+2	; 0x02
     ca6:	8d 81       	ldd	r24, Y+5	; 0x05
     ca8:	9e 81       	ldd	r25, Y+6	; 0x06
     caa:	28 17       	cp	r18, r24
     cac:	39 07       	cpc	r19, r25
     cae:	54 f3       	brlt	.-44     	; 0xc84 <tx_str+0x1c>
      tx_char(txStr[i]);
   }
}
     cb0:	26 96       	adiw	r28, 0x06	; 6
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	f8 94       	cli
     cb6:	de bf       	out	0x3e, r29	; 62
     cb8:	0f be       	out	0x3f, r0	; 63
     cba:	cd bf       	out	0x3d, r28	; 61
     cbc:	cf 91       	pop	r28
     cbe:	df 91       	pop	r29
     cc0:	08 95       	ret

00000cc2 <Printf>:

void Printf(char *fmt, ...)
{
     cc2:	df 93       	push	r29
     cc4:	cf 93       	push	r28
     cc6:	cd b7       	in	r28, 0x3d	; 61
     cc8:	de b7       	in	r29, 0x3e	; 62
     cca:	c4 58       	subi	r28, 0x84	; 132
     ccc:	d0 40       	sbci	r29, 0x00	; 0
     cce:	0f b6       	in	r0, 0x3f	; 63
     cd0:	f8 94       	cli
     cd2:	de bf       	out	0x3e, r29	; 62
     cd4:	0f be       	out	0x3f, r0	; 63
     cd6:	cd bf       	out	0x3d, r28	; 61
   va_list    arg_ptr;
   uint8_t    i,len;
   char    sText[128];
      
   /* text buffer */
   for (i = 0; i < 128; i++)
     cd8:	1a 82       	std	Y+2, r1	; 0x02
     cda:	0c c0       	rjmp	.+24     	; 0xcf4 <Printf+0x32>
      sText[i] = 0;
     cdc:	8a 81       	ldd	r24, Y+2	; 0x02
     cde:	28 2f       	mov	r18, r24
     ce0:	30 e0       	ldi	r19, 0x00	; 0
     ce2:	ce 01       	movw	r24, r28
     ce4:	05 96       	adiw	r24, 0x05	; 5
     ce6:	fc 01       	movw	r30, r24
     ce8:	e2 0f       	add	r30, r18
     cea:	f3 1f       	adc	r31, r19
     cec:	10 82       	st	Z, r1
   va_list    arg_ptr;
   uint8_t    i,len;
   char    sText[128];
      
   /* text buffer */
   for (i = 0; i < 128; i++)
     cee:	8a 81       	ldd	r24, Y+2	; 0x02
     cf0:	8f 5f       	subi	r24, 0xFF	; 255
     cf2:	8a 83       	std	Y+2, r24	; 0x02
     cf4:	8a 81       	ldd	r24, Y+2	; 0x02
     cf6:	88 23       	and	r24, r24
     cf8:	8c f7       	brge	.-30     	; 0xcdc <Printf+0x1a>
      sText[i] = 0;

   va_start(arg_ptr, fmt);
     cfa:	ce 01       	movw	r24, r28
     cfc:	85 57       	subi	r24, 0x75	; 117
     cfe:	9f 4f       	sbci	r25, 0xFF	; 255
     d00:	9c 83       	std	Y+4, r25	; 0x04
     d02:	8b 83       	std	Y+3, r24	; 0x03
   vsprintf(sText, fmt, arg_ptr);
     d04:	4b 81       	ldd	r20, Y+3	; 0x03
     d06:	5c 81       	ldd	r21, Y+4	; 0x04
     d08:	ce 01       	movw	r24, r28
     d0a:	05 96       	adiw	r24, 0x05	; 5
     d0c:	c7 57       	subi	r28, 0x77	; 119
     d0e:	df 4f       	sbci	r29, 0xFF	; 255
     d10:	28 81       	ld	r18, Y
     d12:	39 81       	ldd	r19, Y+1	; 0x01
     d14:	c9 58       	subi	r28, 0x89	; 137
     d16:	d0 40       	sbci	r29, 0x00	; 0
     d18:	b9 01       	movw	r22, r18
     d1a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <vsprintf>
   va_end(arg_ptr);

   len = strlen(sText);
     d1e:	ce 01       	movw	r24, r28
     d20:	05 96       	adiw	r24, 0x05	; 5
     d22:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <strlen>
     d26:	89 83       	std	Y+1, r24	; 0x01
   for (i = 0; i < len; i++){
     d28:	1a 82       	std	Y+2, r1	; 0x02
     d2a:	0e c0       	rjmp	.+28     	; 0xd48 <Printf+0x86>
      tx_char(sText[i]);
     d2c:	8a 81       	ldd	r24, Y+2	; 0x02
     d2e:	28 2f       	mov	r18, r24
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	ce 01       	movw	r24, r28
     d34:	05 96       	adiw	r24, 0x05	; 5
     d36:	fc 01       	movw	r30, r24
     d38:	e2 0f       	add	r30, r18
     d3a:	f3 1f       	adc	r31, r19
     d3c:	80 81       	ld	r24, Z
     d3e:	0e 94 1d 06 	call	0xc3a	; 0xc3a <tx_char>
   va_start(arg_ptr, fmt);
   vsprintf(sText, fmt, arg_ptr);
   va_end(arg_ptr);

   len = strlen(sText);
   for (i = 0; i < len; i++){
     d42:	8a 81       	ldd	r24, Y+2	; 0x02
     d44:	8f 5f       	subi	r24, 0xFF	; 255
     d46:	8a 83       	std	Y+2, r24	; 0x02
     d48:	9a 81       	ldd	r25, Y+2	; 0x02
     d4a:	89 81       	ldd	r24, Y+1	; 0x01
     d4c:	98 17       	cp	r25, r24
     d4e:	70 f3       	brcs	.-36     	; 0xd2c <Printf+0x6a>
      tx_char(sText[i]);
   }
}
     d50:	cc 57       	subi	r28, 0x7C	; 124
     d52:	df 4f       	sbci	r29, 0xFF	; 255
     d54:	0f b6       	in	r0, 0x3f	; 63
     d56:	f8 94       	cli
     d58:	de bf       	out	0x3e, r29	; 62
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	cd bf       	out	0x3d, r28	; 61
     d5e:	cf 91       	pop	r28
     d60:	df 91       	pop	r29
     d62:	08 95       	ret

00000d64 <play>:
void play(unsigned int y){
     d64:	df 93       	push	r29
     d66:	cf 93       	push	r28
     d68:	00 d0       	rcall	.+0      	; 0xd6a <play+0x6>
     d6a:	cd b7       	in	r28, 0x3d	; 61
     d6c:	de b7       	in	r29, 0x3e	; 62
     d6e:	9a 83       	std	Y+2, r25	; 0x02
     d70:	89 83       	std	Y+1, r24	; 0x01
	DDRB |= 0x02;
     d72:	a4 e2       	ldi	r26, 0x24	; 36
     d74:	b0 e0       	ldi	r27, 0x00	; 0
     d76:	e4 e2       	ldi	r30, 0x24	; 36
     d78:	f0 e0       	ldi	r31, 0x00	; 0
     d7a:	80 81       	ld	r24, Z
     d7c:	82 60       	ori	r24, 0x02	; 2
     d7e:	8c 93       	st	X, r24
	TCCR1A |=  0X40; //(1 << COM1A0); // 0x40
     d80:	a0 e8       	ldi	r26, 0x80	; 128
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e0 e8       	ldi	r30, 0x80	; 128
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	80 81       	ld	r24, Z
     d8a:	80 64       	ori	r24, 0x40	; 64
     d8c:	8c 93       	st	X, r24
	TCCR1B |=  0x1A; //(1 << WGM13)| (1 << WGM12)| (1 << CS11); // 0x1A
     d8e:	a1 e8       	ldi	r26, 0x81	; 129
     d90:	b0 e0       	ldi	r27, 0x00	; 0
     d92:	e1 e8       	ldi	r30, 0x81	; 129
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	80 81       	ld	r24, Z
     d98:	8a 61       	ori	r24, 0x1A	; 26
     d9a:	8c 93       	st	X, r24
	ICR1 = y;
     d9c:	e6 e8       	ldi	r30, 0x86	; 134
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	9a 81       	ldd	r25, Y+2	; 0x02
     da4:	91 83       	std	Z+1, r25	; 0x01
     da6:	80 83       	st	Z, r24
}
     da8:	0f 90       	pop	r0
     daa:	0f 90       	pop	r0
     dac:	cf 91       	pop	r28
     dae:	df 91       	pop	r29
     db0:	08 95       	ret

00000db2 <stop>:

void stop(void){
     db2:	df 93       	push	r29
     db4:	cf 93       	push	r28
     db6:	cd b7       	in	r28, 0x3d	; 61
     db8:	de b7       	in	r29, 0x3e	; 62
	TCCR1A = 0x00;
     dba:	e0 e8       	ldi	r30, 0x80	; 128
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	10 82       	st	Z, r1
	TCCR1B = 0x00;
     dc0:	e1 e8       	ldi	r30, 0x81	; 129
     dc2:	f0 e0       	ldi	r31, 0x00	; 0
     dc4:	10 82       	st	Z, r1
	TCNT1 = 0;
     dc6:	e4 e8       	ldi	r30, 0x84	; 132
     dc8:	f0 e0       	ldi	r31, 0x00	; 0
     dca:	11 82       	std	Z+1, r1	; 0x01
     dcc:	10 82       	st	Z, r1
	ICR1 = 0;
     dce:	e6 e8       	ldi	r30, 0x86	; 134
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	11 82       	std	Z+1, r1	; 0x01
     dd4:	10 82       	st	Z, r1

	DDRB = ~0x02;
     dd6:	e4 e2       	ldi	r30, 0x24	; 36
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	8d ef       	ldi	r24, 0xFD	; 253
     ddc:	80 83       	st	Z, r24
}
     dde:	cf 91       	pop	r28
     de0:	df 91       	pop	r29
     de2:	08 95       	ret

00000de4 <__vector_18>:
int sint_flag = 0;
unsigned char cnt = 0;
unsigned char _command = 0;


ISR(USART_RX_vect){
     de4:	1f 92       	push	r1
     de6:	0f 92       	push	r0
     de8:	0f b6       	in	r0, 0x3f	; 63
     dea:	0f 92       	push	r0
     dec:	11 24       	eor	r1, r1
     dee:	2f 93       	push	r18
     df0:	3f 93       	push	r19
     df2:	4f 93       	push	r20
     df4:	5f 93       	push	r21
     df6:	6f 93       	push	r22
     df8:	7f 93       	push	r23
     dfa:	8f 93       	push	r24
     dfc:	9f 93       	push	r25
     dfe:	af 93       	push	r26
     e00:	bf 93       	push	r27
     e02:	ef 93       	push	r30
     e04:	ff 93       	push	r31
     e06:	df 93       	push	r29
     e08:	cf 93       	push	r28
     e0a:	0f 92       	push	r0
     e0c:	cd b7       	in	r28, 0x3d	; 61
     e0e:	de b7       	in	r29, 0x3e	; 62
   unsigned char _usart_rcv = 0;
     e10:	19 82       	std	Y+1, r1	; 0x01
         
   _usart_rcv = UDR0;
     e12:	e6 ec       	ldi	r30, 0xC6	; 198
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	89 83       	std	Y+1, r24	; 0x01

   if(flag == 0 && _usart_rcv == STX)
     e1a:	80 91 35 01 	lds	r24, 0x0135
     e1e:	90 91 36 01 	lds	r25, 0x0136
     e22:	00 97       	sbiw	r24, 0x00	; 0
     e24:	51 f4       	brne	.+20     	; 0xe3a <__vector_18+0x56>
     e26:	89 81       	ldd	r24, Y+1	; 0x01
     e28:	82 30       	cpi	r24, 0x02	; 2
     e2a:	39 f4       	brne	.+14     	; 0xe3a <__vector_18+0x56>
   {
      flag =1;
     e2c:	81 e0       	ldi	r24, 0x01	; 1
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	90 93 36 01 	sts	0x0136, r25
     e34:	80 93 35 01 	sts	0x0135, r24
     e38:	50 c0       	rjmp	.+160    	; 0xeda <__vector_18+0xf6>
   }
   else if(flag ==1)
     e3a:	80 91 35 01 	lds	r24, 0x0135
     e3e:	90 91 36 01 	lds	r25, 0x0136
     e42:	81 30       	cpi	r24, 0x01	; 1
     e44:	91 05       	cpc	r25, r1
     e46:	51 f4       	brne	.+20     	; 0xe5c <__vector_18+0x78>
   {
      _command = _usart_rcv;
     e48:	89 81       	ldd	r24, Y+1	; 0x01
     e4a:	80 93 3a 01 	sts	0x013A, r24
      flag = 2;
     e4e:	82 e0       	ldi	r24, 0x02	; 2
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	90 93 36 01 	sts	0x0136, r25
     e56:	80 93 35 01 	sts	0x0135, r24
     e5a:	3f c0       	rjmp	.+126    	; 0xeda <__vector_18+0xf6>
   }
   else if(flag ==2)
     e5c:	80 91 35 01 	lds	r24, 0x0135
     e60:	90 91 36 01 	lds	r25, 0x0136
     e64:	82 30       	cpi	r24, 0x02	; 2
     e66:	91 05       	cpc	r25, r1
     e68:	51 f4       	brne	.+20     	; 0xe7e <__vector_18+0x9a>
   {
      cnt = _usart_rcv;
     e6a:	89 81       	ldd	r24, Y+1	; 0x01
     e6c:	80 93 39 01 	sts	0x0139, r24
      flag = 3;
     e70:	83 e0       	ldi	r24, 0x03	; 3
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	90 93 36 01 	sts	0x0136, r25
     e78:	80 93 35 01 	sts	0x0135, r24
     e7c:	2e c0       	rjmp	.+92     	; 0xeda <__vector_18+0xf6>
   }
   else if(flag == 3)
     e7e:	80 91 35 01 	lds	r24, 0x0135
     e82:	90 91 36 01 	lds	r25, 0x0136
     e86:	83 30       	cpi	r24, 0x03	; 3
     e88:	91 05       	cpc	r25, r1
     e8a:	d9 f4       	brne	.+54     	; 0xec2 <__vector_18+0xde>
   {
      if(_usart_rcv == ETX)
     e8c:	89 81       	ldd	r24, Y+1	; 0x01
     e8e:	83 30       	cpi	r24, 0x03	; 3
     e90:	39 f4       	brne	.+14     	; 0xea0 <__vector_18+0xbc>
      {
         sint_flag = 1;
     e92:	81 e0       	ldi	r24, 0x01	; 1
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	90 93 38 01 	sts	0x0138, r25
     e9a:	80 93 37 01 	sts	0x0137, r24
     e9e:	0c c0       	rjmp	.+24     	; 0xeb8 <__vector_18+0xd4>
      }
      else
      {
         Printf("RX error\n");
     ea0:	00 d0       	rcall	.+0      	; 0xea2 <__vector_18+0xbe>
     ea2:	ed b7       	in	r30, 0x3d	; 61
     ea4:	fe b7       	in	r31, 0x3e	; 62
     ea6:	31 96       	adiw	r30, 0x01	; 1
     ea8:	8a e0       	ldi	r24, 0x0A	; 10
     eaa:	91 e0       	ldi	r25, 0x01	; 1
     eac:	91 83       	std	Z+1, r25	; 0x01
     eae:	80 83       	st	Z, r24
     eb0:	0e 94 61 06 	call	0xcc2	; 0xcc2 <Printf>
     eb4:	0f 90       	pop	r0
     eb6:	0f 90       	pop	r0
      }
      flag = 0;
     eb8:	10 92 36 01 	sts	0x0136, r1
     ebc:	10 92 35 01 	sts	0x0135, r1
     ec0:	0c c0       	rjmp	.+24     	; 0xeda <__vector_18+0xf6>
   }
   else
   {
      Printf("RX error\n");
     ec2:	00 d0       	rcall	.+0      	; 0xec4 <__vector_18+0xe0>
     ec4:	ed b7       	in	r30, 0x3d	; 61
     ec6:	fe b7       	in	r31, 0x3e	; 62
     ec8:	31 96       	adiw	r30, 0x01	; 1
     eca:	8a e0       	ldi	r24, 0x0A	; 10
     ecc:	91 e0       	ldi	r25, 0x01	; 1
     ece:	91 83       	std	Z+1, r25	; 0x01
     ed0:	80 83       	st	Z, r24
     ed2:	0e 94 61 06 	call	0xcc2	; 0xcc2 <Printf>
     ed6:	0f 90       	pop	r0
     ed8:	0f 90       	pop	r0
   }
   sei();
     eda:	78 94       	sei
}
     edc:	0f 90       	pop	r0
     ede:	cf 91       	pop	r28
     ee0:	df 91       	pop	r29
     ee2:	ff 91       	pop	r31
     ee4:	ef 91       	pop	r30
     ee6:	bf 91       	pop	r27
     ee8:	af 91       	pop	r26
     eea:	9f 91       	pop	r25
     eec:	8f 91       	pop	r24
     eee:	7f 91       	pop	r23
     ef0:	6f 91       	pop	r22
     ef2:	5f 91       	pop	r21
     ef4:	4f 91       	pop	r20
     ef6:	3f 91       	pop	r19
     ef8:	2f 91       	pop	r18
     efa:	0f 90       	pop	r0
     efc:	0f be       	out	0x3f, r0	; 63
     efe:	0f 90       	pop	r0
     f00:	1f 90       	pop	r1
     f02:	18 95       	reti

00000f04 <domisol>:

void domisol(int a)
{
     f04:	df 93       	push	r29
     f06:	cf 93       	push	r28
     f08:	cd b7       	in	r28, 0x3d	; 61
     f0a:	de b7       	in	r29, 0x3e	; 62
     f0c:	ae 97       	sbiw	r28, 0x2e	; 46
     f0e:	0f b6       	in	r0, 0x3f	; 63
     f10:	f8 94       	cli
     f12:	de bf       	out	0x3e, r29	; 62
     f14:	0f be       	out	0x3f, r0	; 63
     f16:	cd bf       	out	0x3d, r28	; 61
     f18:	9e a7       	std	Y+46, r25	; 0x2e
     f1a:	8d a7       	std	Y+45, r24	; 0x2d
	for(int i=0;i<a;i++)
     f1c:	1c a6       	std	Y+44, r1	; 0x2c
     f1e:	1b a6       	std	Y+43, r1	; 0x2b
     f20:	69 c1       	rjmp	.+722    	; 0x11f4 <domisol+0x2f0>
	{
		play(FREQ(523));
     f22:	84 e7       	ldi	r24, 0x74	; 116
     f24:	97 e0       	ldi	r25, 0x07	; 7
     f26:	0e 94 b2 06 	call	0xd64	; 0xd64 <play>
     f2a:	80 e0       	ldi	r24, 0x00	; 0
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	aa e7       	ldi	r26, 0x7A	; 122
     f30:	b4 e4       	ldi	r27, 0x44	; 68
     f32:	8f a3       	std	Y+39, r24	; 0x27
     f34:	98 a7       	std	Y+40, r25	; 0x28
     f36:	a9 a7       	std	Y+41, r26	; 0x29
     f38:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f3a:	6f a1       	ldd	r22, Y+39	; 0x27
     f3c:	78 a5       	ldd	r23, Y+40	; 0x28
     f3e:	89 a5       	ldd	r24, Y+41	; 0x29
     f40:	9a a5       	ldd	r25, Y+42	; 0x2a
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	4a e7       	ldi	r20, 0x7A	; 122
     f48:	55 e4       	ldi	r21, 0x45	; 69
     f4a:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     f4e:	dc 01       	movw	r26, r24
     f50:	cb 01       	movw	r24, r22
     f52:	8b a3       	std	Y+35, r24	; 0x23
     f54:	9c a3       	std	Y+36, r25	; 0x24
     f56:	ad a3       	std	Y+37, r26	; 0x25
     f58:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     f5a:	6b a1       	ldd	r22, Y+35	; 0x23
     f5c:	7c a1       	ldd	r23, Y+36	; 0x24
     f5e:	8d a1       	ldd	r24, Y+37	; 0x25
     f60:	9e a1       	ldd	r25, Y+38	; 0x26
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	40 e8       	ldi	r20, 0x80	; 128
     f68:	5f e3       	ldi	r21, 0x3F	; 63
     f6a:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
     f6e:	88 23       	and	r24, r24
     f70:	2c f4       	brge	.+10     	; 0xf7c <domisol+0x78>
		__ticks = 1;
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	9a a3       	std	Y+34, r25	; 0x22
     f78:	89 a3       	std	Y+33, r24	; 0x21
     f7a:	3f c0       	rjmp	.+126    	; 0xffa <domisol+0xf6>
	else if (__tmp > 65535)
     f7c:	6b a1       	ldd	r22, Y+35	; 0x23
     f7e:	7c a1       	ldd	r23, Y+36	; 0x24
     f80:	8d a1       	ldd	r24, Y+37	; 0x25
     f82:	9e a1       	ldd	r25, Y+38	; 0x26
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	3f ef       	ldi	r19, 0xFF	; 255
     f88:	4f e7       	ldi	r20, 0x7F	; 127
     f8a:	57 e4       	ldi	r21, 0x47	; 71
     f8c:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
     f90:	18 16       	cp	r1, r24
     f92:	4c f5       	brge	.+82     	; 0xfe6 <domisol+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f94:	6f a1       	ldd	r22, Y+39	; 0x27
     f96:	78 a5       	ldd	r23, Y+40	; 0x28
     f98:	89 a5       	ldd	r24, Y+41	; 0x29
     f9a:	9a a5       	ldd	r25, Y+42	; 0x2a
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	40 e2       	ldi	r20, 0x20	; 32
     fa2:	51 e4       	ldi	r21, 0x41	; 65
     fa4:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
     fa8:	dc 01       	movw	r26, r24
     faa:	cb 01       	movw	r24, r22
     fac:	bc 01       	movw	r22, r24
     fae:	cd 01       	movw	r24, r26
     fb0:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     fb4:	dc 01       	movw	r26, r24
     fb6:	cb 01       	movw	r24, r22
     fb8:	9a a3       	std	Y+34, r25	; 0x22
     fba:	89 a3       	std	Y+33, r24	; 0x21
     fbc:	0f c0       	rjmp	.+30     	; 0xfdc <domisol+0xd8>
     fbe:	80 e9       	ldi	r24, 0x90	; 144
     fc0:	91 e0       	ldi	r25, 0x01	; 1
     fc2:	98 a3       	std	Y+32, r25	; 0x20
     fc4:	8f 8f       	std	Y+31, r24	; 0x1f
     fc6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     fc8:	98 a1       	ldd	r25, Y+32	; 0x20
     fca:	01 97       	sbiw	r24, 0x01	; 1
     fcc:	f1 f7       	brne	.-4      	; 0xfca <domisol+0xc6>
     fce:	98 a3       	std	Y+32, r25	; 0x20
     fd0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fd2:	89 a1       	ldd	r24, Y+33	; 0x21
     fd4:	9a a1       	ldd	r25, Y+34	; 0x22
     fd6:	01 97       	sbiw	r24, 0x01	; 1
     fd8:	9a a3       	std	Y+34, r25	; 0x22
     fda:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fdc:	89 a1       	ldd	r24, Y+33	; 0x21
     fde:	9a a1       	ldd	r25, Y+34	; 0x22
     fe0:	00 97       	sbiw	r24, 0x00	; 0
     fe2:	69 f7       	brne	.-38     	; 0xfbe <domisol+0xba>
     fe4:	14 c0       	rjmp	.+40     	; 0x100e <domisol+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fe6:	6b a1       	ldd	r22, Y+35	; 0x23
     fe8:	7c a1       	ldd	r23, Y+36	; 0x24
     fea:	8d a1       	ldd	r24, Y+37	; 0x25
     fec:	9e a1       	ldd	r25, Y+38	; 0x26
     fee:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
     ff2:	dc 01       	movw	r26, r24
     ff4:	cb 01       	movw	r24, r22
     ff6:	9a a3       	std	Y+34, r25	; 0x22
     ff8:	89 a3       	std	Y+33, r24	; 0x21
     ffa:	89 a1       	ldd	r24, Y+33	; 0x21
     ffc:	9a a1       	ldd	r25, Y+34	; 0x22
     ffe:	9e 8f       	std	Y+30, r25	; 0x1e
    1000:	8d 8f       	std	Y+29, r24	; 0x1d
    1002:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1004:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1006:	01 97       	sbiw	r24, 0x01	; 1
    1008:	f1 f7       	brne	.-4      	; 0x1006 <domisol+0x102>
    100a:	9e 8f       	std	Y+30, r25	; 0x1e
    100c:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1000);
		play(FREQ(659));
    100e:	8b ee       	ldi	r24, 0xEB	; 235
    1010:	95 e0       	ldi	r25, 0x05	; 5
    1012:	0e 94 b2 06 	call	0xd64	; 0xd64 <play>
    1016:	80 e0       	ldi	r24, 0x00	; 0
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	aa e7       	ldi	r26, 0x7A	; 122
    101c:	b4 e4       	ldi	r27, 0x44	; 68
    101e:	89 8f       	std	Y+25, r24	; 0x19
    1020:	9a 8f       	std	Y+26, r25	; 0x1a
    1022:	ab 8f       	std	Y+27, r26	; 0x1b
    1024:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1026:	69 8d       	ldd	r22, Y+25	; 0x19
    1028:	7a 8d       	ldd	r23, Y+26	; 0x1a
    102a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    102c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    102e:	20 e0       	ldi	r18, 0x00	; 0
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	4a e7       	ldi	r20, 0x7A	; 122
    1034:	55 e4       	ldi	r21, 0x45	; 69
    1036:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
    103a:	dc 01       	movw	r26, r24
    103c:	cb 01       	movw	r24, r22
    103e:	8d 8b       	std	Y+21, r24	; 0x15
    1040:	9e 8b       	std	Y+22, r25	; 0x16
    1042:	af 8b       	std	Y+23, r26	; 0x17
    1044:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1046:	6d 89       	ldd	r22, Y+21	; 0x15
    1048:	7e 89       	ldd	r23, Y+22	; 0x16
    104a:	8f 89       	ldd	r24, Y+23	; 0x17
    104c:	98 8d       	ldd	r25, Y+24	; 0x18
    104e:	20 e0       	ldi	r18, 0x00	; 0
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	40 e8       	ldi	r20, 0x80	; 128
    1054:	5f e3       	ldi	r21, 0x3F	; 63
    1056:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
    105a:	88 23       	and	r24, r24
    105c:	2c f4       	brge	.+10     	; 0x1068 <domisol+0x164>
		__ticks = 1;
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	9c 8b       	std	Y+20, r25	; 0x14
    1064:	8b 8b       	std	Y+19, r24	; 0x13
    1066:	3f c0       	rjmp	.+126    	; 0x10e6 <domisol+0x1e2>
	else if (__tmp > 65535)
    1068:	6d 89       	ldd	r22, Y+21	; 0x15
    106a:	7e 89       	ldd	r23, Y+22	; 0x16
    106c:	8f 89       	ldd	r24, Y+23	; 0x17
    106e:	98 8d       	ldd	r25, Y+24	; 0x18
    1070:	20 e0       	ldi	r18, 0x00	; 0
    1072:	3f ef       	ldi	r19, 0xFF	; 255
    1074:	4f e7       	ldi	r20, 0x7F	; 127
    1076:	57 e4       	ldi	r21, 0x47	; 71
    1078:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
    107c:	18 16       	cp	r1, r24
    107e:	4c f5       	brge	.+82     	; 0x10d2 <domisol+0x1ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1080:	69 8d       	ldd	r22, Y+25	; 0x19
    1082:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1084:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1086:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	40 e2       	ldi	r20, 0x20	; 32
    108e:	51 e4       	ldi	r21, 0x41	; 65
    1090:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
    1094:	dc 01       	movw	r26, r24
    1096:	cb 01       	movw	r24, r22
    1098:	bc 01       	movw	r22, r24
    109a:	cd 01       	movw	r24, r26
    109c:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
    10a0:	dc 01       	movw	r26, r24
    10a2:	cb 01       	movw	r24, r22
    10a4:	9c 8b       	std	Y+20, r25	; 0x14
    10a6:	8b 8b       	std	Y+19, r24	; 0x13
    10a8:	0f c0       	rjmp	.+30     	; 0x10c8 <domisol+0x1c4>
    10aa:	80 e9       	ldi	r24, 0x90	; 144
    10ac:	91 e0       	ldi	r25, 0x01	; 1
    10ae:	9a 8b       	std	Y+18, r25	; 0x12
    10b0:	89 8b       	std	Y+17, r24	; 0x11
    10b2:	89 89       	ldd	r24, Y+17	; 0x11
    10b4:	9a 89       	ldd	r25, Y+18	; 0x12
    10b6:	01 97       	sbiw	r24, 0x01	; 1
    10b8:	f1 f7       	brne	.-4      	; 0x10b6 <domisol+0x1b2>
    10ba:	9a 8b       	std	Y+18, r25	; 0x12
    10bc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10be:	8b 89       	ldd	r24, Y+19	; 0x13
    10c0:	9c 89       	ldd	r25, Y+20	; 0x14
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	9c 8b       	std	Y+20, r25	; 0x14
    10c6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10c8:	8b 89       	ldd	r24, Y+19	; 0x13
    10ca:	9c 89       	ldd	r25, Y+20	; 0x14
    10cc:	00 97       	sbiw	r24, 0x00	; 0
    10ce:	69 f7       	brne	.-38     	; 0x10aa <domisol+0x1a6>
    10d0:	14 c0       	rjmp	.+40     	; 0x10fa <domisol+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10d2:	6d 89       	ldd	r22, Y+21	; 0x15
    10d4:	7e 89       	ldd	r23, Y+22	; 0x16
    10d6:	8f 89       	ldd	r24, Y+23	; 0x17
    10d8:	98 8d       	ldd	r25, Y+24	; 0x18
    10da:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
    10de:	dc 01       	movw	r26, r24
    10e0:	cb 01       	movw	r24, r22
    10e2:	9c 8b       	std	Y+20, r25	; 0x14
    10e4:	8b 8b       	std	Y+19, r24	; 0x13
    10e6:	8b 89       	ldd	r24, Y+19	; 0x13
    10e8:	9c 89       	ldd	r25, Y+20	; 0x14
    10ea:	98 8b       	std	Y+16, r25	; 0x10
    10ec:	8f 87       	std	Y+15, r24	; 0x0f
    10ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    10f0:	98 89       	ldd	r25, Y+16	; 0x10
    10f2:	01 97       	sbiw	r24, 0x01	; 1
    10f4:	f1 f7       	brne	.-4      	; 0x10f2 <domisol+0x1ee>
    10f6:	98 8b       	std	Y+16, r25	; 0x10
    10f8:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1000);
		play(FREQ(783));
    10fa:	8b ef       	ldi	r24, 0xFB	; 251
    10fc:	94 e0       	ldi	r25, 0x04	; 4
    10fe:	0e 94 b2 06 	call	0xd64	; 0xd64 <play>
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	aa e7       	ldi	r26, 0x7A	; 122
    1108:	b4 e4       	ldi	r27, 0x44	; 68
    110a:	8b 87       	std	Y+11, r24	; 0x0b
    110c:	9c 87       	std	Y+12, r25	; 0x0c
    110e:	ad 87       	std	Y+13, r26	; 0x0d
    1110:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1112:	6b 85       	ldd	r22, Y+11	; 0x0b
    1114:	7c 85       	ldd	r23, Y+12	; 0x0c
    1116:	8d 85       	ldd	r24, Y+13	; 0x0d
    1118:	9e 85       	ldd	r25, Y+14	; 0x0e
    111a:	20 e0       	ldi	r18, 0x00	; 0
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	4a e7       	ldi	r20, 0x7A	; 122
    1120:	55 e4       	ldi	r21, 0x45	; 69
    1122:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
    1126:	dc 01       	movw	r26, r24
    1128:	cb 01       	movw	r24, r22
    112a:	8f 83       	std	Y+7, r24	; 0x07
    112c:	98 87       	std	Y+8, r25	; 0x08
    112e:	a9 87       	std	Y+9, r26	; 0x09
    1130:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1132:	6f 81       	ldd	r22, Y+7	; 0x07
    1134:	78 85       	ldd	r23, Y+8	; 0x08
    1136:	89 85       	ldd	r24, Y+9	; 0x09
    1138:	9a 85       	ldd	r25, Y+10	; 0x0a
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	40 e8       	ldi	r20, 0x80	; 128
    1140:	5f e3       	ldi	r21, 0x3F	; 63
    1142:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__ltsf2>
    1146:	88 23       	and	r24, r24
    1148:	2c f4       	brge	.+10     	; 0x1154 <domisol+0x250>
		__ticks = 1;
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	9e 83       	std	Y+6, r25	; 0x06
    1150:	8d 83       	std	Y+5, r24	; 0x05
    1152:	3f c0       	rjmp	.+126    	; 0x11d2 <domisol+0x2ce>
	else if (__tmp > 65535)
    1154:	6f 81       	ldd	r22, Y+7	; 0x07
    1156:	78 85       	ldd	r23, Y+8	; 0x08
    1158:	89 85       	ldd	r24, Y+9	; 0x09
    115a:	9a 85       	ldd	r25, Y+10	; 0x0a
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	3f ef       	ldi	r19, 0xFF	; 255
    1160:	4f e7       	ldi	r20, 0x7F	; 127
    1162:	57 e4       	ldi	r21, 0x47	; 71
    1164:	0e 94 85 0c 	call	0x190a	; 0x190a <__gtsf2>
    1168:	18 16       	cp	r1, r24
    116a:	4c f5       	brge	.+82     	; 0x11be <domisol+0x2ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    116c:	6b 85       	ldd	r22, Y+11	; 0x0b
    116e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1170:	8d 85       	ldd	r24, Y+13	; 0x0d
    1172:	9e 85       	ldd	r25, Y+14	; 0x0e
    1174:	20 e0       	ldi	r18, 0x00	; 0
    1176:	30 e0       	ldi	r19, 0x00	; 0
    1178:	40 e2       	ldi	r20, 0x20	; 32
    117a:	51 e4       	ldi	r21, 0x41	; 65
    117c:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulsf3>
    1180:	dc 01       	movw	r26, r24
    1182:	cb 01       	movw	r24, r22
    1184:	bc 01       	movw	r22, r24
    1186:	cd 01       	movw	r24, r26
    1188:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
    118c:	dc 01       	movw	r26, r24
    118e:	cb 01       	movw	r24, r22
    1190:	9e 83       	std	Y+6, r25	; 0x06
    1192:	8d 83       	std	Y+5, r24	; 0x05
    1194:	0f c0       	rjmp	.+30     	; 0x11b4 <domisol+0x2b0>
    1196:	80 e9       	ldi	r24, 0x90	; 144
    1198:	91 e0       	ldi	r25, 0x01	; 1
    119a:	9c 83       	std	Y+4, r25	; 0x04
    119c:	8b 83       	std	Y+3, r24	; 0x03
    119e:	8b 81       	ldd	r24, Y+3	; 0x03
    11a0:	9c 81       	ldd	r25, Y+4	; 0x04
    11a2:	01 97       	sbiw	r24, 0x01	; 1
    11a4:	f1 f7       	brne	.-4      	; 0x11a2 <domisol+0x29e>
    11a6:	9c 83       	std	Y+4, r25	; 0x04
    11a8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11aa:	8d 81       	ldd	r24, Y+5	; 0x05
    11ac:	9e 81       	ldd	r25, Y+6	; 0x06
    11ae:	01 97       	sbiw	r24, 0x01	; 1
    11b0:	9e 83       	std	Y+6, r25	; 0x06
    11b2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11b4:	8d 81       	ldd	r24, Y+5	; 0x05
    11b6:	9e 81       	ldd	r25, Y+6	; 0x06
    11b8:	00 97       	sbiw	r24, 0x00	; 0
    11ba:	69 f7       	brne	.-38     	; 0x1196 <domisol+0x292>
    11bc:	14 c0       	rjmp	.+40     	; 0x11e6 <domisol+0x2e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11be:	6f 81       	ldd	r22, Y+7	; 0x07
    11c0:	78 85       	ldd	r23, Y+8	; 0x08
    11c2:	89 85       	ldd	r24, Y+9	; 0x09
    11c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    11c6:	0e 94 b5 09 	call	0x136a	; 0x136a <__fixunssfsi>
    11ca:	dc 01       	movw	r26, r24
    11cc:	cb 01       	movw	r24, r22
    11ce:	9e 83       	std	Y+6, r25	; 0x06
    11d0:	8d 83       	std	Y+5, r24	; 0x05
    11d2:	8d 81       	ldd	r24, Y+5	; 0x05
    11d4:	9e 81       	ldd	r25, Y+6	; 0x06
    11d6:	9a 83       	std	Y+2, r25	; 0x02
    11d8:	89 83       	std	Y+1, r24	; 0x01
    11da:	89 81       	ldd	r24, Y+1	; 0x01
    11dc:	9a 81       	ldd	r25, Y+2	; 0x02
    11de:	01 97       	sbiw	r24, 0x01	; 1
    11e0:	f1 f7       	brne	.-4      	; 0x11de <domisol+0x2da>
    11e2:	9a 83       	std	Y+2, r25	; 0x02
    11e4:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(1000);
		stop();
    11e6:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <stop>
   sei();
}

void domisol(int a)
{
	for(int i=0;i<a;i++)
    11ea:	8b a5       	ldd	r24, Y+43	; 0x2b
    11ec:	9c a5       	ldd	r25, Y+44	; 0x2c
    11ee:	01 96       	adiw	r24, 0x01	; 1
    11f0:	9c a7       	std	Y+44, r25	; 0x2c
    11f2:	8b a7       	std	Y+43, r24	; 0x2b
    11f4:	2b a5       	ldd	r18, Y+43	; 0x2b
    11f6:	3c a5       	ldd	r19, Y+44	; 0x2c
    11f8:	8d a5       	ldd	r24, Y+45	; 0x2d
    11fa:	9e a5       	ldd	r25, Y+46	; 0x2e
    11fc:	28 17       	cp	r18, r24
    11fe:	39 07       	cpc	r19, r25
    1200:	0c f4       	brge	.+2      	; 0x1204 <domisol+0x300>
    1202:	8f ce       	rjmp	.-738    	; 0xf22 <domisol+0x1e>
		_delay_ms(1000);
		play(FREQ(783));
		_delay_ms(1000);
		stop();
	}
}
    1204:	ae 96       	adiw	r28, 0x2e	; 46
    1206:	0f b6       	in	r0, 0x3f	; 63
    1208:	f8 94       	cli
    120a:	de bf       	out	0x3e, r29	; 62
    120c:	0f be       	out	0x3f, r0	; 63
    120e:	cd bf       	out	0x3d, r28	; 61
    1210:	cf 91       	pop	r28
    1212:	df 91       	pop	r29
    1214:	08 95       	ret

00001216 <hex_command>:

void hex_command(unsigned char cd)
{
    1216:	df 93       	push	r29
    1218:	cf 93       	push	r28
    121a:	0f 92       	push	r0
    121c:	cd b7       	in	r28, 0x3d	; 61
    121e:	de b7       	in	r29, 0x3e	; 62
    1220:	89 83       	std	Y+1, r24	; 0x01

   if(cd == LEDONOFF){
    1222:	89 81       	ldd	r24, Y+1	; 0x01
    1224:	81 30       	cpi	r24, 0x01	; 1
    1226:	29 f4       	brne	.+10     	; 0x1232 <hex_command+0x1c>
      LED_ALL_ON_OFF(cnt);
    1228:	80 91 39 01 	lds	r24, 0x0139
    122c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LED_ALL_ON_OFF>
    1230:	4f c0       	rjmp	.+158    	; 0x12d0 <hex_command+0xba>
   }else if(cd == LEDALT){
    1232:	89 81       	ldd	r24, Y+1	; 0x01
    1234:	82 30       	cpi	r24, 0x02	; 2
    1236:	29 f4       	brne	.+10     	; 0x1242 <hex_command+0x2c>
       LED_ALTERNATING(cnt);
    1238:	80 91 39 01 	lds	r24, 0x0139
    123c:	0e 94 53 00 	call	0xa6	; 0xa6 <LED_ALTERNATING>
    1240:	47 c0       	rjmp	.+142    	; 0x12d0 <hex_command+0xba>
   }else if(cd == LEDSHIFT){
    1242:	89 81       	ldd	r24, Y+1	; 0x01
    1244:	84 30       	cpi	r24, 0x04	; 4
    1246:	29 f4       	brne	.+10     	; 0x1252 <hex_command+0x3c>
      LED_SHIFT(cnt);
    1248:	80 91 39 01 	lds	r24, 0x0139
    124c:	0e 94 a3 02 	call	0x546	; 0x546 <LED_SHIFT>
    1250:	3f c0       	rjmp	.+126    	; 0x12d0 <hex_command+0xba>
   }else if(cd == SEGMENT_UPCOUNTING){
    1252:	89 81       	ldd	r24, Y+1	; 0x01
    1254:	88 30       	cpi	r24, 0x08	; 8
    1256:	39 f4       	brne	.+14     	; 0x1266 <hex_command+0x50>
      SEG_UPCOUNTING(cnt);
    1258:	80 91 39 01 	lds	r24, 0x0139
    125c:	88 2f       	mov	r24, r24
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	0e 94 3f 05 	call	0xa7e	; 0xa7e <SEG_UPCOUNTING>
    1264:	35 c0       	rjmp	.+106    	; 0x12d0 <hex_command+0xba>
   }else if(cd == DOMISOL)
    1266:	89 81       	ldd	r24, Y+1	; 0x01
    1268:	85 30       	cpi	r24, 0x05	; 5
    126a:	39 f4       	brne	.+14     	; 0x127a <hex_command+0x64>
   {
   		domisol(cnt);
    126c:	80 91 39 01 	lds	r24, 0x0139
    1270:	88 2f       	mov	r24, r24
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	0e 94 82 07 	call	0xf04	; 0xf04 <domisol>
    1278:	2b c0       	rjmp	.+86     	; 0x12d0 <hex_command+0xba>
   }
   else if(cd == BUZZER){
    127a:	89 81       	ldd	r24, Y+1	; 0x01
    127c:	80 31       	cpi	r24, 0x10	; 16
    127e:	e1 f4       	brne	.+56     	; 0x12b8 <hex_command+0xa2>
    1280:	04 c0       	rjmp	.+8      	; 0x128a <hex_command+0x74>
   		while(cnt == ON){
			play(1000);
    1282:	88 ee       	ldi	r24, 0xE8	; 232
    1284:	93 e0       	ldi	r25, 0x03	; 3
    1286:	0e 94 b2 06 	call	0xd64	; 0xd64 <play>
   }else if(cd == DOMISOL)
   {
   		domisol(cnt);
   }
   else if(cd == BUZZER){
   		while(cnt == ON){
    128a:	80 91 39 01 	lds	r24, 0x0139
    128e:	81 30       	cpi	r24, 0x01	; 1
    1290:	c1 f3       	breq	.-16     	; 0x1282 <hex_command+0x6c>
			play(1000);
		}
		if(cnt == OFF){
    1292:	80 91 39 01 	lds	r24, 0x0139
    1296:	88 23       	and	r24, r24
    1298:	d9 f4       	brne	.+54     	; 0x12d0 <hex_command+0xba>
			stop();
    129a:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <stop>
			Printf("stop");
    129e:	00 d0       	rcall	.+0      	; 0x12a0 <hex_command+0x8a>
    12a0:	ed b7       	in	r30, 0x3d	; 61
    12a2:	fe b7       	in	r31, 0x3e	; 62
    12a4:	31 96       	adiw	r30, 0x01	; 1
    12a6:	84 e1       	ldi	r24, 0x14	; 20
    12a8:	91 e0       	ldi	r25, 0x01	; 1
    12aa:	91 83       	std	Z+1, r25	; 0x01
    12ac:	80 83       	st	Z, r24
    12ae:	0e 94 61 06 	call	0xcc2	; 0xcc2 <Printf>
    12b2:	0f 90       	pop	r0
    12b4:	0f 90       	pop	r0
    12b6:	0c c0       	rjmp	.+24     	; 0x12d0 <hex_command+0xba>
		}
   }
   else{
      Printf("Invalid Command\n");
    12b8:	00 d0       	rcall	.+0      	; 0x12ba <hex_command+0xa4>
    12ba:	ed b7       	in	r30, 0x3d	; 61
    12bc:	fe b7       	in	r31, 0x3e	; 62
    12be:	31 96       	adiw	r30, 0x01	; 1
    12c0:	89 e1       	ldi	r24, 0x19	; 25
    12c2:	91 e0       	ldi	r25, 0x01	; 1
    12c4:	91 83       	std	Z+1, r25	; 0x01
    12c6:	80 83       	st	Z, r24
    12c8:	0e 94 61 06 	call	0xcc2	; 0xcc2 <Printf>
    12cc:	0f 90       	pop	r0
    12ce:	0f 90       	pop	r0
   }
}
    12d0:	0f 90       	pop	r0
    12d2:	cf 91       	pop	r28
    12d4:	df 91       	pop	r29
    12d6:	08 95       	ret

000012d8 <main>:



int main()
{
    12d8:	df 93       	push	r29
    12da:	cf 93       	push	r28
    12dc:	cd b7       	in	r28, 0x3d	; 61
    12de:	de b7       	in	r29, 0x3e	; 62
   cli();
    12e0:	f8 94       	cli
   DDRD = 0xF0;
    12e2:	ea e2       	ldi	r30, 0x2A	; 42
    12e4:	f0 e0       	ldi	r31, 0x00	; 0
    12e6:	80 ef       	ldi	r24, 0xF0	; 240
    12e8:	80 83       	st	Z, r24
   DDRB = 0xFD;
    12ea:	e4 e2       	ldi	r30, 0x24	; 36
    12ec:	f0 e0       	ldi	r31, 0x00	; 0
    12ee:	8d ef       	ldi	r24, 0xFD	; 253
    12f0:	80 83       	st	Z, r24
   DDRC = 0xFF;
    12f2:	e7 e2       	ldi	r30, 0x27	; 39
    12f4:	f0 e0       	ldi	r31, 0x00	; 0
    12f6:	8f ef       	ldi	r24, 0xFF	; 255
    12f8:	80 83       	st	Z, r24
   EICRA = 0xAA;
    12fa:	e9 e6       	ldi	r30, 0x69	; 105
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	8a ea       	ldi	r24, 0xAA	; 170
    1300:	80 83       	st	Z, r24
   EIMSK = 0xFF;
    1302:	ed e3       	ldi	r30, 0x3D	; 61
    1304:	f0 e0       	ldi	r31, 0x00	; 0
    1306:	8f ef       	ldi	r24, 0xFF	; 255
    1308:	80 83       	st	Z, r24
   EIFR |= 0x0F;
    130a:	ac e3       	ldi	r26, 0x3C	; 60
    130c:	b0 e0       	ldi	r27, 0x00	; 0
    130e:	ec e3       	ldi	r30, 0x3C	; 60
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	80 81       	ld	r24, Z
    1314:	8f 60       	ori	r24, 0x0F	; 15
    1316:	8c 93       	st	X, r24

   UBRR0H = (unsigned char)(BAUD_9600>>8);
    1318:	e5 ec       	ldi	r30, 0xC5	; 197
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	10 82       	st	Z, r1
   UBRR0L = (unsigned char)BAUD_9600;
    131e:	e4 ec       	ldi	r30, 0xC4	; 196
    1320:	f0 e0       	ldi	r31, 0x00	; 0
    1322:	87 e6       	ldi	r24, 0x67	; 103
    1324:	80 83       	st	Z, r24
   UCSR0B = (1<<TXEN0)|(1<<RXEN0);
    1326:	e1 ec       	ldi	r30, 0xC1	; 193
    1328:	f0 e0       	ldi	r31, 0x00	; 0
    132a:	88 e1       	ldi	r24, 0x18	; 24
    132c:	80 83       	st	Z, r24
   UCSR0B |=(1<< RXCIE0);
    132e:	a1 ec       	ldi	r26, 0xC1	; 193
    1330:	b0 e0       	ldi	r27, 0x00	; 0
    1332:	e1 ec       	ldi	r30, 0xC1	; 193
    1334:	f0 e0       	ldi	r31, 0x00	; 0
    1336:	80 81       	ld	r24, Z
    1338:	80 68       	ori	r24, 0x80	; 128
    133a:	8c 93       	st	X, r24
   UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
    133c:	e2 ec       	ldi	r30, 0xC2	; 194
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	86 e0       	ldi	r24, 0x06	; 6
    1342:	80 83       	st	Z, r24
   sei();
    1344:	78 94       	sei
   while(1)
   {
       if(sint_flag==1)
    1346:	80 91 37 01 	lds	r24, 0x0137
    134a:	90 91 38 01 	lds	r25, 0x0138
    134e:	81 30       	cpi	r24, 0x01	; 1
    1350:	91 05       	cpc	r25, r1
    1352:	c9 f7       	brne	.-14     	; 0x1346 <main+0x6e>
       {    
         hex_command(_command);
    1354:	80 91 3a 01 	lds	r24, 0x013A
    1358:	0e 94 0b 09 	call	0x1216	; 0x1216 <hex_command>
         sint_flag = 0;
    135c:	10 92 38 01 	sts	0x0138, r1
    1360:	10 92 37 01 	sts	0x0137, r1
         _command = 0;
    1364:	10 92 3a 01 	sts	0x013A, r1
    1368:	ee cf       	rjmp	.-36     	; 0x1346 <main+0x6e>

0000136a <__fixunssfsi>:
    136a:	ef 92       	push	r14
    136c:	ff 92       	push	r15
    136e:	0f 93       	push	r16
    1370:	1f 93       	push	r17
    1372:	7b 01       	movw	r14, r22
    1374:	8c 01       	movw	r16, r24
    1376:	20 e0       	ldi	r18, 0x00	; 0
    1378:	30 e0       	ldi	r19, 0x00	; 0
    137a:	40 e0       	ldi	r20, 0x00	; 0
    137c:	5f e4       	ldi	r21, 0x4F	; 79
    137e:	0e 94 b5 0c 	call	0x196a	; 0x196a <__gesf2>
    1382:	88 23       	and	r24, r24
    1384:	8c f0       	brlt	.+34     	; 0x13a8 <__fixunssfsi+0x3e>
    1386:	c8 01       	movw	r24, r16
    1388:	b7 01       	movw	r22, r14
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	40 e0       	ldi	r20, 0x00	; 0
    1390:	5f e4       	ldi	r21, 0x4F	; 79
    1392:	0e 94 2d 0b 	call	0x165a	; 0x165a <__subsf3>
    1396:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__fixsfsi>
    139a:	9b 01       	movw	r18, r22
    139c:	ac 01       	movw	r20, r24
    139e:	20 50       	subi	r18, 0x00	; 0
    13a0:	30 40       	sbci	r19, 0x00	; 0
    13a2:	40 40       	sbci	r20, 0x00	; 0
    13a4:	50 48       	sbci	r21, 0x80	; 128
    13a6:	06 c0       	rjmp	.+12     	; 0x13b4 <__fixunssfsi+0x4a>
    13a8:	c8 01       	movw	r24, r16
    13aa:	b7 01       	movw	r22, r14
    13ac:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__fixsfsi>
    13b0:	9b 01       	movw	r18, r22
    13b2:	ac 01       	movw	r20, r24
    13b4:	b9 01       	movw	r22, r18
    13b6:	ca 01       	movw	r24, r20
    13b8:	1f 91       	pop	r17
    13ba:	0f 91       	pop	r16
    13bc:	ff 90       	pop	r15
    13be:	ef 90       	pop	r14
    13c0:	08 95       	ret

000013c2 <_fpadd_parts>:
    13c2:	a0 e0       	ldi	r26, 0x00	; 0
    13c4:	b0 e0       	ldi	r27, 0x00	; 0
    13c6:	e7 ee       	ldi	r30, 0xE7	; 231
    13c8:	f9 e0       	ldi	r31, 0x09	; 9
    13ca:	0c 94 36 0f 	jmp	0x1e6c	; 0x1e6c <__prologue_saves__>
    13ce:	dc 01       	movw	r26, r24
    13d0:	2b 01       	movw	r4, r22
    13d2:	fa 01       	movw	r30, r20
    13d4:	9c 91       	ld	r25, X
    13d6:	92 30       	cpi	r25, 0x02	; 2
    13d8:	08 f4       	brcc	.+2      	; 0x13dc <_fpadd_parts+0x1a>
    13da:	39 c1       	rjmp	.+626    	; 0x164e <_fpadd_parts+0x28c>
    13dc:	eb 01       	movw	r28, r22
    13de:	88 81       	ld	r24, Y
    13e0:	82 30       	cpi	r24, 0x02	; 2
    13e2:	08 f4       	brcc	.+2      	; 0x13e6 <_fpadd_parts+0x24>
    13e4:	33 c1       	rjmp	.+614    	; 0x164c <_fpadd_parts+0x28a>
    13e6:	94 30       	cpi	r25, 0x04	; 4
    13e8:	69 f4       	brne	.+26     	; 0x1404 <_fpadd_parts+0x42>
    13ea:	84 30       	cpi	r24, 0x04	; 4
    13ec:	09 f0       	breq	.+2      	; 0x13f0 <_fpadd_parts+0x2e>
    13ee:	2f c1       	rjmp	.+606    	; 0x164e <_fpadd_parts+0x28c>
    13f0:	11 96       	adiw	r26, 0x01	; 1
    13f2:	9c 91       	ld	r25, X
    13f4:	11 97       	sbiw	r26, 0x01	; 1
    13f6:	89 81       	ldd	r24, Y+1	; 0x01
    13f8:	98 17       	cp	r25, r24
    13fa:	09 f4       	brne	.+2      	; 0x13fe <_fpadd_parts+0x3c>
    13fc:	28 c1       	rjmp	.+592    	; 0x164e <_fpadd_parts+0x28c>
    13fe:	aa e2       	ldi	r26, 0x2A	; 42
    1400:	b1 e0       	ldi	r27, 0x01	; 1
    1402:	25 c1       	rjmp	.+586    	; 0x164e <_fpadd_parts+0x28c>
    1404:	84 30       	cpi	r24, 0x04	; 4
    1406:	09 f4       	brne	.+2      	; 0x140a <_fpadd_parts+0x48>
    1408:	21 c1       	rjmp	.+578    	; 0x164c <_fpadd_parts+0x28a>
    140a:	82 30       	cpi	r24, 0x02	; 2
    140c:	a9 f4       	brne	.+42     	; 0x1438 <_fpadd_parts+0x76>
    140e:	92 30       	cpi	r25, 0x02	; 2
    1410:	09 f0       	breq	.+2      	; 0x1414 <_fpadd_parts+0x52>
    1412:	1d c1       	rjmp	.+570    	; 0x164e <_fpadd_parts+0x28c>
    1414:	9a 01       	movw	r18, r20
    1416:	ad 01       	movw	r20, r26
    1418:	88 e0       	ldi	r24, 0x08	; 8
    141a:	ea 01       	movw	r28, r20
    141c:	09 90       	ld	r0, Y+
    141e:	ae 01       	movw	r20, r28
    1420:	e9 01       	movw	r28, r18
    1422:	09 92       	st	Y+, r0
    1424:	9e 01       	movw	r18, r28
    1426:	81 50       	subi	r24, 0x01	; 1
    1428:	c1 f7       	brne	.-16     	; 0x141a <_fpadd_parts+0x58>
    142a:	e2 01       	movw	r28, r4
    142c:	89 81       	ldd	r24, Y+1	; 0x01
    142e:	11 96       	adiw	r26, 0x01	; 1
    1430:	9c 91       	ld	r25, X
    1432:	89 23       	and	r24, r25
    1434:	81 83       	std	Z+1, r24	; 0x01
    1436:	08 c1       	rjmp	.+528    	; 0x1648 <_fpadd_parts+0x286>
    1438:	92 30       	cpi	r25, 0x02	; 2
    143a:	09 f4       	brne	.+2      	; 0x143e <_fpadd_parts+0x7c>
    143c:	07 c1       	rjmp	.+526    	; 0x164c <_fpadd_parts+0x28a>
    143e:	12 96       	adiw	r26, 0x02	; 2
    1440:	2d 90       	ld	r2, X+
    1442:	3c 90       	ld	r3, X
    1444:	13 97       	sbiw	r26, 0x03	; 3
    1446:	eb 01       	movw	r28, r22
    1448:	8a 81       	ldd	r24, Y+2	; 0x02
    144a:	9b 81       	ldd	r25, Y+3	; 0x03
    144c:	14 96       	adiw	r26, 0x04	; 4
    144e:	ad 90       	ld	r10, X+
    1450:	bd 90       	ld	r11, X+
    1452:	cd 90       	ld	r12, X+
    1454:	dc 90       	ld	r13, X
    1456:	17 97       	sbiw	r26, 0x07	; 7
    1458:	ec 80       	ldd	r14, Y+4	; 0x04
    145a:	fd 80       	ldd	r15, Y+5	; 0x05
    145c:	0e 81       	ldd	r16, Y+6	; 0x06
    145e:	1f 81       	ldd	r17, Y+7	; 0x07
    1460:	91 01       	movw	r18, r2
    1462:	28 1b       	sub	r18, r24
    1464:	39 0b       	sbc	r19, r25
    1466:	b9 01       	movw	r22, r18
    1468:	37 ff       	sbrs	r19, 7
    146a:	04 c0       	rjmp	.+8      	; 0x1474 <_fpadd_parts+0xb2>
    146c:	66 27       	eor	r22, r22
    146e:	77 27       	eor	r23, r23
    1470:	62 1b       	sub	r22, r18
    1472:	73 0b       	sbc	r23, r19
    1474:	60 32       	cpi	r22, 0x20	; 32
    1476:	71 05       	cpc	r23, r1
    1478:	0c f0       	brlt	.+2      	; 0x147c <_fpadd_parts+0xba>
    147a:	61 c0       	rjmp	.+194    	; 0x153e <_fpadd_parts+0x17c>
    147c:	12 16       	cp	r1, r18
    147e:	13 06       	cpc	r1, r19
    1480:	6c f5       	brge	.+90     	; 0x14dc <_fpadd_parts+0x11a>
    1482:	37 01       	movw	r6, r14
    1484:	48 01       	movw	r8, r16
    1486:	06 2e       	mov	r0, r22
    1488:	04 c0       	rjmp	.+8      	; 0x1492 <_fpadd_parts+0xd0>
    148a:	96 94       	lsr	r9
    148c:	87 94       	ror	r8
    148e:	77 94       	ror	r7
    1490:	67 94       	ror	r6
    1492:	0a 94       	dec	r0
    1494:	d2 f7       	brpl	.-12     	; 0x148a <_fpadd_parts+0xc8>
    1496:	21 e0       	ldi	r18, 0x01	; 1
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	40 e0       	ldi	r20, 0x00	; 0
    149c:	50 e0       	ldi	r21, 0x00	; 0
    149e:	04 c0       	rjmp	.+8      	; 0x14a8 <_fpadd_parts+0xe6>
    14a0:	22 0f       	add	r18, r18
    14a2:	33 1f       	adc	r19, r19
    14a4:	44 1f       	adc	r20, r20
    14a6:	55 1f       	adc	r21, r21
    14a8:	6a 95       	dec	r22
    14aa:	d2 f7       	brpl	.-12     	; 0x14a0 <_fpadd_parts+0xde>
    14ac:	21 50       	subi	r18, 0x01	; 1
    14ae:	30 40       	sbci	r19, 0x00	; 0
    14b0:	40 40       	sbci	r20, 0x00	; 0
    14b2:	50 40       	sbci	r21, 0x00	; 0
    14b4:	2e 21       	and	r18, r14
    14b6:	3f 21       	and	r19, r15
    14b8:	40 23       	and	r20, r16
    14ba:	51 23       	and	r21, r17
    14bc:	21 15       	cp	r18, r1
    14be:	31 05       	cpc	r19, r1
    14c0:	41 05       	cpc	r20, r1
    14c2:	51 05       	cpc	r21, r1
    14c4:	21 f0       	breq	.+8      	; 0x14ce <_fpadd_parts+0x10c>
    14c6:	21 e0       	ldi	r18, 0x01	; 1
    14c8:	30 e0       	ldi	r19, 0x00	; 0
    14ca:	40 e0       	ldi	r20, 0x00	; 0
    14cc:	50 e0       	ldi	r21, 0x00	; 0
    14ce:	79 01       	movw	r14, r18
    14d0:	8a 01       	movw	r16, r20
    14d2:	e6 28       	or	r14, r6
    14d4:	f7 28       	or	r15, r7
    14d6:	08 29       	or	r16, r8
    14d8:	19 29       	or	r17, r9
    14da:	3c c0       	rjmp	.+120    	; 0x1554 <_fpadd_parts+0x192>
    14dc:	23 2b       	or	r18, r19
    14de:	d1 f1       	breq	.+116    	; 0x1554 <_fpadd_parts+0x192>
    14e0:	26 0e       	add	r2, r22
    14e2:	37 1e       	adc	r3, r23
    14e4:	35 01       	movw	r6, r10
    14e6:	46 01       	movw	r8, r12
    14e8:	06 2e       	mov	r0, r22
    14ea:	04 c0       	rjmp	.+8      	; 0x14f4 <_fpadd_parts+0x132>
    14ec:	96 94       	lsr	r9
    14ee:	87 94       	ror	r8
    14f0:	77 94       	ror	r7
    14f2:	67 94       	ror	r6
    14f4:	0a 94       	dec	r0
    14f6:	d2 f7       	brpl	.-12     	; 0x14ec <_fpadd_parts+0x12a>
    14f8:	21 e0       	ldi	r18, 0x01	; 1
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	40 e0       	ldi	r20, 0x00	; 0
    14fe:	50 e0       	ldi	r21, 0x00	; 0
    1500:	04 c0       	rjmp	.+8      	; 0x150a <_fpadd_parts+0x148>
    1502:	22 0f       	add	r18, r18
    1504:	33 1f       	adc	r19, r19
    1506:	44 1f       	adc	r20, r20
    1508:	55 1f       	adc	r21, r21
    150a:	6a 95       	dec	r22
    150c:	d2 f7       	brpl	.-12     	; 0x1502 <_fpadd_parts+0x140>
    150e:	21 50       	subi	r18, 0x01	; 1
    1510:	30 40       	sbci	r19, 0x00	; 0
    1512:	40 40       	sbci	r20, 0x00	; 0
    1514:	50 40       	sbci	r21, 0x00	; 0
    1516:	2a 21       	and	r18, r10
    1518:	3b 21       	and	r19, r11
    151a:	4c 21       	and	r20, r12
    151c:	5d 21       	and	r21, r13
    151e:	21 15       	cp	r18, r1
    1520:	31 05       	cpc	r19, r1
    1522:	41 05       	cpc	r20, r1
    1524:	51 05       	cpc	r21, r1
    1526:	21 f0       	breq	.+8      	; 0x1530 <_fpadd_parts+0x16e>
    1528:	21 e0       	ldi	r18, 0x01	; 1
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	40 e0       	ldi	r20, 0x00	; 0
    152e:	50 e0       	ldi	r21, 0x00	; 0
    1530:	59 01       	movw	r10, r18
    1532:	6a 01       	movw	r12, r20
    1534:	a6 28       	or	r10, r6
    1536:	b7 28       	or	r11, r7
    1538:	c8 28       	or	r12, r8
    153a:	d9 28       	or	r13, r9
    153c:	0b c0       	rjmp	.+22     	; 0x1554 <_fpadd_parts+0x192>
    153e:	82 15       	cp	r24, r2
    1540:	93 05       	cpc	r25, r3
    1542:	2c f0       	brlt	.+10     	; 0x154e <_fpadd_parts+0x18c>
    1544:	1c 01       	movw	r2, r24
    1546:	aa 24       	eor	r10, r10
    1548:	bb 24       	eor	r11, r11
    154a:	65 01       	movw	r12, r10
    154c:	03 c0       	rjmp	.+6      	; 0x1554 <_fpadd_parts+0x192>
    154e:	ee 24       	eor	r14, r14
    1550:	ff 24       	eor	r15, r15
    1552:	87 01       	movw	r16, r14
    1554:	11 96       	adiw	r26, 0x01	; 1
    1556:	9c 91       	ld	r25, X
    1558:	d2 01       	movw	r26, r4
    155a:	11 96       	adiw	r26, 0x01	; 1
    155c:	8c 91       	ld	r24, X
    155e:	98 17       	cp	r25, r24
    1560:	09 f4       	brne	.+2      	; 0x1564 <_fpadd_parts+0x1a2>
    1562:	45 c0       	rjmp	.+138    	; 0x15ee <_fpadd_parts+0x22c>
    1564:	99 23       	and	r25, r25
    1566:	39 f0       	breq	.+14     	; 0x1576 <_fpadd_parts+0x1b4>
    1568:	a8 01       	movw	r20, r16
    156a:	97 01       	movw	r18, r14
    156c:	2a 19       	sub	r18, r10
    156e:	3b 09       	sbc	r19, r11
    1570:	4c 09       	sbc	r20, r12
    1572:	5d 09       	sbc	r21, r13
    1574:	06 c0       	rjmp	.+12     	; 0x1582 <_fpadd_parts+0x1c0>
    1576:	a6 01       	movw	r20, r12
    1578:	95 01       	movw	r18, r10
    157a:	2e 19       	sub	r18, r14
    157c:	3f 09       	sbc	r19, r15
    157e:	40 0b       	sbc	r20, r16
    1580:	51 0b       	sbc	r21, r17
    1582:	57 fd       	sbrc	r21, 7
    1584:	08 c0       	rjmp	.+16     	; 0x1596 <_fpadd_parts+0x1d4>
    1586:	11 82       	std	Z+1, r1	; 0x01
    1588:	33 82       	std	Z+3, r3	; 0x03
    158a:	22 82       	std	Z+2, r2	; 0x02
    158c:	24 83       	std	Z+4, r18	; 0x04
    158e:	35 83       	std	Z+5, r19	; 0x05
    1590:	46 83       	std	Z+6, r20	; 0x06
    1592:	57 83       	std	Z+7, r21	; 0x07
    1594:	1d c0       	rjmp	.+58     	; 0x15d0 <_fpadd_parts+0x20e>
    1596:	81 e0       	ldi	r24, 0x01	; 1
    1598:	81 83       	std	Z+1, r24	; 0x01
    159a:	33 82       	std	Z+3, r3	; 0x03
    159c:	22 82       	std	Z+2, r2	; 0x02
    159e:	88 27       	eor	r24, r24
    15a0:	99 27       	eor	r25, r25
    15a2:	dc 01       	movw	r26, r24
    15a4:	82 1b       	sub	r24, r18
    15a6:	93 0b       	sbc	r25, r19
    15a8:	a4 0b       	sbc	r26, r20
    15aa:	b5 0b       	sbc	r27, r21
    15ac:	84 83       	std	Z+4, r24	; 0x04
    15ae:	95 83       	std	Z+5, r25	; 0x05
    15b0:	a6 83       	std	Z+6, r26	; 0x06
    15b2:	b7 83       	std	Z+7, r27	; 0x07
    15b4:	0d c0       	rjmp	.+26     	; 0x15d0 <_fpadd_parts+0x20e>
    15b6:	22 0f       	add	r18, r18
    15b8:	33 1f       	adc	r19, r19
    15ba:	44 1f       	adc	r20, r20
    15bc:	55 1f       	adc	r21, r21
    15be:	24 83       	std	Z+4, r18	; 0x04
    15c0:	35 83       	std	Z+5, r19	; 0x05
    15c2:	46 83       	std	Z+6, r20	; 0x06
    15c4:	57 83       	std	Z+7, r21	; 0x07
    15c6:	82 81       	ldd	r24, Z+2	; 0x02
    15c8:	93 81       	ldd	r25, Z+3	; 0x03
    15ca:	01 97       	sbiw	r24, 0x01	; 1
    15cc:	93 83       	std	Z+3, r25	; 0x03
    15ce:	82 83       	std	Z+2, r24	; 0x02
    15d0:	24 81       	ldd	r18, Z+4	; 0x04
    15d2:	35 81       	ldd	r19, Z+5	; 0x05
    15d4:	46 81       	ldd	r20, Z+6	; 0x06
    15d6:	57 81       	ldd	r21, Z+7	; 0x07
    15d8:	da 01       	movw	r26, r20
    15da:	c9 01       	movw	r24, r18
    15dc:	01 97       	sbiw	r24, 0x01	; 1
    15de:	a1 09       	sbc	r26, r1
    15e0:	b1 09       	sbc	r27, r1
    15e2:	8f 5f       	subi	r24, 0xFF	; 255
    15e4:	9f 4f       	sbci	r25, 0xFF	; 255
    15e6:	af 4f       	sbci	r26, 0xFF	; 255
    15e8:	bf 43       	sbci	r27, 0x3F	; 63
    15ea:	28 f3       	brcs	.-54     	; 0x15b6 <_fpadd_parts+0x1f4>
    15ec:	0b c0       	rjmp	.+22     	; 0x1604 <_fpadd_parts+0x242>
    15ee:	91 83       	std	Z+1, r25	; 0x01
    15f0:	33 82       	std	Z+3, r3	; 0x03
    15f2:	22 82       	std	Z+2, r2	; 0x02
    15f4:	ea 0c       	add	r14, r10
    15f6:	fb 1c       	adc	r15, r11
    15f8:	0c 1d       	adc	r16, r12
    15fa:	1d 1d       	adc	r17, r13
    15fc:	e4 82       	std	Z+4, r14	; 0x04
    15fe:	f5 82       	std	Z+5, r15	; 0x05
    1600:	06 83       	std	Z+6, r16	; 0x06
    1602:	17 83       	std	Z+7, r17	; 0x07
    1604:	83 e0       	ldi	r24, 0x03	; 3
    1606:	80 83       	st	Z, r24
    1608:	24 81       	ldd	r18, Z+4	; 0x04
    160a:	35 81       	ldd	r19, Z+5	; 0x05
    160c:	46 81       	ldd	r20, Z+6	; 0x06
    160e:	57 81       	ldd	r21, Z+7	; 0x07
    1610:	57 ff       	sbrs	r21, 7
    1612:	1a c0       	rjmp	.+52     	; 0x1648 <_fpadd_parts+0x286>
    1614:	c9 01       	movw	r24, r18
    1616:	aa 27       	eor	r26, r26
    1618:	97 fd       	sbrc	r25, 7
    161a:	a0 95       	com	r26
    161c:	ba 2f       	mov	r27, r26
    161e:	81 70       	andi	r24, 0x01	; 1
    1620:	90 70       	andi	r25, 0x00	; 0
    1622:	a0 70       	andi	r26, 0x00	; 0
    1624:	b0 70       	andi	r27, 0x00	; 0
    1626:	56 95       	lsr	r21
    1628:	47 95       	ror	r20
    162a:	37 95       	ror	r19
    162c:	27 95       	ror	r18
    162e:	82 2b       	or	r24, r18
    1630:	93 2b       	or	r25, r19
    1632:	a4 2b       	or	r26, r20
    1634:	b5 2b       	or	r27, r21
    1636:	84 83       	std	Z+4, r24	; 0x04
    1638:	95 83       	std	Z+5, r25	; 0x05
    163a:	a6 83       	std	Z+6, r26	; 0x06
    163c:	b7 83       	std	Z+7, r27	; 0x07
    163e:	82 81       	ldd	r24, Z+2	; 0x02
    1640:	93 81       	ldd	r25, Z+3	; 0x03
    1642:	01 96       	adiw	r24, 0x01	; 1
    1644:	93 83       	std	Z+3, r25	; 0x03
    1646:	82 83       	std	Z+2, r24	; 0x02
    1648:	df 01       	movw	r26, r30
    164a:	01 c0       	rjmp	.+2      	; 0x164e <_fpadd_parts+0x28c>
    164c:	d2 01       	movw	r26, r4
    164e:	cd 01       	movw	r24, r26
    1650:	cd b7       	in	r28, 0x3d	; 61
    1652:	de b7       	in	r29, 0x3e	; 62
    1654:	e2 e1       	ldi	r30, 0x12	; 18
    1656:	0c 94 52 0f 	jmp	0x1ea4	; 0x1ea4 <__epilogue_restores__>

0000165a <__subsf3>:
    165a:	a0 e2       	ldi	r26, 0x20	; 32
    165c:	b0 e0       	ldi	r27, 0x00	; 0
    165e:	e3 e3       	ldi	r30, 0x33	; 51
    1660:	fb e0       	ldi	r31, 0x0B	; 11
    1662:	0c 94 42 0f 	jmp	0x1e84	; 0x1e84 <__prologue_saves__+0x18>
    1666:	69 83       	std	Y+1, r22	; 0x01
    1668:	7a 83       	std	Y+2, r23	; 0x02
    166a:	8b 83       	std	Y+3, r24	; 0x03
    166c:	9c 83       	std	Y+4, r25	; 0x04
    166e:	2d 83       	std	Y+5, r18	; 0x05
    1670:	3e 83       	std	Y+6, r19	; 0x06
    1672:	4f 83       	std	Y+7, r20	; 0x07
    1674:	58 87       	std	Y+8, r21	; 0x08
    1676:	e9 e0       	ldi	r30, 0x09	; 9
    1678:	ee 2e       	mov	r14, r30
    167a:	f1 2c       	mov	r15, r1
    167c:	ec 0e       	add	r14, r28
    167e:	fd 1e       	adc	r15, r29
    1680:	ce 01       	movw	r24, r28
    1682:	01 96       	adiw	r24, 0x01	; 1
    1684:	b7 01       	movw	r22, r14
    1686:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    168a:	8e 01       	movw	r16, r28
    168c:	0f 5e       	subi	r16, 0xEF	; 239
    168e:	1f 4f       	sbci	r17, 0xFF	; 255
    1690:	ce 01       	movw	r24, r28
    1692:	05 96       	adiw	r24, 0x05	; 5
    1694:	b8 01       	movw	r22, r16
    1696:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    169a:	8a 89       	ldd	r24, Y+18	; 0x12
    169c:	91 e0       	ldi	r25, 0x01	; 1
    169e:	89 27       	eor	r24, r25
    16a0:	8a 8b       	std	Y+18, r24	; 0x12
    16a2:	c7 01       	movw	r24, r14
    16a4:	b8 01       	movw	r22, r16
    16a6:	ae 01       	movw	r20, r28
    16a8:	47 5e       	subi	r20, 0xE7	; 231
    16aa:	5f 4f       	sbci	r21, 0xFF	; 255
    16ac:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_fpadd_parts>
    16b0:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__pack_f>
    16b4:	a0 96       	adiw	r28, 0x20	; 32
    16b6:	e6 e0       	ldi	r30, 0x06	; 6
    16b8:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__epilogue_restores__+0x18>

000016bc <__addsf3>:
    16bc:	a0 e2       	ldi	r26, 0x20	; 32
    16be:	b0 e0       	ldi	r27, 0x00	; 0
    16c0:	e4 e6       	ldi	r30, 0x64	; 100
    16c2:	fb e0       	ldi	r31, 0x0B	; 11
    16c4:	0c 94 42 0f 	jmp	0x1e84	; 0x1e84 <__prologue_saves__+0x18>
    16c8:	69 83       	std	Y+1, r22	; 0x01
    16ca:	7a 83       	std	Y+2, r23	; 0x02
    16cc:	8b 83       	std	Y+3, r24	; 0x03
    16ce:	9c 83       	std	Y+4, r25	; 0x04
    16d0:	2d 83       	std	Y+5, r18	; 0x05
    16d2:	3e 83       	std	Y+6, r19	; 0x06
    16d4:	4f 83       	std	Y+7, r20	; 0x07
    16d6:	58 87       	std	Y+8, r21	; 0x08
    16d8:	f9 e0       	ldi	r31, 0x09	; 9
    16da:	ef 2e       	mov	r14, r31
    16dc:	f1 2c       	mov	r15, r1
    16de:	ec 0e       	add	r14, r28
    16e0:	fd 1e       	adc	r15, r29
    16e2:	ce 01       	movw	r24, r28
    16e4:	01 96       	adiw	r24, 0x01	; 1
    16e6:	b7 01       	movw	r22, r14
    16e8:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    16ec:	8e 01       	movw	r16, r28
    16ee:	0f 5e       	subi	r16, 0xEF	; 239
    16f0:	1f 4f       	sbci	r17, 0xFF	; 255
    16f2:	ce 01       	movw	r24, r28
    16f4:	05 96       	adiw	r24, 0x05	; 5
    16f6:	b8 01       	movw	r22, r16
    16f8:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    16fc:	c7 01       	movw	r24, r14
    16fe:	b8 01       	movw	r22, r16
    1700:	ae 01       	movw	r20, r28
    1702:	47 5e       	subi	r20, 0xE7	; 231
    1704:	5f 4f       	sbci	r21, 0xFF	; 255
    1706:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_fpadd_parts>
    170a:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__pack_f>
    170e:	a0 96       	adiw	r28, 0x20	; 32
    1710:	e6 e0       	ldi	r30, 0x06	; 6
    1712:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__epilogue_restores__+0x18>

00001716 <__mulsf3>:
    1716:	a0 e2       	ldi	r26, 0x20	; 32
    1718:	b0 e0       	ldi	r27, 0x00	; 0
    171a:	e1 e9       	ldi	r30, 0x91	; 145
    171c:	fb e0       	ldi	r31, 0x0B	; 11
    171e:	0c 94 36 0f 	jmp	0x1e6c	; 0x1e6c <__prologue_saves__>
    1722:	69 83       	std	Y+1, r22	; 0x01
    1724:	7a 83       	std	Y+2, r23	; 0x02
    1726:	8b 83       	std	Y+3, r24	; 0x03
    1728:	9c 83       	std	Y+4, r25	; 0x04
    172a:	2d 83       	std	Y+5, r18	; 0x05
    172c:	3e 83       	std	Y+6, r19	; 0x06
    172e:	4f 83       	std	Y+7, r20	; 0x07
    1730:	58 87       	std	Y+8, r21	; 0x08
    1732:	ce 01       	movw	r24, r28
    1734:	01 96       	adiw	r24, 0x01	; 1
    1736:	be 01       	movw	r22, r28
    1738:	67 5f       	subi	r22, 0xF7	; 247
    173a:	7f 4f       	sbci	r23, 0xFF	; 255
    173c:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    1740:	ce 01       	movw	r24, r28
    1742:	05 96       	adiw	r24, 0x05	; 5
    1744:	be 01       	movw	r22, r28
    1746:	6f 5e       	subi	r22, 0xEF	; 239
    1748:	7f 4f       	sbci	r23, 0xFF	; 255
    174a:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    174e:	99 85       	ldd	r25, Y+9	; 0x09
    1750:	92 30       	cpi	r25, 0x02	; 2
    1752:	88 f0       	brcs	.+34     	; 0x1776 <__mulsf3+0x60>
    1754:	89 89       	ldd	r24, Y+17	; 0x11
    1756:	82 30       	cpi	r24, 0x02	; 2
    1758:	c8 f0       	brcs	.+50     	; 0x178c <__mulsf3+0x76>
    175a:	94 30       	cpi	r25, 0x04	; 4
    175c:	19 f4       	brne	.+6      	; 0x1764 <__mulsf3+0x4e>
    175e:	82 30       	cpi	r24, 0x02	; 2
    1760:	51 f4       	brne	.+20     	; 0x1776 <__mulsf3+0x60>
    1762:	04 c0       	rjmp	.+8      	; 0x176c <__mulsf3+0x56>
    1764:	84 30       	cpi	r24, 0x04	; 4
    1766:	29 f4       	brne	.+10     	; 0x1772 <__mulsf3+0x5c>
    1768:	92 30       	cpi	r25, 0x02	; 2
    176a:	81 f4       	brne	.+32     	; 0x178c <__mulsf3+0x76>
    176c:	8a e2       	ldi	r24, 0x2A	; 42
    176e:	91 e0       	ldi	r25, 0x01	; 1
    1770:	c6 c0       	rjmp	.+396    	; 0x18fe <__mulsf3+0x1e8>
    1772:	92 30       	cpi	r25, 0x02	; 2
    1774:	49 f4       	brne	.+18     	; 0x1788 <__mulsf3+0x72>
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	9a 85       	ldd	r25, Y+10	; 0x0a
    177a:	8a 89       	ldd	r24, Y+18	; 0x12
    177c:	98 13       	cpse	r25, r24
    177e:	21 e0       	ldi	r18, 0x01	; 1
    1780:	2a 87       	std	Y+10, r18	; 0x0a
    1782:	ce 01       	movw	r24, r28
    1784:	09 96       	adiw	r24, 0x09	; 9
    1786:	bb c0       	rjmp	.+374    	; 0x18fe <__mulsf3+0x1e8>
    1788:	82 30       	cpi	r24, 0x02	; 2
    178a:	49 f4       	brne	.+18     	; 0x179e <__mulsf3+0x88>
    178c:	20 e0       	ldi	r18, 0x00	; 0
    178e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1790:	8a 89       	ldd	r24, Y+18	; 0x12
    1792:	98 13       	cpse	r25, r24
    1794:	21 e0       	ldi	r18, 0x01	; 1
    1796:	2a 8b       	std	Y+18, r18	; 0x12
    1798:	ce 01       	movw	r24, r28
    179a:	41 96       	adiw	r24, 0x11	; 17
    179c:	b0 c0       	rjmp	.+352    	; 0x18fe <__mulsf3+0x1e8>
    179e:	2d 84       	ldd	r2, Y+13	; 0x0d
    17a0:	3e 84       	ldd	r3, Y+14	; 0x0e
    17a2:	4f 84       	ldd	r4, Y+15	; 0x0f
    17a4:	58 88       	ldd	r5, Y+16	; 0x10
    17a6:	6d 88       	ldd	r6, Y+21	; 0x15
    17a8:	7e 88       	ldd	r7, Y+22	; 0x16
    17aa:	8f 88       	ldd	r8, Y+23	; 0x17
    17ac:	98 8c       	ldd	r9, Y+24	; 0x18
    17ae:	ee 24       	eor	r14, r14
    17b0:	ff 24       	eor	r15, r15
    17b2:	87 01       	movw	r16, r14
    17b4:	aa 24       	eor	r10, r10
    17b6:	bb 24       	eor	r11, r11
    17b8:	65 01       	movw	r12, r10
    17ba:	40 e0       	ldi	r20, 0x00	; 0
    17bc:	50 e0       	ldi	r21, 0x00	; 0
    17be:	60 e0       	ldi	r22, 0x00	; 0
    17c0:	70 e0       	ldi	r23, 0x00	; 0
    17c2:	e0 e0       	ldi	r30, 0x00	; 0
    17c4:	f0 e0       	ldi	r31, 0x00	; 0
    17c6:	c1 01       	movw	r24, r2
    17c8:	81 70       	andi	r24, 0x01	; 1
    17ca:	90 70       	andi	r25, 0x00	; 0
    17cc:	89 2b       	or	r24, r25
    17ce:	e9 f0       	breq	.+58     	; 0x180a <__mulsf3+0xf4>
    17d0:	e6 0c       	add	r14, r6
    17d2:	f7 1c       	adc	r15, r7
    17d4:	08 1d       	adc	r16, r8
    17d6:	19 1d       	adc	r17, r9
    17d8:	9a 01       	movw	r18, r20
    17da:	ab 01       	movw	r20, r22
    17dc:	2a 0d       	add	r18, r10
    17de:	3b 1d       	adc	r19, r11
    17e0:	4c 1d       	adc	r20, r12
    17e2:	5d 1d       	adc	r21, r13
    17e4:	80 e0       	ldi	r24, 0x00	; 0
    17e6:	90 e0       	ldi	r25, 0x00	; 0
    17e8:	a0 e0       	ldi	r26, 0x00	; 0
    17ea:	b0 e0       	ldi	r27, 0x00	; 0
    17ec:	e6 14       	cp	r14, r6
    17ee:	f7 04       	cpc	r15, r7
    17f0:	08 05       	cpc	r16, r8
    17f2:	19 05       	cpc	r17, r9
    17f4:	20 f4       	brcc	.+8      	; 0x17fe <__mulsf3+0xe8>
    17f6:	81 e0       	ldi	r24, 0x01	; 1
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	a0 e0       	ldi	r26, 0x00	; 0
    17fc:	b0 e0       	ldi	r27, 0x00	; 0
    17fe:	ba 01       	movw	r22, r20
    1800:	a9 01       	movw	r20, r18
    1802:	48 0f       	add	r20, r24
    1804:	59 1f       	adc	r21, r25
    1806:	6a 1f       	adc	r22, r26
    1808:	7b 1f       	adc	r23, r27
    180a:	aa 0c       	add	r10, r10
    180c:	bb 1c       	adc	r11, r11
    180e:	cc 1c       	adc	r12, r12
    1810:	dd 1c       	adc	r13, r13
    1812:	97 fe       	sbrs	r9, 7
    1814:	08 c0       	rjmp	.+16     	; 0x1826 <__mulsf3+0x110>
    1816:	81 e0       	ldi	r24, 0x01	; 1
    1818:	90 e0       	ldi	r25, 0x00	; 0
    181a:	a0 e0       	ldi	r26, 0x00	; 0
    181c:	b0 e0       	ldi	r27, 0x00	; 0
    181e:	a8 2a       	or	r10, r24
    1820:	b9 2a       	or	r11, r25
    1822:	ca 2a       	or	r12, r26
    1824:	db 2a       	or	r13, r27
    1826:	31 96       	adiw	r30, 0x01	; 1
    1828:	e0 32       	cpi	r30, 0x20	; 32
    182a:	f1 05       	cpc	r31, r1
    182c:	49 f0       	breq	.+18     	; 0x1840 <__mulsf3+0x12a>
    182e:	66 0c       	add	r6, r6
    1830:	77 1c       	adc	r7, r7
    1832:	88 1c       	adc	r8, r8
    1834:	99 1c       	adc	r9, r9
    1836:	56 94       	lsr	r5
    1838:	47 94       	ror	r4
    183a:	37 94       	ror	r3
    183c:	27 94       	ror	r2
    183e:	c3 cf       	rjmp	.-122    	; 0x17c6 <__mulsf3+0xb0>
    1840:	fa 85       	ldd	r31, Y+10	; 0x0a
    1842:	ea 89       	ldd	r30, Y+18	; 0x12
    1844:	2b 89       	ldd	r18, Y+19	; 0x13
    1846:	3c 89       	ldd	r19, Y+20	; 0x14
    1848:	8b 85       	ldd	r24, Y+11	; 0x0b
    184a:	9c 85       	ldd	r25, Y+12	; 0x0c
    184c:	28 0f       	add	r18, r24
    184e:	39 1f       	adc	r19, r25
    1850:	2e 5f       	subi	r18, 0xFE	; 254
    1852:	3f 4f       	sbci	r19, 0xFF	; 255
    1854:	17 c0       	rjmp	.+46     	; 0x1884 <__mulsf3+0x16e>
    1856:	ca 01       	movw	r24, r20
    1858:	81 70       	andi	r24, 0x01	; 1
    185a:	90 70       	andi	r25, 0x00	; 0
    185c:	89 2b       	or	r24, r25
    185e:	61 f0       	breq	.+24     	; 0x1878 <__mulsf3+0x162>
    1860:	16 95       	lsr	r17
    1862:	07 95       	ror	r16
    1864:	f7 94       	ror	r15
    1866:	e7 94       	ror	r14
    1868:	80 e0       	ldi	r24, 0x00	; 0
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	a0 e0       	ldi	r26, 0x00	; 0
    186e:	b0 e8       	ldi	r27, 0x80	; 128
    1870:	e8 2a       	or	r14, r24
    1872:	f9 2a       	or	r15, r25
    1874:	0a 2b       	or	r16, r26
    1876:	1b 2b       	or	r17, r27
    1878:	76 95       	lsr	r23
    187a:	67 95       	ror	r22
    187c:	57 95       	ror	r21
    187e:	47 95       	ror	r20
    1880:	2f 5f       	subi	r18, 0xFF	; 255
    1882:	3f 4f       	sbci	r19, 0xFF	; 255
    1884:	77 fd       	sbrc	r23, 7
    1886:	e7 cf       	rjmp	.-50     	; 0x1856 <__mulsf3+0x140>
    1888:	0c c0       	rjmp	.+24     	; 0x18a2 <__mulsf3+0x18c>
    188a:	44 0f       	add	r20, r20
    188c:	55 1f       	adc	r21, r21
    188e:	66 1f       	adc	r22, r22
    1890:	77 1f       	adc	r23, r23
    1892:	17 fd       	sbrc	r17, 7
    1894:	41 60       	ori	r20, 0x01	; 1
    1896:	ee 0c       	add	r14, r14
    1898:	ff 1c       	adc	r15, r15
    189a:	00 1f       	adc	r16, r16
    189c:	11 1f       	adc	r17, r17
    189e:	21 50       	subi	r18, 0x01	; 1
    18a0:	30 40       	sbci	r19, 0x00	; 0
    18a2:	40 30       	cpi	r20, 0x00	; 0
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	59 07       	cpc	r21, r25
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	69 07       	cpc	r22, r25
    18ac:	90 e4       	ldi	r25, 0x40	; 64
    18ae:	79 07       	cpc	r23, r25
    18b0:	60 f3       	brcs	.-40     	; 0x188a <__mulsf3+0x174>
    18b2:	2b 8f       	std	Y+27, r18	; 0x1b
    18b4:	3c 8f       	std	Y+28, r19	; 0x1c
    18b6:	db 01       	movw	r26, r22
    18b8:	ca 01       	movw	r24, r20
    18ba:	8f 77       	andi	r24, 0x7F	; 127
    18bc:	90 70       	andi	r25, 0x00	; 0
    18be:	a0 70       	andi	r26, 0x00	; 0
    18c0:	b0 70       	andi	r27, 0x00	; 0
    18c2:	80 34       	cpi	r24, 0x40	; 64
    18c4:	91 05       	cpc	r25, r1
    18c6:	a1 05       	cpc	r26, r1
    18c8:	b1 05       	cpc	r27, r1
    18ca:	61 f4       	brne	.+24     	; 0x18e4 <__mulsf3+0x1ce>
    18cc:	47 fd       	sbrc	r20, 7
    18ce:	0a c0       	rjmp	.+20     	; 0x18e4 <__mulsf3+0x1ce>
    18d0:	e1 14       	cp	r14, r1
    18d2:	f1 04       	cpc	r15, r1
    18d4:	01 05       	cpc	r16, r1
    18d6:	11 05       	cpc	r17, r1
    18d8:	29 f0       	breq	.+10     	; 0x18e4 <__mulsf3+0x1ce>
    18da:	40 5c       	subi	r20, 0xC0	; 192
    18dc:	5f 4f       	sbci	r21, 0xFF	; 255
    18de:	6f 4f       	sbci	r22, 0xFF	; 255
    18e0:	7f 4f       	sbci	r23, 0xFF	; 255
    18e2:	40 78       	andi	r20, 0x80	; 128
    18e4:	1a 8e       	std	Y+26, r1	; 0x1a
    18e6:	fe 17       	cp	r31, r30
    18e8:	11 f0       	breq	.+4      	; 0x18ee <__mulsf3+0x1d8>
    18ea:	81 e0       	ldi	r24, 0x01	; 1
    18ec:	8a 8f       	std	Y+26, r24	; 0x1a
    18ee:	4d 8f       	std	Y+29, r20	; 0x1d
    18f0:	5e 8f       	std	Y+30, r21	; 0x1e
    18f2:	6f 8f       	std	Y+31, r22	; 0x1f
    18f4:	78 a3       	std	Y+32, r23	; 0x20
    18f6:	83 e0       	ldi	r24, 0x03	; 3
    18f8:	89 8f       	std	Y+25, r24	; 0x19
    18fa:	ce 01       	movw	r24, r28
    18fc:	49 96       	adiw	r24, 0x19	; 25
    18fe:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__pack_f>
    1902:	a0 96       	adiw	r28, 0x20	; 32
    1904:	e2 e1       	ldi	r30, 0x12	; 18
    1906:	0c 94 52 0f 	jmp	0x1ea4	; 0x1ea4 <__epilogue_restores__>

0000190a <__gtsf2>:
    190a:	a8 e1       	ldi	r26, 0x18	; 24
    190c:	b0 e0       	ldi	r27, 0x00	; 0
    190e:	eb e8       	ldi	r30, 0x8B	; 139
    1910:	fc e0       	ldi	r31, 0x0C	; 12
    1912:	0c 94 42 0f 	jmp	0x1e84	; 0x1e84 <__prologue_saves__+0x18>
    1916:	69 83       	std	Y+1, r22	; 0x01
    1918:	7a 83       	std	Y+2, r23	; 0x02
    191a:	8b 83       	std	Y+3, r24	; 0x03
    191c:	9c 83       	std	Y+4, r25	; 0x04
    191e:	2d 83       	std	Y+5, r18	; 0x05
    1920:	3e 83       	std	Y+6, r19	; 0x06
    1922:	4f 83       	std	Y+7, r20	; 0x07
    1924:	58 87       	std	Y+8, r21	; 0x08
    1926:	89 e0       	ldi	r24, 0x09	; 9
    1928:	e8 2e       	mov	r14, r24
    192a:	f1 2c       	mov	r15, r1
    192c:	ec 0e       	add	r14, r28
    192e:	fd 1e       	adc	r15, r29
    1930:	ce 01       	movw	r24, r28
    1932:	01 96       	adiw	r24, 0x01	; 1
    1934:	b7 01       	movw	r22, r14
    1936:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    193a:	8e 01       	movw	r16, r28
    193c:	0f 5e       	subi	r16, 0xEF	; 239
    193e:	1f 4f       	sbci	r17, 0xFF	; 255
    1940:	ce 01       	movw	r24, r28
    1942:	05 96       	adiw	r24, 0x05	; 5
    1944:	b8 01       	movw	r22, r16
    1946:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    194a:	89 85       	ldd	r24, Y+9	; 0x09
    194c:	82 30       	cpi	r24, 0x02	; 2
    194e:	40 f0       	brcs	.+16     	; 0x1960 <__gtsf2+0x56>
    1950:	89 89       	ldd	r24, Y+17	; 0x11
    1952:	82 30       	cpi	r24, 0x02	; 2
    1954:	28 f0       	brcs	.+10     	; 0x1960 <__gtsf2+0x56>
    1956:	c7 01       	movw	r24, r14
    1958:	b8 01       	movw	r22, r16
    195a:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <__fpcmp_parts_f>
    195e:	01 c0       	rjmp	.+2      	; 0x1962 <__gtsf2+0x58>
    1960:	8f ef       	ldi	r24, 0xFF	; 255
    1962:	68 96       	adiw	r28, 0x18	; 24
    1964:	e6 e0       	ldi	r30, 0x06	; 6
    1966:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__epilogue_restores__+0x18>

0000196a <__gesf2>:
    196a:	a8 e1       	ldi	r26, 0x18	; 24
    196c:	b0 e0       	ldi	r27, 0x00	; 0
    196e:	eb eb       	ldi	r30, 0xBB	; 187
    1970:	fc e0       	ldi	r31, 0x0C	; 12
    1972:	0c 94 42 0f 	jmp	0x1e84	; 0x1e84 <__prologue_saves__+0x18>
    1976:	69 83       	std	Y+1, r22	; 0x01
    1978:	7a 83       	std	Y+2, r23	; 0x02
    197a:	8b 83       	std	Y+3, r24	; 0x03
    197c:	9c 83       	std	Y+4, r25	; 0x04
    197e:	2d 83       	std	Y+5, r18	; 0x05
    1980:	3e 83       	std	Y+6, r19	; 0x06
    1982:	4f 83       	std	Y+7, r20	; 0x07
    1984:	58 87       	std	Y+8, r21	; 0x08
    1986:	89 e0       	ldi	r24, 0x09	; 9
    1988:	e8 2e       	mov	r14, r24
    198a:	f1 2c       	mov	r15, r1
    198c:	ec 0e       	add	r14, r28
    198e:	fd 1e       	adc	r15, r29
    1990:	ce 01       	movw	r24, r28
    1992:	01 96       	adiw	r24, 0x01	; 1
    1994:	b7 01       	movw	r22, r14
    1996:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    199a:	8e 01       	movw	r16, r28
    199c:	0f 5e       	subi	r16, 0xEF	; 239
    199e:	1f 4f       	sbci	r17, 0xFF	; 255
    19a0:	ce 01       	movw	r24, r28
    19a2:	05 96       	adiw	r24, 0x05	; 5
    19a4:	b8 01       	movw	r22, r16
    19a6:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    19aa:	89 85       	ldd	r24, Y+9	; 0x09
    19ac:	82 30       	cpi	r24, 0x02	; 2
    19ae:	40 f0       	brcs	.+16     	; 0x19c0 <__gesf2+0x56>
    19b0:	89 89       	ldd	r24, Y+17	; 0x11
    19b2:	82 30       	cpi	r24, 0x02	; 2
    19b4:	28 f0       	brcs	.+10     	; 0x19c0 <__gesf2+0x56>
    19b6:	c7 01       	movw	r24, r14
    19b8:	b8 01       	movw	r22, r16
    19ba:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <__fpcmp_parts_f>
    19be:	01 c0       	rjmp	.+2      	; 0x19c2 <__gesf2+0x58>
    19c0:	8f ef       	ldi	r24, 0xFF	; 255
    19c2:	68 96       	adiw	r28, 0x18	; 24
    19c4:	e6 e0       	ldi	r30, 0x06	; 6
    19c6:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__epilogue_restores__+0x18>

000019ca <__ltsf2>:
    19ca:	a8 e1       	ldi	r26, 0x18	; 24
    19cc:	b0 e0       	ldi	r27, 0x00	; 0
    19ce:	eb ee       	ldi	r30, 0xEB	; 235
    19d0:	fc e0       	ldi	r31, 0x0C	; 12
    19d2:	0c 94 42 0f 	jmp	0x1e84	; 0x1e84 <__prologue_saves__+0x18>
    19d6:	69 83       	std	Y+1, r22	; 0x01
    19d8:	7a 83       	std	Y+2, r23	; 0x02
    19da:	8b 83       	std	Y+3, r24	; 0x03
    19dc:	9c 83       	std	Y+4, r25	; 0x04
    19de:	2d 83       	std	Y+5, r18	; 0x05
    19e0:	3e 83       	std	Y+6, r19	; 0x06
    19e2:	4f 83       	std	Y+7, r20	; 0x07
    19e4:	58 87       	std	Y+8, r21	; 0x08
    19e6:	89 e0       	ldi	r24, 0x09	; 9
    19e8:	e8 2e       	mov	r14, r24
    19ea:	f1 2c       	mov	r15, r1
    19ec:	ec 0e       	add	r14, r28
    19ee:	fd 1e       	adc	r15, r29
    19f0:	ce 01       	movw	r24, r28
    19f2:	01 96       	adiw	r24, 0x01	; 1
    19f4:	b7 01       	movw	r22, r14
    19f6:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    19fa:	8e 01       	movw	r16, r28
    19fc:	0f 5e       	subi	r16, 0xEF	; 239
    19fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1a00:	ce 01       	movw	r24, r28
    1a02:	05 96       	adiw	r24, 0x05	; 5
    1a04:	b8 01       	movw	r22, r16
    1a06:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    1a0a:	89 85       	ldd	r24, Y+9	; 0x09
    1a0c:	82 30       	cpi	r24, 0x02	; 2
    1a0e:	40 f0       	brcs	.+16     	; 0x1a20 <__ltsf2+0x56>
    1a10:	89 89       	ldd	r24, Y+17	; 0x11
    1a12:	82 30       	cpi	r24, 0x02	; 2
    1a14:	28 f0       	brcs	.+10     	; 0x1a20 <__ltsf2+0x56>
    1a16:	c7 01       	movw	r24, r14
    1a18:	b8 01       	movw	r22, r16
    1a1a:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <__fpcmp_parts_f>
    1a1e:	01 c0       	rjmp	.+2      	; 0x1a22 <__ltsf2+0x58>
    1a20:	81 e0       	ldi	r24, 0x01	; 1
    1a22:	68 96       	adiw	r28, 0x18	; 24
    1a24:	e6 e0       	ldi	r30, 0x06	; 6
    1a26:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__epilogue_restores__+0x18>

00001a2a <__fixsfsi>:
    1a2a:	ac e0       	ldi	r26, 0x0C	; 12
    1a2c:	b0 e0       	ldi	r27, 0x00	; 0
    1a2e:	eb e1       	ldi	r30, 0x1B	; 27
    1a30:	fd e0       	ldi	r31, 0x0D	; 13
    1a32:	0c 94 46 0f 	jmp	0x1e8c	; 0x1e8c <__prologue_saves__+0x20>
    1a36:	69 83       	std	Y+1, r22	; 0x01
    1a38:	7a 83       	std	Y+2, r23	; 0x02
    1a3a:	8b 83       	std	Y+3, r24	; 0x03
    1a3c:	9c 83       	std	Y+4, r25	; 0x04
    1a3e:	ce 01       	movw	r24, r28
    1a40:	01 96       	adiw	r24, 0x01	; 1
    1a42:	be 01       	movw	r22, r28
    1a44:	6b 5f       	subi	r22, 0xFB	; 251
    1a46:	7f 4f       	sbci	r23, 0xFF	; 255
    1a48:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__unpack_f>
    1a4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a4e:	82 30       	cpi	r24, 0x02	; 2
    1a50:	61 f1       	breq	.+88     	; 0x1aaa <__fixsfsi+0x80>
    1a52:	82 30       	cpi	r24, 0x02	; 2
    1a54:	50 f1       	brcs	.+84     	; 0x1aaa <__fixsfsi+0x80>
    1a56:	84 30       	cpi	r24, 0x04	; 4
    1a58:	21 f4       	brne	.+8      	; 0x1a62 <__fixsfsi+0x38>
    1a5a:	8e 81       	ldd	r24, Y+6	; 0x06
    1a5c:	88 23       	and	r24, r24
    1a5e:	51 f1       	breq	.+84     	; 0x1ab4 <__fixsfsi+0x8a>
    1a60:	2e c0       	rjmp	.+92     	; 0x1abe <__fixsfsi+0x94>
    1a62:	2f 81       	ldd	r18, Y+7	; 0x07
    1a64:	38 85       	ldd	r19, Y+8	; 0x08
    1a66:	37 fd       	sbrc	r19, 7
    1a68:	20 c0       	rjmp	.+64     	; 0x1aaa <__fixsfsi+0x80>
    1a6a:	6e 81       	ldd	r22, Y+6	; 0x06
    1a6c:	2f 31       	cpi	r18, 0x1F	; 31
    1a6e:	31 05       	cpc	r19, r1
    1a70:	1c f0       	brlt	.+6      	; 0x1a78 <__fixsfsi+0x4e>
    1a72:	66 23       	and	r22, r22
    1a74:	f9 f0       	breq	.+62     	; 0x1ab4 <__fixsfsi+0x8a>
    1a76:	23 c0       	rjmp	.+70     	; 0x1abe <__fixsfsi+0x94>
    1a78:	8e e1       	ldi	r24, 0x1E	; 30
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	82 1b       	sub	r24, r18
    1a7e:	93 0b       	sbc	r25, r19
    1a80:	29 85       	ldd	r18, Y+9	; 0x09
    1a82:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a84:	4b 85       	ldd	r20, Y+11	; 0x0b
    1a86:	5c 85       	ldd	r21, Y+12	; 0x0c
    1a88:	04 c0       	rjmp	.+8      	; 0x1a92 <__fixsfsi+0x68>
    1a8a:	56 95       	lsr	r21
    1a8c:	47 95       	ror	r20
    1a8e:	37 95       	ror	r19
    1a90:	27 95       	ror	r18
    1a92:	8a 95       	dec	r24
    1a94:	d2 f7       	brpl	.-12     	; 0x1a8a <__fixsfsi+0x60>
    1a96:	66 23       	and	r22, r22
    1a98:	b1 f0       	breq	.+44     	; 0x1ac6 <__fixsfsi+0x9c>
    1a9a:	50 95       	com	r21
    1a9c:	40 95       	com	r20
    1a9e:	30 95       	com	r19
    1aa0:	21 95       	neg	r18
    1aa2:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa4:	4f 4f       	sbci	r20, 0xFF	; 255
    1aa6:	5f 4f       	sbci	r21, 0xFF	; 255
    1aa8:	0e c0       	rjmp	.+28     	; 0x1ac6 <__fixsfsi+0x9c>
    1aaa:	20 e0       	ldi	r18, 0x00	; 0
    1aac:	30 e0       	ldi	r19, 0x00	; 0
    1aae:	40 e0       	ldi	r20, 0x00	; 0
    1ab0:	50 e0       	ldi	r21, 0x00	; 0
    1ab2:	09 c0       	rjmp	.+18     	; 0x1ac6 <__fixsfsi+0x9c>
    1ab4:	2f ef       	ldi	r18, 0xFF	; 255
    1ab6:	3f ef       	ldi	r19, 0xFF	; 255
    1ab8:	4f ef       	ldi	r20, 0xFF	; 255
    1aba:	5f e7       	ldi	r21, 0x7F	; 127
    1abc:	04 c0       	rjmp	.+8      	; 0x1ac6 <__fixsfsi+0x9c>
    1abe:	20 e0       	ldi	r18, 0x00	; 0
    1ac0:	30 e0       	ldi	r19, 0x00	; 0
    1ac2:	40 e0       	ldi	r20, 0x00	; 0
    1ac4:	50 e8       	ldi	r21, 0x80	; 128
    1ac6:	b9 01       	movw	r22, r18
    1ac8:	ca 01       	movw	r24, r20
    1aca:	2c 96       	adiw	r28, 0x0c	; 12
    1acc:	e2 e0       	ldi	r30, 0x02	; 2
    1ace:	0c 94 62 0f 	jmp	0x1ec4	; 0x1ec4 <__epilogue_restores__+0x20>

00001ad2 <__pack_f>:
    1ad2:	df 92       	push	r13
    1ad4:	ef 92       	push	r14
    1ad6:	ff 92       	push	r15
    1ad8:	0f 93       	push	r16
    1ada:	1f 93       	push	r17
    1adc:	fc 01       	movw	r30, r24
    1ade:	e4 80       	ldd	r14, Z+4	; 0x04
    1ae0:	f5 80       	ldd	r15, Z+5	; 0x05
    1ae2:	06 81       	ldd	r16, Z+6	; 0x06
    1ae4:	17 81       	ldd	r17, Z+7	; 0x07
    1ae6:	d1 80       	ldd	r13, Z+1	; 0x01
    1ae8:	80 81       	ld	r24, Z
    1aea:	82 30       	cpi	r24, 0x02	; 2
    1aec:	48 f4       	brcc	.+18     	; 0x1b00 <__pack_f+0x2e>
    1aee:	80 e0       	ldi	r24, 0x00	; 0
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	a0 e1       	ldi	r26, 0x10	; 16
    1af4:	b0 e0       	ldi	r27, 0x00	; 0
    1af6:	e8 2a       	or	r14, r24
    1af8:	f9 2a       	or	r15, r25
    1afa:	0a 2b       	or	r16, r26
    1afc:	1b 2b       	or	r17, r27
    1afe:	a5 c0       	rjmp	.+330    	; 0x1c4a <__pack_f+0x178>
    1b00:	84 30       	cpi	r24, 0x04	; 4
    1b02:	09 f4       	brne	.+2      	; 0x1b06 <__pack_f+0x34>
    1b04:	9f c0       	rjmp	.+318    	; 0x1c44 <__pack_f+0x172>
    1b06:	82 30       	cpi	r24, 0x02	; 2
    1b08:	21 f4       	brne	.+8      	; 0x1b12 <__pack_f+0x40>
    1b0a:	ee 24       	eor	r14, r14
    1b0c:	ff 24       	eor	r15, r15
    1b0e:	87 01       	movw	r16, r14
    1b10:	05 c0       	rjmp	.+10     	; 0x1b1c <__pack_f+0x4a>
    1b12:	e1 14       	cp	r14, r1
    1b14:	f1 04       	cpc	r15, r1
    1b16:	01 05       	cpc	r16, r1
    1b18:	11 05       	cpc	r17, r1
    1b1a:	19 f4       	brne	.+6      	; 0x1b22 <__pack_f+0x50>
    1b1c:	e0 e0       	ldi	r30, 0x00	; 0
    1b1e:	f0 e0       	ldi	r31, 0x00	; 0
    1b20:	96 c0       	rjmp	.+300    	; 0x1c4e <__pack_f+0x17c>
    1b22:	62 81       	ldd	r22, Z+2	; 0x02
    1b24:	73 81       	ldd	r23, Z+3	; 0x03
    1b26:	9f ef       	ldi	r25, 0xFF	; 255
    1b28:	62 38       	cpi	r22, 0x82	; 130
    1b2a:	79 07       	cpc	r23, r25
    1b2c:	0c f0       	brlt	.+2      	; 0x1b30 <__pack_f+0x5e>
    1b2e:	5b c0       	rjmp	.+182    	; 0x1be6 <__pack_f+0x114>
    1b30:	22 e8       	ldi	r18, 0x82	; 130
    1b32:	3f ef       	ldi	r19, 0xFF	; 255
    1b34:	26 1b       	sub	r18, r22
    1b36:	37 0b       	sbc	r19, r23
    1b38:	2a 31       	cpi	r18, 0x1A	; 26
    1b3a:	31 05       	cpc	r19, r1
    1b3c:	2c f0       	brlt	.+10     	; 0x1b48 <__pack_f+0x76>
    1b3e:	20 e0       	ldi	r18, 0x00	; 0
    1b40:	30 e0       	ldi	r19, 0x00	; 0
    1b42:	40 e0       	ldi	r20, 0x00	; 0
    1b44:	50 e0       	ldi	r21, 0x00	; 0
    1b46:	2a c0       	rjmp	.+84     	; 0x1b9c <__pack_f+0xca>
    1b48:	b8 01       	movw	r22, r16
    1b4a:	a7 01       	movw	r20, r14
    1b4c:	02 2e       	mov	r0, r18
    1b4e:	04 c0       	rjmp	.+8      	; 0x1b58 <__pack_f+0x86>
    1b50:	76 95       	lsr	r23
    1b52:	67 95       	ror	r22
    1b54:	57 95       	ror	r21
    1b56:	47 95       	ror	r20
    1b58:	0a 94       	dec	r0
    1b5a:	d2 f7       	brpl	.-12     	; 0x1b50 <__pack_f+0x7e>
    1b5c:	81 e0       	ldi	r24, 0x01	; 1
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	a0 e0       	ldi	r26, 0x00	; 0
    1b62:	b0 e0       	ldi	r27, 0x00	; 0
    1b64:	04 c0       	rjmp	.+8      	; 0x1b6e <__pack_f+0x9c>
    1b66:	88 0f       	add	r24, r24
    1b68:	99 1f       	adc	r25, r25
    1b6a:	aa 1f       	adc	r26, r26
    1b6c:	bb 1f       	adc	r27, r27
    1b6e:	2a 95       	dec	r18
    1b70:	d2 f7       	brpl	.-12     	; 0x1b66 <__pack_f+0x94>
    1b72:	01 97       	sbiw	r24, 0x01	; 1
    1b74:	a1 09       	sbc	r26, r1
    1b76:	b1 09       	sbc	r27, r1
    1b78:	8e 21       	and	r24, r14
    1b7a:	9f 21       	and	r25, r15
    1b7c:	a0 23       	and	r26, r16
    1b7e:	b1 23       	and	r27, r17
    1b80:	00 97       	sbiw	r24, 0x00	; 0
    1b82:	a1 05       	cpc	r26, r1
    1b84:	b1 05       	cpc	r27, r1
    1b86:	21 f0       	breq	.+8      	; 0x1b90 <__pack_f+0xbe>
    1b88:	81 e0       	ldi	r24, 0x01	; 1
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	a0 e0       	ldi	r26, 0x00	; 0
    1b8e:	b0 e0       	ldi	r27, 0x00	; 0
    1b90:	9a 01       	movw	r18, r20
    1b92:	ab 01       	movw	r20, r22
    1b94:	28 2b       	or	r18, r24
    1b96:	39 2b       	or	r19, r25
    1b98:	4a 2b       	or	r20, r26
    1b9a:	5b 2b       	or	r21, r27
    1b9c:	da 01       	movw	r26, r20
    1b9e:	c9 01       	movw	r24, r18
    1ba0:	8f 77       	andi	r24, 0x7F	; 127
    1ba2:	90 70       	andi	r25, 0x00	; 0
    1ba4:	a0 70       	andi	r26, 0x00	; 0
    1ba6:	b0 70       	andi	r27, 0x00	; 0
    1ba8:	80 34       	cpi	r24, 0x40	; 64
    1baa:	91 05       	cpc	r25, r1
    1bac:	a1 05       	cpc	r26, r1
    1bae:	b1 05       	cpc	r27, r1
    1bb0:	39 f4       	brne	.+14     	; 0x1bc0 <__pack_f+0xee>
    1bb2:	27 ff       	sbrs	r18, 7
    1bb4:	09 c0       	rjmp	.+18     	; 0x1bc8 <__pack_f+0xf6>
    1bb6:	20 5c       	subi	r18, 0xC0	; 192
    1bb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1bba:	4f 4f       	sbci	r20, 0xFF	; 255
    1bbc:	5f 4f       	sbci	r21, 0xFF	; 255
    1bbe:	04 c0       	rjmp	.+8      	; 0x1bc8 <__pack_f+0xf6>
    1bc0:	21 5c       	subi	r18, 0xC1	; 193
    1bc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc4:	4f 4f       	sbci	r20, 0xFF	; 255
    1bc6:	5f 4f       	sbci	r21, 0xFF	; 255
    1bc8:	e0 e0       	ldi	r30, 0x00	; 0
    1bca:	f0 e0       	ldi	r31, 0x00	; 0
    1bcc:	20 30       	cpi	r18, 0x00	; 0
    1bce:	a0 e0       	ldi	r26, 0x00	; 0
    1bd0:	3a 07       	cpc	r19, r26
    1bd2:	a0 e0       	ldi	r26, 0x00	; 0
    1bd4:	4a 07       	cpc	r20, r26
    1bd6:	a0 e4       	ldi	r26, 0x40	; 64
    1bd8:	5a 07       	cpc	r21, r26
    1bda:	10 f0       	brcs	.+4      	; 0x1be0 <__pack_f+0x10e>
    1bdc:	e1 e0       	ldi	r30, 0x01	; 1
    1bde:	f0 e0       	ldi	r31, 0x00	; 0
    1be0:	79 01       	movw	r14, r18
    1be2:	8a 01       	movw	r16, r20
    1be4:	27 c0       	rjmp	.+78     	; 0x1c34 <__pack_f+0x162>
    1be6:	60 38       	cpi	r22, 0x80	; 128
    1be8:	71 05       	cpc	r23, r1
    1bea:	64 f5       	brge	.+88     	; 0x1c44 <__pack_f+0x172>
    1bec:	fb 01       	movw	r30, r22
    1bee:	e1 58       	subi	r30, 0x81	; 129
    1bf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf2:	d8 01       	movw	r26, r16
    1bf4:	c7 01       	movw	r24, r14
    1bf6:	8f 77       	andi	r24, 0x7F	; 127
    1bf8:	90 70       	andi	r25, 0x00	; 0
    1bfa:	a0 70       	andi	r26, 0x00	; 0
    1bfc:	b0 70       	andi	r27, 0x00	; 0
    1bfe:	80 34       	cpi	r24, 0x40	; 64
    1c00:	91 05       	cpc	r25, r1
    1c02:	a1 05       	cpc	r26, r1
    1c04:	b1 05       	cpc	r27, r1
    1c06:	39 f4       	brne	.+14     	; 0x1c16 <__pack_f+0x144>
    1c08:	e7 fe       	sbrs	r14, 7
    1c0a:	0d c0       	rjmp	.+26     	; 0x1c26 <__pack_f+0x154>
    1c0c:	80 e4       	ldi	r24, 0x40	; 64
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	a0 e0       	ldi	r26, 0x00	; 0
    1c12:	b0 e0       	ldi	r27, 0x00	; 0
    1c14:	04 c0       	rjmp	.+8      	; 0x1c1e <__pack_f+0x14c>
    1c16:	8f e3       	ldi	r24, 0x3F	; 63
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	a0 e0       	ldi	r26, 0x00	; 0
    1c1c:	b0 e0       	ldi	r27, 0x00	; 0
    1c1e:	e8 0e       	add	r14, r24
    1c20:	f9 1e       	adc	r15, r25
    1c22:	0a 1f       	adc	r16, r26
    1c24:	1b 1f       	adc	r17, r27
    1c26:	17 ff       	sbrs	r17, 7
    1c28:	05 c0       	rjmp	.+10     	; 0x1c34 <__pack_f+0x162>
    1c2a:	16 95       	lsr	r17
    1c2c:	07 95       	ror	r16
    1c2e:	f7 94       	ror	r15
    1c30:	e7 94       	ror	r14
    1c32:	31 96       	adiw	r30, 0x01	; 1
    1c34:	87 e0       	ldi	r24, 0x07	; 7
    1c36:	16 95       	lsr	r17
    1c38:	07 95       	ror	r16
    1c3a:	f7 94       	ror	r15
    1c3c:	e7 94       	ror	r14
    1c3e:	8a 95       	dec	r24
    1c40:	d1 f7       	brne	.-12     	; 0x1c36 <__pack_f+0x164>
    1c42:	05 c0       	rjmp	.+10     	; 0x1c4e <__pack_f+0x17c>
    1c44:	ee 24       	eor	r14, r14
    1c46:	ff 24       	eor	r15, r15
    1c48:	87 01       	movw	r16, r14
    1c4a:	ef ef       	ldi	r30, 0xFF	; 255
    1c4c:	f0 e0       	ldi	r31, 0x00	; 0
    1c4e:	6e 2f       	mov	r22, r30
    1c50:	67 95       	ror	r22
    1c52:	66 27       	eor	r22, r22
    1c54:	67 95       	ror	r22
    1c56:	90 2f       	mov	r25, r16
    1c58:	9f 77       	andi	r25, 0x7F	; 127
    1c5a:	d7 94       	ror	r13
    1c5c:	dd 24       	eor	r13, r13
    1c5e:	d7 94       	ror	r13
    1c60:	8e 2f       	mov	r24, r30
    1c62:	86 95       	lsr	r24
    1c64:	49 2f       	mov	r20, r25
    1c66:	46 2b       	or	r20, r22
    1c68:	58 2f       	mov	r21, r24
    1c6a:	5d 29       	or	r21, r13
    1c6c:	b7 01       	movw	r22, r14
    1c6e:	ca 01       	movw	r24, r20
    1c70:	1f 91       	pop	r17
    1c72:	0f 91       	pop	r16
    1c74:	ff 90       	pop	r15
    1c76:	ef 90       	pop	r14
    1c78:	df 90       	pop	r13
    1c7a:	08 95       	ret

00001c7c <__unpack_f>:
    1c7c:	fc 01       	movw	r30, r24
    1c7e:	db 01       	movw	r26, r22
    1c80:	40 81       	ld	r20, Z
    1c82:	51 81       	ldd	r21, Z+1	; 0x01
    1c84:	22 81       	ldd	r18, Z+2	; 0x02
    1c86:	62 2f       	mov	r22, r18
    1c88:	6f 77       	andi	r22, 0x7F	; 127
    1c8a:	70 e0       	ldi	r23, 0x00	; 0
    1c8c:	22 1f       	adc	r18, r18
    1c8e:	22 27       	eor	r18, r18
    1c90:	22 1f       	adc	r18, r18
    1c92:	93 81       	ldd	r25, Z+3	; 0x03
    1c94:	89 2f       	mov	r24, r25
    1c96:	88 0f       	add	r24, r24
    1c98:	82 2b       	or	r24, r18
    1c9a:	28 2f       	mov	r18, r24
    1c9c:	30 e0       	ldi	r19, 0x00	; 0
    1c9e:	99 1f       	adc	r25, r25
    1ca0:	99 27       	eor	r25, r25
    1ca2:	99 1f       	adc	r25, r25
    1ca4:	11 96       	adiw	r26, 0x01	; 1
    1ca6:	9c 93       	st	X, r25
    1ca8:	11 97       	sbiw	r26, 0x01	; 1
    1caa:	21 15       	cp	r18, r1
    1cac:	31 05       	cpc	r19, r1
    1cae:	a9 f5       	brne	.+106    	; 0x1d1a <__unpack_f+0x9e>
    1cb0:	41 15       	cp	r20, r1
    1cb2:	51 05       	cpc	r21, r1
    1cb4:	61 05       	cpc	r22, r1
    1cb6:	71 05       	cpc	r23, r1
    1cb8:	11 f4       	brne	.+4      	; 0x1cbe <__unpack_f+0x42>
    1cba:	82 e0       	ldi	r24, 0x02	; 2
    1cbc:	37 c0       	rjmp	.+110    	; 0x1d2c <__unpack_f+0xb0>
    1cbe:	82 e8       	ldi	r24, 0x82	; 130
    1cc0:	9f ef       	ldi	r25, 0xFF	; 255
    1cc2:	13 96       	adiw	r26, 0x03	; 3
    1cc4:	9c 93       	st	X, r25
    1cc6:	8e 93       	st	-X, r24
    1cc8:	12 97       	sbiw	r26, 0x02	; 2
    1cca:	9a 01       	movw	r18, r20
    1ccc:	ab 01       	movw	r20, r22
    1cce:	67 e0       	ldi	r22, 0x07	; 7
    1cd0:	22 0f       	add	r18, r18
    1cd2:	33 1f       	adc	r19, r19
    1cd4:	44 1f       	adc	r20, r20
    1cd6:	55 1f       	adc	r21, r21
    1cd8:	6a 95       	dec	r22
    1cda:	d1 f7       	brne	.-12     	; 0x1cd0 <__unpack_f+0x54>
    1cdc:	83 e0       	ldi	r24, 0x03	; 3
    1cde:	8c 93       	st	X, r24
    1ce0:	0d c0       	rjmp	.+26     	; 0x1cfc <__unpack_f+0x80>
    1ce2:	22 0f       	add	r18, r18
    1ce4:	33 1f       	adc	r19, r19
    1ce6:	44 1f       	adc	r20, r20
    1ce8:	55 1f       	adc	r21, r21
    1cea:	12 96       	adiw	r26, 0x02	; 2
    1cec:	8d 91       	ld	r24, X+
    1cee:	9c 91       	ld	r25, X
    1cf0:	13 97       	sbiw	r26, 0x03	; 3
    1cf2:	01 97       	sbiw	r24, 0x01	; 1
    1cf4:	13 96       	adiw	r26, 0x03	; 3
    1cf6:	9c 93       	st	X, r25
    1cf8:	8e 93       	st	-X, r24
    1cfa:	12 97       	sbiw	r26, 0x02	; 2
    1cfc:	20 30       	cpi	r18, 0x00	; 0
    1cfe:	80 e0       	ldi	r24, 0x00	; 0
    1d00:	38 07       	cpc	r19, r24
    1d02:	80 e0       	ldi	r24, 0x00	; 0
    1d04:	48 07       	cpc	r20, r24
    1d06:	80 e4       	ldi	r24, 0x40	; 64
    1d08:	58 07       	cpc	r21, r24
    1d0a:	58 f3       	brcs	.-42     	; 0x1ce2 <__unpack_f+0x66>
    1d0c:	14 96       	adiw	r26, 0x04	; 4
    1d0e:	2d 93       	st	X+, r18
    1d10:	3d 93       	st	X+, r19
    1d12:	4d 93       	st	X+, r20
    1d14:	5c 93       	st	X, r21
    1d16:	17 97       	sbiw	r26, 0x07	; 7
    1d18:	08 95       	ret
    1d1a:	2f 3f       	cpi	r18, 0xFF	; 255
    1d1c:	31 05       	cpc	r19, r1
    1d1e:	79 f4       	brne	.+30     	; 0x1d3e <__unpack_f+0xc2>
    1d20:	41 15       	cp	r20, r1
    1d22:	51 05       	cpc	r21, r1
    1d24:	61 05       	cpc	r22, r1
    1d26:	71 05       	cpc	r23, r1
    1d28:	19 f4       	brne	.+6      	; 0x1d30 <__unpack_f+0xb4>
    1d2a:	84 e0       	ldi	r24, 0x04	; 4
    1d2c:	8c 93       	st	X, r24
    1d2e:	08 95       	ret
    1d30:	64 ff       	sbrs	r22, 4
    1d32:	03 c0       	rjmp	.+6      	; 0x1d3a <__unpack_f+0xbe>
    1d34:	81 e0       	ldi	r24, 0x01	; 1
    1d36:	8c 93       	st	X, r24
    1d38:	12 c0       	rjmp	.+36     	; 0x1d5e <__unpack_f+0xe2>
    1d3a:	1c 92       	st	X, r1
    1d3c:	10 c0       	rjmp	.+32     	; 0x1d5e <__unpack_f+0xe2>
    1d3e:	2f 57       	subi	r18, 0x7F	; 127
    1d40:	30 40       	sbci	r19, 0x00	; 0
    1d42:	13 96       	adiw	r26, 0x03	; 3
    1d44:	3c 93       	st	X, r19
    1d46:	2e 93       	st	-X, r18
    1d48:	12 97       	sbiw	r26, 0x02	; 2
    1d4a:	83 e0       	ldi	r24, 0x03	; 3
    1d4c:	8c 93       	st	X, r24
    1d4e:	87 e0       	ldi	r24, 0x07	; 7
    1d50:	44 0f       	add	r20, r20
    1d52:	55 1f       	adc	r21, r21
    1d54:	66 1f       	adc	r22, r22
    1d56:	77 1f       	adc	r23, r23
    1d58:	8a 95       	dec	r24
    1d5a:	d1 f7       	brne	.-12     	; 0x1d50 <__unpack_f+0xd4>
    1d5c:	70 64       	ori	r23, 0x40	; 64
    1d5e:	14 96       	adiw	r26, 0x04	; 4
    1d60:	4d 93       	st	X+, r20
    1d62:	5d 93       	st	X+, r21
    1d64:	6d 93       	st	X+, r22
    1d66:	7c 93       	st	X, r23
    1d68:	17 97       	sbiw	r26, 0x07	; 7
    1d6a:	08 95       	ret

00001d6c <__fpcmp_parts_f>:
    1d6c:	1f 93       	push	r17
    1d6e:	dc 01       	movw	r26, r24
    1d70:	fb 01       	movw	r30, r22
    1d72:	9c 91       	ld	r25, X
    1d74:	92 30       	cpi	r25, 0x02	; 2
    1d76:	08 f4       	brcc	.+2      	; 0x1d7a <__fpcmp_parts_f+0xe>
    1d78:	47 c0       	rjmp	.+142    	; 0x1e08 <__fpcmp_parts_f+0x9c>
    1d7a:	80 81       	ld	r24, Z
    1d7c:	82 30       	cpi	r24, 0x02	; 2
    1d7e:	08 f4       	brcc	.+2      	; 0x1d82 <__fpcmp_parts_f+0x16>
    1d80:	43 c0       	rjmp	.+134    	; 0x1e08 <__fpcmp_parts_f+0x9c>
    1d82:	94 30       	cpi	r25, 0x04	; 4
    1d84:	51 f4       	brne	.+20     	; 0x1d9a <__fpcmp_parts_f+0x2e>
    1d86:	11 96       	adiw	r26, 0x01	; 1
    1d88:	1c 91       	ld	r17, X
    1d8a:	84 30       	cpi	r24, 0x04	; 4
    1d8c:	99 f5       	brne	.+102    	; 0x1df4 <__fpcmp_parts_f+0x88>
    1d8e:	81 81       	ldd	r24, Z+1	; 0x01
    1d90:	68 2f       	mov	r22, r24
    1d92:	70 e0       	ldi	r23, 0x00	; 0
    1d94:	61 1b       	sub	r22, r17
    1d96:	71 09       	sbc	r23, r1
    1d98:	3f c0       	rjmp	.+126    	; 0x1e18 <__fpcmp_parts_f+0xac>
    1d9a:	84 30       	cpi	r24, 0x04	; 4
    1d9c:	21 f0       	breq	.+8      	; 0x1da6 <__fpcmp_parts_f+0x3a>
    1d9e:	92 30       	cpi	r25, 0x02	; 2
    1da0:	31 f4       	brne	.+12     	; 0x1dae <__fpcmp_parts_f+0x42>
    1da2:	82 30       	cpi	r24, 0x02	; 2
    1da4:	b9 f1       	breq	.+110    	; 0x1e14 <__fpcmp_parts_f+0xa8>
    1da6:	81 81       	ldd	r24, Z+1	; 0x01
    1da8:	88 23       	and	r24, r24
    1daa:	89 f1       	breq	.+98     	; 0x1e0e <__fpcmp_parts_f+0xa2>
    1dac:	2d c0       	rjmp	.+90     	; 0x1e08 <__fpcmp_parts_f+0x9c>
    1dae:	11 96       	adiw	r26, 0x01	; 1
    1db0:	1c 91       	ld	r17, X
    1db2:	11 97       	sbiw	r26, 0x01	; 1
    1db4:	82 30       	cpi	r24, 0x02	; 2
    1db6:	f1 f0       	breq	.+60     	; 0x1df4 <__fpcmp_parts_f+0x88>
    1db8:	81 81       	ldd	r24, Z+1	; 0x01
    1dba:	18 17       	cp	r17, r24
    1dbc:	d9 f4       	brne	.+54     	; 0x1df4 <__fpcmp_parts_f+0x88>
    1dbe:	12 96       	adiw	r26, 0x02	; 2
    1dc0:	2d 91       	ld	r18, X+
    1dc2:	3c 91       	ld	r19, X
    1dc4:	13 97       	sbiw	r26, 0x03	; 3
    1dc6:	82 81       	ldd	r24, Z+2	; 0x02
    1dc8:	93 81       	ldd	r25, Z+3	; 0x03
    1dca:	82 17       	cp	r24, r18
    1dcc:	93 07       	cpc	r25, r19
    1dce:	94 f0       	brlt	.+36     	; 0x1df4 <__fpcmp_parts_f+0x88>
    1dd0:	28 17       	cp	r18, r24
    1dd2:	39 07       	cpc	r19, r25
    1dd4:	bc f0       	brlt	.+46     	; 0x1e04 <__fpcmp_parts_f+0x98>
    1dd6:	14 96       	adiw	r26, 0x04	; 4
    1dd8:	8d 91       	ld	r24, X+
    1dda:	9d 91       	ld	r25, X+
    1ddc:	0d 90       	ld	r0, X+
    1dde:	bc 91       	ld	r27, X
    1de0:	a0 2d       	mov	r26, r0
    1de2:	24 81       	ldd	r18, Z+4	; 0x04
    1de4:	35 81       	ldd	r19, Z+5	; 0x05
    1de6:	46 81       	ldd	r20, Z+6	; 0x06
    1de8:	57 81       	ldd	r21, Z+7	; 0x07
    1dea:	28 17       	cp	r18, r24
    1dec:	39 07       	cpc	r19, r25
    1dee:	4a 07       	cpc	r20, r26
    1df0:	5b 07       	cpc	r21, r27
    1df2:	18 f4       	brcc	.+6      	; 0x1dfa <__fpcmp_parts_f+0x8e>
    1df4:	11 23       	and	r17, r17
    1df6:	41 f0       	breq	.+16     	; 0x1e08 <__fpcmp_parts_f+0x9c>
    1df8:	0a c0       	rjmp	.+20     	; 0x1e0e <__fpcmp_parts_f+0xa2>
    1dfa:	82 17       	cp	r24, r18
    1dfc:	93 07       	cpc	r25, r19
    1dfe:	a4 07       	cpc	r26, r20
    1e00:	b5 07       	cpc	r27, r21
    1e02:	40 f4       	brcc	.+16     	; 0x1e14 <__fpcmp_parts_f+0xa8>
    1e04:	11 23       	and	r17, r17
    1e06:	19 f0       	breq	.+6      	; 0x1e0e <__fpcmp_parts_f+0xa2>
    1e08:	61 e0       	ldi	r22, 0x01	; 1
    1e0a:	70 e0       	ldi	r23, 0x00	; 0
    1e0c:	05 c0       	rjmp	.+10     	; 0x1e18 <__fpcmp_parts_f+0xac>
    1e0e:	6f ef       	ldi	r22, 0xFF	; 255
    1e10:	7f ef       	ldi	r23, 0xFF	; 255
    1e12:	02 c0       	rjmp	.+4      	; 0x1e18 <__fpcmp_parts_f+0xac>
    1e14:	60 e0       	ldi	r22, 0x00	; 0
    1e16:	70 e0       	ldi	r23, 0x00	; 0
    1e18:	cb 01       	movw	r24, r22
    1e1a:	1f 91       	pop	r17
    1e1c:	08 95       	ret

00001e1e <__divmodhi4>:
    1e1e:	97 fb       	bst	r25, 7
    1e20:	09 2e       	mov	r0, r25
    1e22:	07 26       	eor	r0, r23
    1e24:	0a d0       	rcall	.+20     	; 0x1e3a <__divmodhi4_neg1>
    1e26:	77 fd       	sbrc	r23, 7
    1e28:	04 d0       	rcall	.+8      	; 0x1e32 <__divmodhi4_neg2>
    1e2a:	0c d0       	rcall	.+24     	; 0x1e44 <__udivmodhi4>
    1e2c:	06 d0       	rcall	.+12     	; 0x1e3a <__divmodhi4_neg1>
    1e2e:	00 20       	and	r0, r0
    1e30:	1a f4       	brpl	.+6      	; 0x1e38 <__divmodhi4_exit>

00001e32 <__divmodhi4_neg2>:
    1e32:	70 95       	com	r23
    1e34:	61 95       	neg	r22
    1e36:	7f 4f       	sbci	r23, 0xFF	; 255

00001e38 <__divmodhi4_exit>:
    1e38:	08 95       	ret

00001e3a <__divmodhi4_neg1>:
    1e3a:	f6 f7       	brtc	.-4      	; 0x1e38 <__divmodhi4_exit>
    1e3c:	90 95       	com	r25
    1e3e:	81 95       	neg	r24
    1e40:	9f 4f       	sbci	r25, 0xFF	; 255
    1e42:	08 95       	ret

00001e44 <__udivmodhi4>:
    1e44:	aa 1b       	sub	r26, r26
    1e46:	bb 1b       	sub	r27, r27
    1e48:	51 e1       	ldi	r21, 0x11	; 17
    1e4a:	07 c0       	rjmp	.+14     	; 0x1e5a <__udivmodhi4_ep>

00001e4c <__udivmodhi4_loop>:
    1e4c:	aa 1f       	adc	r26, r26
    1e4e:	bb 1f       	adc	r27, r27
    1e50:	a6 17       	cp	r26, r22
    1e52:	b7 07       	cpc	r27, r23
    1e54:	10 f0       	brcs	.+4      	; 0x1e5a <__udivmodhi4_ep>
    1e56:	a6 1b       	sub	r26, r22
    1e58:	b7 0b       	sbc	r27, r23

00001e5a <__udivmodhi4_ep>:
    1e5a:	88 1f       	adc	r24, r24
    1e5c:	99 1f       	adc	r25, r25
    1e5e:	5a 95       	dec	r21
    1e60:	a9 f7       	brne	.-22     	; 0x1e4c <__udivmodhi4_loop>
    1e62:	80 95       	com	r24
    1e64:	90 95       	com	r25
    1e66:	bc 01       	movw	r22, r24
    1e68:	cd 01       	movw	r24, r26
    1e6a:	08 95       	ret

00001e6c <__prologue_saves__>:
    1e6c:	2f 92       	push	r2
    1e6e:	3f 92       	push	r3
    1e70:	4f 92       	push	r4
    1e72:	5f 92       	push	r5
    1e74:	6f 92       	push	r6
    1e76:	7f 92       	push	r7
    1e78:	8f 92       	push	r8
    1e7a:	9f 92       	push	r9
    1e7c:	af 92       	push	r10
    1e7e:	bf 92       	push	r11
    1e80:	cf 92       	push	r12
    1e82:	df 92       	push	r13
    1e84:	ef 92       	push	r14
    1e86:	ff 92       	push	r15
    1e88:	0f 93       	push	r16
    1e8a:	1f 93       	push	r17
    1e8c:	cf 93       	push	r28
    1e8e:	df 93       	push	r29
    1e90:	cd b7       	in	r28, 0x3d	; 61
    1e92:	de b7       	in	r29, 0x3e	; 62
    1e94:	ca 1b       	sub	r28, r26
    1e96:	db 0b       	sbc	r29, r27
    1e98:	0f b6       	in	r0, 0x3f	; 63
    1e9a:	f8 94       	cli
    1e9c:	de bf       	out	0x3e, r29	; 62
    1e9e:	0f be       	out	0x3f, r0	; 63
    1ea0:	cd bf       	out	0x3d, r28	; 61
    1ea2:	09 94       	ijmp

00001ea4 <__epilogue_restores__>:
    1ea4:	2a 88       	ldd	r2, Y+18	; 0x12
    1ea6:	39 88       	ldd	r3, Y+17	; 0x11
    1ea8:	48 88       	ldd	r4, Y+16	; 0x10
    1eaa:	5f 84       	ldd	r5, Y+15	; 0x0f
    1eac:	6e 84       	ldd	r6, Y+14	; 0x0e
    1eae:	7d 84       	ldd	r7, Y+13	; 0x0d
    1eb0:	8c 84       	ldd	r8, Y+12	; 0x0c
    1eb2:	9b 84       	ldd	r9, Y+11	; 0x0b
    1eb4:	aa 84       	ldd	r10, Y+10	; 0x0a
    1eb6:	b9 84       	ldd	r11, Y+9	; 0x09
    1eb8:	c8 84       	ldd	r12, Y+8	; 0x08
    1eba:	df 80       	ldd	r13, Y+7	; 0x07
    1ebc:	ee 80       	ldd	r14, Y+6	; 0x06
    1ebe:	fd 80       	ldd	r15, Y+5	; 0x05
    1ec0:	0c 81       	ldd	r16, Y+4	; 0x04
    1ec2:	1b 81       	ldd	r17, Y+3	; 0x03
    1ec4:	aa 81       	ldd	r26, Y+2	; 0x02
    1ec6:	b9 81       	ldd	r27, Y+1	; 0x01
    1ec8:	ce 0f       	add	r28, r30
    1eca:	d1 1d       	adc	r29, r1
    1ecc:	0f b6       	in	r0, 0x3f	; 63
    1ece:	f8 94       	cli
    1ed0:	de bf       	out	0x3e, r29	; 62
    1ed2:	0f be       	out	0x3f, r0	; 63
    1ed4:	cd bf       	out	0x3d, r28	; 61
    1ed6:	ed 01       	movw	r28, r26
    1ed8:	08 95       	ret

00001eda <strlen>:
    1eda:	fc 01       	movw	r30, r24
    1edc:	01 90       	ld	r0, Z+
    1ede:	00 20       	and	r0, r0
    1ee0:	e9 f7       	brne	.-6      	; 0x1edc <strlen+0x2>
    1ee2:	80 95       	com	r24
    1ee4:	90 95       	com	r25
    1ee6:	8e 0f       	add	r24, r30
    1ee8:	9f 1f       	adc	r25, r31
    1eea:	08 95       	ret

00001eec <vsprintf>:
    1eec:	ae e0       	ldi	r26, 0x0E	; 14
    1eee:	b0 e0       	ldi	r27, 0x00	; 0
    1ef0:	ec e7       	ldi	r30, 0x7C	; 124
    1ef2:	ff e0       	ldi	r31, 0x0F	; 15
    1ef4:	0c 94 44 0f 	jmp	0x1e88	; 0x1e88 <__prologue_saves__+0x1c>
    1ef8:	8c 01       	movw	r16, r24
    1efa:	86 e0       	ldi	r24, 0x06	; 6
    1efc:	8c 83       	std	Y+4, r24	; 0x04
    1efe:	1a 83       	std	Y+2, r17	; 0x02
    1f00:	09 83       	std	Y+1, r16	; 0x01
    1f02:	8f ef       	ldi	r24, 0xFF	; 255
    1f04:	9f e7       	ldi	r25, 0x7F	; 127
    1f06:	9e 83       	std	Y+6, r25	; 0x06
    1f08:	8d 83       	std	Y+5, r24	; 0x05
    1f0a:	ce 01       	movw	r24, r28
    1f0c:	01 96       	adiw	r24, 0x01	; 1
    1f0e:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <vfprintf>
    1f12:	ef 81       	ldd	r30, Y+7	; 0x07
    1f14:	f8 85       	ldd	r31, Y+8	; 0x08
    1f16:	e0 0f       	add	r30, r16
    1f18:	f1 1f       	adc	r31, r17
    1f1a:	10 82       	st	Z, r1
    1f1c:	2e 96       	adiw	r28, 0x0e	; 14
    1f1e:	e4 e0       	ldi	r30, 0x04	; 4
    1f20:	0c 94 60 0f 	jmp	0x1ec0	; 0x1ec0 <__epilogue_restores__+0x1c>

00001f24 <vfprintf>:
    1f24:	ab e0       	ldi	r26, 0x0B	; 11
    1f26:	b0 e0       	ldi	r27, 0x00	; 0
    1f28:	e8 e9       	ldi	r30, 0x98	; 152
    1f2a:	ff e0       	ldi	r31, 0x0F	; 15
    1f2c:	0c 94 36 0f 	jmp	0x1e6c	; 0x1e6c <__prologue_saves__>
    1f30:	3c 01       	movw	r6, r24
    1f32:	2b 01       	movw	r4, r22
    1f34:	5a 01       	movw	r10, r20
    1f36:	fc 01       	movw	r30, r24
    1f38:	17 82       	std	Z+7, r1	; 0x07
    1f3a:	16 82       	std	Z+6, r1	; 0x06
    1f3c:	83 81       	ldd	r24, Z+3	; 0x03
    1f3e:	81 fd       	sbrc	r24, 1
    1f40:	03 c0       	rjmp	.+6      	; 0x1f48 <vfprintf+0x24>
    1f42:	6f ef       	ldi	r22, 0xFF	; 255
    1f44:	7f ef       	ldi	r23, 0xFF	; 255
    1f46:	c6 c1       	rjmp	.+908    	; 0x22d4 <vfprintf+0x3b0>
    1f48:	9a e0       	ldi	r25, 0x0A	; 10
    1f4a:	89 2e       	mov	r8, r25
    1f4c:	1e 01       	movw	r2, r28
    1f4e:	08 94       	sec
    1f50:	21 1c       	adc	r2, r1
    1f52:	31 1c       	adc	r3, r1
    1f54:	f3 01       	movw	r30, r6
    1f56:	23 81       	ldd	r18, Z+3	; 0x03
    1f58:	f2 01       	movw	r30, r4
    1f5a:	23 fd       	sbrc	r18, 3
    1f5c:	85 91       	lpm	r24, Z+
    1f5e:	23 ff       	sbrs	r18, 3
    1f60:	81 91       	ld	r24, Z+
    1f62:	2f 01       	movw	r4, r30
    1f64:	88 23       	and	r24, r24
    1f66:	09 f4       	brne	.+2      	; 0x1f6a <vfprintf+0x46>
    1f68:	b2 c1       	rjmp	.+868    	; 0x22ce <vfprintf+0x3aa>
    1f6a:	85 32       	cpi	r24, 0x25	; 37
    1f6c:	39 f4       	brne	.+14     	; 0x1f7c <vfprintf+0x58>
    1f6e:	23 fd       	sbrc	r18, 3
    1f70:	85 91       	lpm	r24, Z+
    1f72:	23 ff       	sbrs	r18, 3
    1f74:	81 91       	ld	r24, Z+
    1f76:	2f 01       	movw	r4, r30
    1f78:	85 32       	cpi	r24, 0x25	; 37
    1f7a:	29 f4       	brne	.+10     	; 0x1f86 <vfprintf+0x62>
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	b3 01       	movw	r22, r6
    1f80:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    1f84:	e7 cf       	rjmp	.-50     	; 0x1f54 <vfprintf+0x30>
    1f86:	98 2f       	mov	r25, r24
    1f88:	ff 24       	eor	r15, r15
    1f8a:	ee 24       	eor	r14, r14
    1f8c:	99 24       	eor	r9, r9
    1f8e:	ff e1       	ldi	r31, 0x1F	; 31
    1f90:	ff 15       	cp	r31, r15
    1f92:	d0 f0       	brcs	.+52     	; 0x1fc8 <vfprintf+0xa4>
    1f94:	9b 32       	cpi	r25, 0x2B	; 43
    1f96:	69 f0       	breq	.+26     	; 0x1fb2 <vfprintf+0x8e>
    1f98:	9c 32       	cpi	r25, 0x2C	; 44
    1f9a:	28 f4       	brcc	.+10     	; 0x1fa6 <vfprintf+0x82>
    1f9c:	90 32       	cpi	r25, 0x20	; 32
    1f9e:	59 f0       	breq	.+22     	; 0x1fb6 <vfprintf+0x92>
    1fa0:	93 32       	cpi	r25, 0x23	; 35
    1fa2:	91 f4       	brne	.+36     	; 0x1fc8 <vfprintf+0xa4>
    1fa4:	0e c0       	rjmp	.+28     	; 0x1fc2 <vfprintf+0x9e>
    1fa6:	9d 32       	cpi	r25, 0x2D	; 45
    1fa8:	49 f0       	breq	.+18     	; 0x1fbc <vfprintf+0x98>
    1faa:	90 33       	cpi	r25, 0x30	; 48
    1fac:	69 f4       	brne	.+26     	; 0x1fc8 <vfprintf+0xa4>
    1fae:	41 e0       	ldi	r20, 0x01	; 1
    1fb0:	24 c0       	rjmp	.+72     	; 0x1ffa <vfprintf+0xd6>
    1fb2:	52 e0       	ldi	r21, 0x02	; 2
    1fb4:	f5 2a       	or	r15, r21
    1fb6:	84 e0       	ldi	r24, 0x04	; 4
    1fb8:	f8 2a       	or	r15, r24
    1fba:	28 c0       	rjmp	.+80     	; 0x200c <vfprintf+0xe8>
    1fbc:	98 e0       	ldi	r25, 0x08	; 8
    1fbe:	f9 2a       	or	r15, r25
    1fc0:	25 c0       	rjmp	.+74     	; 0x200c <vfprintf+0xe8>
    1fc2:	e0 e1       	ldi	r30, 0x10	; 16
    1fc4:	fe 2a       	or	r15, r30
    1fc6:	22 c0       	rjmp	.+68     	; 0x200c <vfprintf+0xe8>
    1fc8:	f7 fc       	sbrc	r15, 7
    1fca:	29 c0       	rjmp	.+82     	; 0x201e <vfprintf+0xfa>
    1fcc:	89 2f       	mov	r24, r25
    1fce:	80 53       	subi	r24, 0x30	; 48
    1fd0:	8a 30       	cpi	r24, 0x0A	; 10
    1fd2:	70 f4       	brcc	.+28     	; 0x1ff0 <vfprintf+0xcc>
    1fd4:	f6 fe       	sbrs	r15, 6
    1fd6:	05 c0       	rjmp	.+10     	; 0x1fe2 <vfprintf+0xbe>
    1fd8:	98 9c       	mul	r9, r8
    1fda:	90 2c       	mov	r9, r0
    1fdc:	11 24       	eor	r1, r1
    1fde:	98 0e       	add	r9, r24
    1fe0:	15 c0       	rjmp	.+42     	; 0x200c <vfprintf+0xe8>
    1fe2:	e8 9c       	mul	r14, r8
    1fe4:	e0 2c       	mov	r14, r0
    1fe6:	11 24       	eor	r1, r1
    1fe8:	e8 0e       	add	r14, r24
    1fea:	f0 e2       	ldi	r31, 0x20	; 32
    1fec:	ff 2a       	or	r15, r31
    1fee:	0e c0       	rjmp	.+28     	; 0x200c <vfprintf+0xe8>
    1ff0:	9e 32       	cpi	r25, 0x2E	; 46
    1ff2:	29 f4       	brne	.+10     	; 0x1ffe <vfprintf+0xda>
    1ff4:	f6 fc       	sbrc	r15, 6
    1ff6:	6b c1       	rjmp	.+726    	; 0x22ce <vfprintf+0x3aa>
    1ff8:	40 e4       	ldi	r20, 0x40	; 64
    1ffa:	f4 2a       	or	r15, r20
    1ffc:	07 c0       	rjmp	.+14     	; 0x200c <vfprintf+0xe8>
    1ffe:	9c 36       	cpi	r25, 0x6C	; 108
    2000:	19 f4       	brne	.+6      	; 0x2008 <vfprintf+0xe4>
    2002:	50 e8       	ldi	r21, 0x80	; 128
    2004:	f5 2a       	or	r15, r21
    2006:	02 c0       	rjmp	.+4      	; 0x200c <vfprintf+0xe8>
    2008:	98 36       	cpi	r25, 0x68	; 104
    200a:	49 f4       	brne	.+18     	; 0x201e <vfprintf+0xfa>
    200c:	f2 01       	movw	r30, r4
    200e:	23 fd       	sbrc	r18, 3
    2010:	95 91       	lpm	r25, Z+
    2012:	23 ff       	sbrs	r18, 3
    2014:	91 91       	ld	r25, Z+
    2016:	2f 01       	movw	r4, r30
    2018:	99 23       	and	r25, r25
    201a:	09 f0       	breq	.+2      	; 0x201e <vfprintf+0xfa>
    201c:	b8 cf       	rjmp	.-144    	; 0x1f8e <vfprintf+0x6a>
    201e:	89 2f       	mov	r24, r25
    2020:	85 54       	subi	r24, 0x45	; 69
    2022:	83 30       	cpi	r24, 0x03	; 3
    2024:	18 f0       	brcs	.+6      	; 0x202c <vfprintf+0x108>
    2026:	80 52       	subi	r24, 0x20	; 32
    2028:	83 30       	cpi	r24, 0x03	; 3
    202a:	38 f4       	brcc	.+14     	; 0x203a <vfprintf+0x116>
    202c:	44 e0       	ldi	r20, 0x04	; 4
    202e:	50 e0       	ldi	r21, 0x00	; 0
    2030:	a4 0e       	add	r10, r20
    2032:	b5 1e       	adc	r11, r21
    2034:	5f e3       	ldi	r21, 0x3F	; 63
    2036:	59 83       	std	Y+1, r21	; 0x01
    2038:	0f c0       	rjmp	.+30     	; 0x2058 <vfprintf+0x134>
    203a:	93 36       	cpi	r25, 0x63	; 99
    203c:	31 f0       	breq	.+12     	; 0x204a <vfprintf+0x126>
    203e:	93 37       	cpi	r25, 0x73	; 115
    2040:	79 f0       	breq	.+30     	; 0x2060 <vfprintf+0x13c>
    2042:	93 35       	cpi	r25, 0x53	; 83
    2044:	09 f0       	breq	.+2      	; 0x2048 <vfprintf+0x124>
    2046:	56 c0       	rjmp	.+172    	; 0x20f4 <vfprintf+0x1d0>
    2048:	20 c0       	rjmp	.+64     	; 0x208a <vfprintf+0x166>
    204a:	f5 01       	movw	r30, r10
    204c:	80 81       	ld	r24, Z
    204e:	89 83       	std	Y+1, r24	; 0x01
    2050:	42 e0       	ldi	r20, 0x02	; 2
    2052:	50 e0       	ldi	r21, 0x00	; 0
    2054:	a4 0e       	add	r10, r20
    2056:	b5 1e       	adc	r11, r21
    2058:	61 01       	movw	r12, r2
    205a:	01 e0       	ldi	r16, 0x01	; 1
    205c:	10 e0       	ldi	r17, 0x00	; 0
    205e:	12 c0       	rjmp	.+36     	; 0x2084 <vfprintf+0x160>
    2060:	f5 01       	movw	r30, r10
    2062:	c0 80       	ld	r12, Z
    2064:	d1 80       	ldd	r13, Z+1	; 0x01
    2066:	f6 fc       	sbrc	r15, 6
    2068:	03 c0       	rjmp	.+6      	; 0x2070 <vfprintf+0x14c>
    206a:	6f ef       	ldi	r22, 0xFF	; 255
    206c:	7f ef       	ldi	r23, 0xFF	; 255
    206e:	02 c0       	rjmp	.+4      	; 0x2074 <vfprintf+0x150>
    2070:	69 2d       	mov	r22, r9
    2072:	70 e0       	ldi	r23, 0x00	; 0
    2074:	42 e0       	ldi	r20, 0x02	; 2
    2076:	50 e0       	ldi	r21, 0x00	; 0
    2078:	a4 0e       	add	r10, r20
    207a:	b5 1e       	adc	r11, r21
    207c:	c6 01       	movw	r24, r12
    207e:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <strnlen>
    2082:	8c 01       	movw	r16, r24
    2084:	5f e7       	ldi	r21, 0x7F	; 127
    2086:	f5 22       	and	r15, r21
    2088:	14 c0       	rjmp	.+40     	; 0x20b2 <vfprintf+0x18e>
    208a:	f5 01       	movw	r30, r10
    208c:	c0 80       	ld	r12, Z
    208e:	d1 80       	ldd	r13, Z+1	; 0x01
    2090:	f6 fc       	sbrc	r15, 6
    2092:	03 c0       	rjmp	.+6      	; 0x209a <vfprintf+0x176>
    2094:	6f ef       	ldi	r22, 0xFF	; 255
    2096:	7f ef       	ldi	r23, 0xFF	; 255
    2098:	02 c0       	rjmp	.+4      	; 0x209e <vfprintf+0x17a>
    209a:	69 2d       	mov	r22, r9
    209c:	70 e0       	ldi	r23, 0x00	; 0
    209e:	42 e0       	ldi	r20, 0x02	; 2
    20a0:	50 e0       	ldi	r21, 0x00	; 0
    20a2:	a4 0e       	add	r10, r20
    20a4:	b5 1e       	adc	r11, r21
    20a6:	c6 01       	movw	r24, r12
    20a8:	0e 94 6f 11 	call	0x22de	; 0x22de <strnlen_P>
    20ac:	8c 01       	movw	r16, r24
    20ae:	50 e8       	ldi	r21, 0x80	; 128
    20b0:	f5 2a       	or	r15, r21
    20b2:	f3 fe       	sbrs	r15, 3
    20b4:	07 c0       	rjmp	.+14     	; 0x20c4 <vfprintf+0x1a0>
    20b6:	1a c0       	rjmp	.+52     	; 0x20ec <vfprintf+0x1c8>
    20b8:	80 e2       	ldi	r24, 0x20	; 32
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	b3 01       	movw	r22, r6
    20be:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    20c2:	ea 94       	dec	r14
    20c4:	8e 2d       	mov	r24, r14
    20c6:	90 e0       	ldi	r25, 0x00	; 0
    20c8:	08 17       	cp	r16, r24
    20ca:	19 07       	cpc	r17, r25
    20cc:	a8 f3       	brcs	.-22     	; 0x20b8 <vfprintf+0x194>
    20ce:	0e c0       	rjmp	.+28     	; 0x20ec <vfprintf+0x1c8>
    20d0:	f6 01       	movw	r30, r12
    20d2:	f7 fc       	sbrc	r15, 7
    20d4:	85 91       	lpm	r24, Z+
    20d6:	f7 fe       	sbrs	r15, 7
    20d8:	81 91       	ld	r24, Z+
    20da:	6f 01       	movw	r12, r30
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	b3 01       	movw	r22, r6
    20e0:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    20e4:	e1 10       	cpse	r14, r1
    20e6:	ea 94       	dec	r14
    20e8:	01 50       	subi	r16, 0x01	; 1
    20ea:	10 40       	sbci	r17, 0x00	; 0
    20ec:	01 15       	cp	r16, r1
    20ee:	11 05       	cpc	r17, r1
    20f0:	79 f7       	brne	.-34     	; 0x20d0 <vfprintf+0x1ac>
    20f2:	ea c0       	rjmp	.+468    	; 0x22c8 <vfprintf+0x3a4>
    20f4:	94 36       	cpi	r25, 0x64	; 100
    20f6:	11 f0       	breq	.+4      	; 0x20fc <vfprintf+0x1d8>
    20f8:	99 36       	cpi	r25, 0x69	; 105
    20fa:	69 f5       	brne	.+90     	; 0x2156 <vfprintf+0x232>
    20fc:	f7 fe       	sbrs	r15, 7
    20fe:	08 c0       	rjmp	.+16     	; 0x2110 <vfprintf+0x1ec>
    2100:	f5 01       	movw	r30, r10
    2102:	20 81       	ld	r18, Z
    2104:	31 81       	ldd	r19, Z+1	; 0x01
    2106:	42 81       	ldd	r20, Z+2	; 0x02
    2108:	53 81       	ldd	r21, Z+3	; 0x03
    210a:	84 e0       	ldi	r24, 0x04	; 4
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	0a c0       	rjmp	.+20     	; 0x2124 <vfprintf+0x200>
    2110:	f5 01       	movw	r30, r10
    2112:	80 81       	ld	r24, Z
    2114:	91 81       	ldd	r25, Z+1	; 0x01
    2116:	9c 01       	movw	r18, r24
    2118:	44 27       	eor	r20, r20
    211a:	37 fd       	sbrc	r19, 7
    211c:	40 95       	com	r20
    211e:	54 2f       	mov	r21, r20
    2120:	82 e0       	ldi	r24, 0x02	; 2
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	a8 0e       	add	r10, r24
    2126:	b9 1e       	adc	r11, r25
    2128:	9f e6       	ldi	r25, 0x6F	; 111
    212a:	f9 22       	and	r15, r25
    212c:	57 ff       	sbrs	r21, 7
    212e:	09 c0       	rjmp	.+18     	; 0x2142 <vfprintf+0x21e>
    2130:	50 95       	com	r21
    2132:	40 95       	com	r20
    2134:	30 95       	com	r19
    2136:	21 95       	neg	r18
    2138:	3f 4f       	sbci	r19, 0xFF	; 255
    213a:	4f 4f       	sbci	r20, 0xFF	; 255
    213c:	5f 4f       	sbci	r21, 0xFF	; 255
    213e:	e0 e8       	ldi	r30, 0x80	; 128
    2140:	fe 2a       	or	r15, r30
    2142:	ca 01       	movw	r24, r20
    2144:	b9 01       	movw	r22, r18
    2146:	a1 01       	movw	r20, r2
    2148:	2a e0       	ldi	r18, 0x0A	; 10
    214a:	30 e0       	ldi	r19, 0x00	; 0
    214c:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ultoa_invert>
    2150:	d8 2e       	mov	r13, r24
    2152:	d2 18       	sub	r13, r2
    2154:	40 c0       	rjmp	.+128    	; 0x21d6 <vfprintf+0x2b2>
    2156:	95 37       	cpi	r25, 0x75	; 117
    2158:	29 f4       	brne	.+10     	; 0x2164 <vfprintf+0x240>
    215a:	1f 2d       	mov	r17, r15
    215c:	1f 7e       	andi	r17, 0xEF	; 239
    215e:	2a e0       	ldi	r18, 0x0A	; 10
    2160:	30 e0       	ldi	r19, 0x00	; 0
    2162:	1d c0       	rjmp	.+58     	; 0x219e <vfprintf+0x27a>
    2164:	1f 2d       	mov	r17, r15
    2166:	19 7f       	andi	r17, 0xF9	; 249
    2168:	9f 36       	cpi	r25, 0x6F	; 111
    216a:	61 f0       	breq	.+24     	; 0x2184 <vfprintf+0x260>
    216c:	90 37       	cpi	r25, 0x70	; 112
    216e:	20 f4       	brcc	.+8      	; 0x2178 <vfprintf+0x254>
    2170:	98 35       	cpi	r25, 0x58	; 88
    2172:	09 f0       	breq	.+2      	; 0x2176 <vfprintf+0x252>
    2174:	ac c0       	rjmp	.+344    	; 0x22ce <vfprintf+0x3aa>
    2176:	0f c0       	rjmp	.+30     	; 0x2196 <vfprintf+0x272>
    2178:	90 37       	cpi	r25, 0x70	; 112
    217a:	39 f0       	breq	.+14     	; 0x218a <vfprintf+0x266>
    217c:	98 37       	cpi	r25, 0x78	; 120
    217e:	09 f0       	breq	.+2      	; 0x2182 <vfprintf+0x25e>
    2180:	a6 c0       	rjmp	.+332    	; 0x22ce <vfprintf+0x3aa>
    2182:	04 c0       	rjmp	.+8      	; 0x218c <vfprintf+0x268>
    2184:	28 e0       	ldi	r18, 0x08	; 8
    2186:	30 e0       	ldi	r19, 0x00	; 0
    2188:	0a c0       	rjmp	.+20     	; 0x219e <vfprintf+0x27a>
    218a:	10 61       	ori	r17, 0x10	; 16
    218c:	14 fd       	sbrc	r17, 4
    218e:	14 60       	ori	r17, 0x04	; 4
    2190:	20 e1       	ldi	r18, 0x10	; 16
    2192:	30 e0       	ldi	r19, 0x00	; 0
    2194:	04 c0       	rjmp	.+8      	; 0x219e <vfprintf+0x27a>
    2196:	14 fd       	sbrc	r17, 4
    2198:	16 60       	ori	r17, 0x06	; 6
    219a:	20 e1       	ldi	r18, 0x10	; 16
    219c:	32 e0       	ldi	r19, 0x02	; 2
    219e:	17 ff       	sbrs	r17, 7
    21a0:	08 c0       	rjmp	.+16     	; 0x21b2 <vfprintf+0x28e>
    21a2:	f5 01       	movw	r30, r10
    21a4:	60 81       	ld	r22, Z
    21a6:	71 81       	ldd	r23, Z+1	; 0x01
    21a8:	82 81       	ldd	r24, Z+2	; 0x02
    21aa:	93 81       	ldd	r25, Z+3	; 0x03
    21ac:	44 e0       	ldi	r20, 0x04	; 4
    21ae:	50 e0       	ldi	r21, 0x00	; 0
    21b0:	08 c0       	rjmp	.+16     	; 0x21c2 <vfprintf+0x29e>
    21b2:	f5 01       	movw	r30, r10
    21b4:	80 81       	ld	r24, Z
    21b6:	91 81       	ldd	r25, Z+1	; 0x01
    21b8:	bc 01       	movw	r22, r24
    21ba:	80 e0       	ldi	r24, 0x00	; 0
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	42 e0       	ldi	r20, 0x02	; 2
    21c0:	50 e0       	ldi	r21, 0x00	; 0
    21c2:	a4 0e       	add	r10, r20
    21c4:	b5 1e       	adc	r11, r21
    21c6:	a1 01       	movw	r20, r2
    21c8:	0e 94 b1 11 	call	0x2362	; 0x2362 <__ultoa_invert>
    21cc:	d8 2e       	mov	r13, r24
    21ce:	d2 18       	sub	r13, r2
    21d0:	8f e7       	ldi	r24, 0x7F	; 127
    21d2:	f8 2e       	mov	r15, r24
    21d4:	f1 22       	and	r15, r17
    21d6:	f6 fe       	sbrs	r15, 6
    21d8:	0b c0       	rjmp	.+22     	; 0x21f0 <vfprintf+0x2cc>
    21da:	5e ef       	ldi	r21, 0xFE	; 254
    21dc:	f5 22       	and	r15, r21
    21de:	d9 14       	cp	r13, r9
    21e0:	38 f4       	brcc	.+14     	; 0x21f0 <vfprintf+0x2cc>
    21e2:	f4 fe       	sbrs	r15, 4
    21e4:	07 c0       	rjmp	.+14     	; 0x21f4 <vfprintf+0x2d0>
    21e6:	f2 fc       	sbrc	r15, 2
    21e8:	05 c0       	rjmp	.+10     	; 0x21f4 <vfprintf+0x2d0>
    21ea:	8f ee       	ldi	r24, 0xEF	; 239
    21ec:	f8 22       	and	r15, r24
    21ee:	02 c0       	rjmp	.+4      	; 0x21f4 <vfprintf+0x2d0>
    21f0:	1d 2d       	mov	r17, r13
    21f2:	01 c0       	rjmp	.+2      	; 0x21f6 <vfprintf+0x2d2>
    21f4:	19 2d       	mov	r17, r9
    21f6:	f4 fe       	sbrs	r15, 4
    21f8:	0d c0       	rjmp	.+26     	; 0x2214 <vfprintf+0x2f0>
    21fa:	fe 01       	movw	r30, r28
    21fc:	ed 0d       	add	r30, r13
    21fe:	f1 1d       	adc	r31, r1
    2200:	80 81       	ld	r24, Z
    2202:	80 33       	cpi	r24, 0x30	; 48
    2204:	19 f4       	brne	.+6      	; 0x220c <vfprintf+0x2e8>
    2206:	99 ee       	ldi	r25, 0xE9	; 233
    2208:	f9 22       	and	r15, r25
    220a:	08 c0       	rjmp	.+16     	; 0x221c <vfprintf+0x2f8>
    220c:	1f 5f       	subi	r17, 0xFF	; 255
    220e:	f2 fe       	sbrs	r15, 2
    2210:	05 c0       	rjmp	.+10     	; 0x221c <vfprintf+0x2f8>
    2212:	03 c0       	rjmp	.+6      	; 0x221a <vfprintf+0x2f6>
    2214:	8f 2d       	mov	r24, r15
    2216:	86 78       	andi	r24, 0x86	; 134
    2218:	09 f0       	breq	.+2      	; 0x221c <vfprintf+0x2f8>
    221a:	1f 5f       	subi	r17, 0xFF	; 255
    221c:	0f 2d       	mov	r16, r15
    221e:	f3 fc       	sbrc	r15, 3
    2220:	14 c0       	rjmp	.+40     	; 0x224a <vfprintf+0x326>
    2222:	f0 fe       	sbrs	r15, 0
    2224:	0f c0       	rjmp	.+30     	; 0x2244 <vfprintf+0x320>
    2226:	1e 15       	cp	r17, r14
    2228:	10 f0       	brcs	.+4      	; 0x222e <vfprintf+0x30a>
    222a:	9d 2c       	mov	r9, r13
    222c:	0b c0       	rjmp	.+22     	; 0x2244 <vfprintf+0x320>
    222e:	9d 2c       	mov	r9, r13
    2230:	9e 0c       	add	r9, r14
    2232:	91 1a       	sub	r9, r17
    2234:	1e 2d       	mov	r17, r14
    2236:	06 c0       	rjmp	.+12     	; 0x2244 <vfprintf+0x320>
    2238:	80 e2       	ldi	r24, 0x20	; 32
    223a:	90 e0       	ldi	r25, 0x00	; 0
    223c:	b3 01       	movw	r22, r6
    223e:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    2242:	1f 5f       	subi	r17, 0xFF	; 255
    2244:	1e 15       	cp	r17, r14
    2246:	c0 f3       	brcs	.-16     	; 0x2238 <vfprintf+0x314>
    2248:	04 c0       	rjmp	.+8      	; 0x2252 <vfprintf+0x32e>
    224a:	1e 15       	cp	r17, r14
    224c:	10 f4       	brcc	.+4      	; 0x2252 <vfprintf+0x32e>
    224e:	e1 1a       	sub	r14, r17
    2250:	01 c0       	rjmp	.+2      	; 0x2254 <vfprintf+0x330>
    2252:	ee 24       	eor	r14, r14
    2254:	04 ff       	sbrs	r16, 4
    2256:	0f c0       	rjmp	.+30     	; 0x2276 <vfprintf+0x352>
    2258:	80 e3       	ldi	r24, 0x30	; 48
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	b3 01       	movw	r22, r6
    225e:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    2262:	02 ff       	sbrs	r16, 2
    2264:	1d c0       	rjmp	.+58     	; 0x22a0 <vfprintf+0x37c>
    2266:	01 fd       	sbrc	r16, 1
    2268:	03 c0       	rjmp	.+6      	; 0x2270 <vfprintf+0x34c>
    226a:	88 e7       	ldi	r24, 0x78	; 120
    226c:	90 e0       	ldi	r25, 0x00	; 0
    226e:	0e c0       	rjmp	.+28     	; 0x228c <vfprintf+0x368>
    2270:	88 e5       	ldi	r24, 0x58	; 88
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	0b c0       	rjmp	.+22     	; 0x228c <vfprintf+0x368>
    2276:	80 2f       	mov	r24, r16
    2278:	86 78       	andi	r24, 0x86	; 134
    227a:	91 f0       	breq	.+36     	; 0x22a0 <vfprintf+0x37c>
    227c:	01 ff       	sbrs	r16, 1
    227e:	02 c0       	rjmp	.+4      	; 0x2284 <vfprintf+0x360>
    2280:	8b e2       	ldi	r24, 0x2B	; 43
    2282:	01 c0       	rjmp	.+2      	; 0x2286 <vfprintf+0x362>
    2284:	80 e2       	ldi	r24, 0x20	; 32
    2286:	f7 fc       	sbrc	r15, 7
    2288:	8d e2       	ldi	r24, 0x2D	; 45
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	b3 01       	movw	r22, r6
    228e:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    2292:	06 c0       	rjmp	.+12     	; 0x22a0 <vfprintf+0x37c>
    2294:	80 e3       	ldi	r24, 0x30	; 48
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	b3 01       	movw	r22, r6
    229a:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    229e:	9a 94       	dec	r9
    22a0:	d9 14       	cp	r13, r9
    22a2:	c0 f3       	brcs	.-16     	; 0x2294 <vfprintf+0x370>
    22a4:	da 94       	dec	r13
    22a6:	f1 01       	movw	r30, r2
    22a8:	ed 0d       	add	r30, r13
    22aa:	f1 1d       	adc	r31, r1
    22ac:	80 81       	ld	r24, Z
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	b3 01       	movw	r22, r6
    22b2:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    22b6:	dd 20       	and	r13, r13
    22b8:	a9 f7       	brne	.-22     	; 0x22a4 <vfprintf+0x380>
    22ba:	06 c0       	rjmp	.+12     	; 0x22c8 <vfprintf+0x3a4>
    22bc:	80 e2       	ldi	r24, 0x20	; 32
    22be:	90 e0       	ldi	r25, 0x00	; 0
    22c0:	b3 01       	movw	r22, r6
    22c2:	0e 94 85 11 	call	0x230a	; 0x230a <fputc>
    22c6:	ea 94       	dec	r14
    22c8:	ee 20       	and	r14, r14
    22ca:	c1 f7       	brne	.-16     	; 0x22bc <vfprintf+0x398>
    22cc:	43 ce       	rjmp	.-890    	; 0x1f54 <vfprintf+0x30>
    22ce:	f3 01       	movw	r30, r6
    22d0:	66 81       	ldd	r22, Z+6	; 0x06
    22d2:	77 81       	ldd	r23, Z+7	; 0x07
    22d4:	cb 01       	movw	r24, r22
    22d6:	2b 96       	adiw	r28, 0x0b	; 11
    22d8:	e2 e1       	ldi	r30, 0x12	; 18
    22da:	0c 94 52 0f 	jmp	0x1ea4	; 0x1ea4 <__epilogue_restores__>

000022de <strnlen_P>:
    22de:	fc 01       	movw	r30, r24
    22e0:	05 90       	lpm	r0, Z+
    22e2:	61 50       	subi	r22, 0x01	; 1
    22e4:	70 40       	sbci	r23, 0x00	; 0
    22e6:	01 10       	cpse	r0, r1
    22e8:	d8 f7       	brcc	.-10     	; 0x22e0 <strnlen_P+0x2>
    22ea:	80 95       	com	r24
    22ec:	90 95       	com	r25
    22ee:	8e 0f       	add	r24, r30
    22f0:	9f 1f       	adc	r25, r31
    22f2:	08 95       	ret

000022f4 <strnlen>:
    22f4:	fc 01       	movw	r30, r24
    22f6:	61 50       	subi	r22, 0x01	; 1
    22f8:	70 40       	sbci	r23, 0x00	; 0
    22fa:	01 90       	ld	r0, Z+
    22fc:	01 10       	cpse	r0, r1
    22fe:	d8 f7       	brcc	.-10     	; 0x22f6 <strnlen+0x2>
    2300:	80 95       	com	r24
    2302:	90 95       	com	r25
    2304:	8e 0f       	add	r24, r30
    2306:	9f 1f       	adc	r25, r31
    2308:	08 95       	ret

0000230a <fputc>:
    230a:	0f 93       	push	r16
    230c:	1f 93       	push	r17
    230e:	cf 93       	push	r28
    2310:	df 93       	push	r29
    2312:	8c 01       	movw	r16, r24
    2314:	eb 01       	movw	r28, r22
    2316:	8b 81       	ldd	r24, Y+3	; 0x03
    2318:	81 ff       	sbrs	r24, 1
    231a:	1b c0       	rjmp	.+54     	; 0x2352 <fputc+0x48>
    231c:	82 ff       	sbrs	r24, 2
    231e:	0d c0       	rjmp	.+26     	; 0x233a <fputc+0x30>
    2320:	2e 81       	ldd	r18, Y+6	; 0x06
    2322:	3f 81       	ldd	r19, Y+7	; 0x07
    2324:	8c 81       	ldd	r24, Y+4	; 0x04
    2326:	9d 81       	ldd	r25, Y+5	; 0x05
    2328:	28 17       	cp	r18, r24
    232a:	39 07       	cpc	r19, r25
    232c:	64 f4       	brge	.+24     	; 0x2346 <fputc+0x3c>
    232e:	e8 81       	ld	r30, Y
    2330:	f9 81       	ldd	r31, Y+1	; 0x01
    2332:	01 93       	st	Z+, r16
    2334:	f9 83       	std	Y+1, r31	; 0x01
    2336:	e8 83       	st	Y, r30
    2338:	06 c0       	rjmp	.+12     	; 0x2346 <fputc+0x3c>
    233a:	e8 85       	ldd	r30, Y+8	; 0x08
    233c:	f9 85       	ldd	r31, Y+9	; 0x09
    233e:	80 2f       	mov	r24, r16
    2340:	09 95       	icall
    2342:	89 2b       	or	r24, r25
    2344:	31 f4       	brne	.+12     	; 0x2352 <fputc+0x48>
    2346:	8e 81       	ldd	r24, Y+6	; 0x06
    2348:	9f 81       	ldd	r25, Y+7	; 0x07
    234a:	01 96       	adiw	r24, 0x01	; 1
    234c:	9f 83       	std	Y+7, r25	; 0x07
    234e:	8e 83       	std	Y+6, r24	; 0x06
    2350:	02 c0       	rjmp	.+4      	; 0x2356 <fputc+0x4c>
    2352:	0f ef       	ldi	r16, 0xFF	; 255
    2354:	1f ef       	ldi	r17, 0xFF	; 255
    2356:	c8 01       	movw	r24, r16
    2358:	df 91       	pop	r29
    235a:	cf 91       	pop	r28
    235c:	1f 91       	pop	r17
    235e:	0f 91       	pop	r16
    2360:	08 95       	ret

00002362 <__ultoa_invert>:
    2362:	fa 01       	movw	r30, r20
    2364:	aa 27       	eor	r26, r26
    2366:	28 30       	cpi	r18, 0x08	; 8
    2368:	51 f1       	breq	.+84     	; 0x23be <__ultoa_invert+0x5c>
    236a:	20 31       	cpi	r18, 0x10	; 16
    236c:	81 f1       	breq	.+96     	; 0x23ce <__ultoa_invert+0x6c>
    236e:	e8 94       	clt
    2370:	6f 93       	push	r22
    2372:	6e 7f       	andi	r22, 0xFE	; 254
    2374:	6e 5f       	subi	r22, 0xFE	; 254
    2376:	7f 4f       	sbci	r23, 0xFF	; 255
    2378:	8f 4f       	sbci	r24, 0xFF	; 255
    237a:	9f 4f       	sbci	r25, 0xFF	; 255
    237c:	af 4f       	sbci	r26, 0xFF	; 255
    237e:	b1 e0       	ldi	r27, 0x01	; 1
    2380:	3e d0       	rcall	.+124    	; 0x23fe <__ultoa_invert+0x9c>
    2382:	b4 e0       	ldi	r27, 0x04	; 4
    2384:	3c d0       	rcall	.+120    	; 0x23fe <__ultoa_invert+0x9c>
    2386:	67 0f       	add	r22, r23
    2388:	78 1f       	adc	r23, r24
    238a:	89 1f       	adc	r24, r25
    238c:	9a 1f       	adc	r25, r26
    238e:	a1 1d       	adc	r26, r1
    2390:	68 0f       	add	r22, r24
    2392:	79 1f       	adc	r23, r25
    2394:	8a 1f       	adc	r24, r26
    2396:	91 1d       	adc	r25, r1
    2398:	a1 1d       	adc	r26, r1
    239a:	6a 0f       	add	r22, r26
    239c:	71 1d       	adc	r23, r1
    239e:	81 1d       	adc	r24, r1
    23a0:	91 1d       	adc	r25, r1
    23a2:	a1 1d       	adc	r26, r1
    23a4:	20 d0       	rcall	.+64     	; 0x23e6 <__ultoa_invert+0x84>
    23a6:	09 f4       	brne	.+2      	; 0x23aa <__ultoa_invert+0x48>
    23a8:	68 94       	set
    23aa:	3f 91       	pop	r19
    23ac:	2a e0       	ldi	r18, 0x0A	; 10
    23ae:	26 9f       	mul	r18, r22
    23b0:	11 24       	eor	r1, r1
    23b2:	30 19       	sub	r19, r0
    23b4:	30 5d       	subi	r19, 0xD0	; 208
    23b6:	31 93       	st	Z+, r19
    23b8:	de f6       	brtc	.-74     	; 0x2370 <__ultoa_invert+0xe>
    23ba:	cf 01       	movw	r24, r30
    23bc:	08 95       	ret
    23be:	46 2f       	mov	r20, r22
    23c0:	47 70       	andi	r20, 0x07	; 7
    23c2:	40 5d       	subi	r20, 0xD0	; 208
    23c4:	41 93       	st	Z+, r20
    23c6:	b3 e0       	ldi	r27, 0x03	; 3
    23c8:	0f d0       	rcall	.+30     	; 0x23e8 <__ultoa_invert+0x86>
    23ca:	c9 f7       	brne	.-14     	; 0x23be <__ultoa_invert+0x5c>
    23cc:	f6 cf       	rjmp	.-20     	; 0x23ba <__ultoa_invert+0x58>
    23ce:	46 2f       	mov	r20, r22
    23d0:	4f 70       	andi	r20, 0x0F	; 15
    23d2:	40 5d       	subi	r20, 0xD0	; 208
    23d4:	4a 33       	cpi	r20, 0x3A	; 58
    23d6:	18 f0       	brcs	.+6      	; 0x23de <__ultoa_invert+0x7c>
    23d8:	49 5d       	subi	r20, 0xD9	; 217
    23da:	31 fd       	sbrc	r19, 1
    23dc:	40 52       	subi	r20, 0x20	; 32
    23de:	41 93       	st	Z+, r20
    23e0:	02 d0       	rcall	.+4      	; 0x23e6 <__ultoa_invert+0x84>
    23e2:	a9 f7       	brne	.-22     	; 0x23ce <__ultoa_invert+0x6c>
    23e4:	ea cf       	rjmp	.-44     	; 0x23ba <__ultoa_invert+0x58>
    23e6:	b4 e0       	ldi	r27, 0x04	; 4
    23e8:	a6 95       	lsr	r26
    23ea:	97 95       	ror	r25
    23ec:	87 95       	ror	r24
    23ee:	77 95       	ror	r23
    23f0:	67 95       	ror	r22
    23f2:	ba 95       	dec	r27
    23f4:	c9 f7       	brne	.-14     	; 0x23e8 <__ultoa_invert+0x86>
    23f6:	00 97       	sbiw	r24, 0x00	; 0
    23f8:	61 05       	cpc	r22, r1
    23fa:	71 05       	cpc	r23, r1
    23fc:	08 95       	ret
    23fe:	9b 01       	movw	r18, r22
    2400:	ac 01       	movw	r20, r24
    2402:	0a 2e       	mov	r0, r26
    2404:	06 94       	lsr	r0
    2406:	57 95       	ror	r21
    2408:	47 95       	ror	r20
    240a:	37 95       	ror	r19
    240c:	27 95       	ror	r18
    240e:	ba 95       	dec	r27
    2410:	c9 f7       	brne	.-14     	; 0x2404 <__ultoa_invert+0xa2>
    2412:	62 0f       	add	r22, r18
    2414:	73 1f       	adc	r23, r19
    2416:	84 1f       	adc	r24, r20
    2418:	95 1f       	adc	r25, r21
    241a:	a0 1d       	adc	r26, r0
    241c:	08 95       	ret

0000241e <_exit>:
    241e:	f8 94       	cli

00002420 <__stop_program>:
    2420:	ff cf       	rjmp	.-2      	; 0x2420 <__stop_program>
