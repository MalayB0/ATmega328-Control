
interrupt_sense_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001062  000010f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001062  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010c  0080010c  00001102  2**0
                  ALLOC
  3 .debug_aranges 00000160  00000000  00000000  00001102  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001e1  00000000  00000000  00001262  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e86  00000000  00000000  00001443  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000103b  00000000  00000000  000032c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000010c6  00000000  00000000  00004304  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c0  00000000  00000000  000053cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000357  00000000  00000000  0000558c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  000058e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000060b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 99 01 	jmp	0x332	; 0x332 <__vector_1>
       8:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 e6       	ldi	r30, 0x62	; 98
      7c:	f0 e1       	ldi	r31, 0x10	; 16
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ac e0       	ldi	r26, 0x0C	; 12
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 30       	cpi	r26, 0x0F	; 15
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 1b 02 	call	0x436	; 0x436 <main>
      9e:	0c 94 2f 08 	jmp	0x105e	; 0x105e <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <disp_seg>:
unsigned char in;

int cnt=0;

void disp_seg(int c)
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	00 d0       	rcall	.+0      	; 0xac <disp_seg+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	9a 83       	std	Y+2, r25	; 0x02
      b2:	89 83       	std	Y+1, r24	; 0x01
   PORTD = ((segD[c]&0x0F)<<4);
      b4:	ab e2       	ldi	r26, 0x2B	; 43
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	89 81       	ldd	r24, Y+1	; 0x01
      ba:	9a 81       	ldd	r25, Y+2	; 0x02
      bc:	fc 01       	movw	r30, r24
      be:	e0 50       	subi	r30, 0x00	; 0
      c0:	ff 4f       	sbci	r31, 0xFF	; 255
      c2:	80 81       	ld	r24, Z
      c4:	88 2f       	mov	r24, r24
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	82 95       	swap	r24
      ca:	92 95       	swap	r25
      cc:	90 7f       	andi	r25, 0xF0	; 240
      ce:	98 27       	eor	r25, r24
      d0:	80 7f       	andi	r24, 0xF0	; 240
      d2:	98 27       	eor	r25, r24
      d4:	8c 93       	st	X, r24
   PORTB = ((segD[c]&0xF0)>>4)|PORTB&0xF0;
      d6:	a5 e2       	ldi	r26, 0x25	; 37
      d8:	b0 e0       	ldi	r27, 0x00	; 0
      da:	89 81       	ldd	r24, Y+1	; 0x01
      dc:	9a 81       	ldd	r25, Y+2	; 0x02
      de:	fc 01       	movw	r30, r24
      e0:	e0 50       	subi	r30, 0x00	; 0
      e2:	ff 4f       	sbci	r31, 0xFF	; 255
      e4:	80 81       	ld	r24, Z
      e6:	82 95       	swap	r24
      e8:	8f 70       	andi	r24, 0x0F	; 15
      ea:	98 2f       	mov	r25, r24
      ec:	e5 e2       	ldi	r30, 0x25	; 37
      ee:	f0 e0       	ldi	r31, 0x00	; 0
      f0:	80 81       	ld	r24, Z
      f2:	80 7f       	andi	r24, 0xF0	; 240
      f4:	89 2b       	or	r24, r25
      f6:	8c 93       	st	X, r24
}
      f8:	0f 90       	pop	r0
      fa:	0f 90       	pop	r0
      fc:	cf 91       	pop	r28
      fe:	df 91       	pop	r29
     100:	08 95       	ret

00000102 <LED_ALL_ON_OFF>:

int LED_ALL_ON_OFF()
{
     102:	df 93       	push	r29
     104:	cf 93       	push	r28
     106:	cd b7       	in	r28, 0x3d	; 61
     108:	de b7       	in	r29, 0x3e	; 62
     10a:	6f 97       	sbiw	r28, 0x1f	; 31
     10c:	0f b6       	in	r0, 0x3f	; 63
     10e:	f8 94       	cli
     110:	de bf       	out	0x3e, r29	; 62
     112:	0f be       	out	0x3f, r0	; 63
     114:	cd bf       	out	0x3d, r28	; 61
   unsigned char REALB = ((segD[cnt]&0xF0)>>4);
     116:	80 91 0c 01 	lds	r24, 0x010C
     11a:	90 91 0d 01 	lds	r25, 0x010D
     11e:	fc 01       	movw	r30, r24
     120:	e0 50       	subi	r30, 0x00	; 0
     122:	ff 4f       	sbci	r31, 0xFF	; 255
     124:	80 81       	ld	r24, Z
     126:	82 95       	swap	r24
     128:	8f 70       	andi	r24, 0x0F	; 15
     12a:	8d 8f       	std	Y+29, r24	; 0x1d
   PORTC = 0x00;
     12c:	e8 e2       	ldi	r30, 0x28	; 40
     12e:	f0 e0       	ldi	r31, 0x00	; 0
     130:	10 82       	st	Z, r1
   PORTB = PORTB&0x0F | 0x00;
     132:	a5 e2       	ldi	r26, 0x25	; 37
     134:	b0 e0       	ldi	r27, 0x00	; 0
     136:	e5 e2       	ldi	r30, 0x25	; 37
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	80 81       	ld	r24, Z
     13c:	8f 70       	andi	r24, 0x0F	; 15
     13e:	8c 93       	st	X, r24
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	a8 ec       	ldi	r26, 0xC8	; 200
     146:	b2 e4       	ldi	r27, 0x42	; 66
     148:	89 8f       	std	Y+25, r24	; 0x19
     14a:	9a 8f       	std	Y+26, r25	; 0x1a
     14c:	ab 8f       	std	Y+27, r26	; 0x1b
     14e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     150:	69 8d       	ldd	r22, Y+25	; 0x19
     152:	7a 8d       	ldd	r23, Y+26	; 0x1a
     154:	8b 8d       	ldd	r24, Y+27	; 0x1b
     156:	9c 8d       	ldd	r25, Y+28	; 0x1c
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	4a e7       	ldi	r20, 0x7A	; 122
     15e:	55 e4       	ldi	r21, 0x45	; 69
     160:	0e 94 4d 04 	call	0x89a	; 0x89a <__mulsf3>
     164:	dc 01       	movw	r26, r24
     166:	cb 01       	movw	r24, r22
     168:	8d 8b       	std	Y+21, r24	; 0x15
     16a:	9e 8b       	std	Y+22, r25	; 0x16
     16c:	af 8b       	std	Y+23, r26	; 0x17
     16e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     170:	6d 89       	ldd	r22, Y+21	; 0x15
     172:	7e 89       	ldd	r23, Y+22	; 0x16
     174:	8f 89       	ldd	r24, Y+23	; 0x17
     176:	98 8d       	ldd	r25, Y+24	; 0x18
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	30 e0       	ldi	r19, 0x00	; 0
     17c:	40 e8       	ldi	r20, 0x80	; 128
     17e:	5f e3       	ldi	r21, 0x3F	; 63
     180:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__ltsf2>
     184:	88 23       	and	r24, r24
     186:	2c f4       	brge	.+10     	; 0x192 <LED_ALL_ON_OFF+0x90>
		__ticks = 1;
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	9c 8b       	std	Y+20, r25	; 0x14
     18e:	8b 8b       	std	Y+19, r24	; 0x13
     190:	3f c0       	rjmp	.+126    	; 0x210 <LED_ALL_ON_OFF+0x10e>
	else if (__tmp > 65535)
     192:	6d 89       	ldd	r22, Y+21	; 0x15
     194:	7e 89       	ldd	r23, Y+22	; 0x16
     196:	8f 89       	ldd	r24, Y+23	; 0x17
     198:	98 8d       	ldd	r25, Y+24	; 0x18
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	3f ef       	ldi	r19, 0xFF	; 255
     19e:	4f e7       	ldi	r20, 0x7F	; 127
     1a0:	57 e4       	ldi	r21, 0x47	; 71
     1a2:	0e 94 47 05 	call	0xa8e	; 0xa8e <__gtsf2>
     1a6:	18 16       	cp	r1, r24
     1a8:	4c f5       	brge	.+82     	; 0x1fc <LED_ALL_ON_OFF+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1aa:	69 8d       	ldd	r22, Y+25	; 0x19
     1ac:	7a 8d       	ldd	r23, Y+26	; 0x1a
     1ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
     1b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	40 e2       	ldi	r20, 0x20	; 32
     1b8:	51 e4       	ldi	r21, 0x41	; 65
     1ba:	0e 94 4d 04 	call	0x89a	; 0x89a <__mulsf3>
     1be:	dc 01       	movw	r26, r24
     1c0:	cb 01       	movw	r24, r22
     1c2:	bc 01       	movw	r22, r24
     1c4:	cd 01       	movw	r24, r26
     1c6:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fixunssfsi>
     1ca:	dc 01       	movw	r26, r24
     1cc:	cb 01       	movw	r24, r22
     1ce:	9c 8b       	std	Y+20, r25	; 0x14
     1d0:	8b 8b       	std	Y+19, r24	; 0x13
     1d2:	0f c0       	rjmp	.+30     	; 0x1f2 <LED_ALL_ON_OFF+0xf0>
     1d4:	80 e9       	ldi	r24, 0x90	; 144
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	9a 8b       	std	Y+18, r25	; 0x12
     1da:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1dc:	89 89       	ldd	r24, Y+17	; 0x11
     1de:	9a 89       	ldd	r25, Y+18	; 0x12
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <LED_ALL_ON_OFF+0xde>
     1e4:	9a 8b       	std	Y+18, r25	; 0x12
     1e6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1e8:	8b 89       	ldd	r24, Y+19	; 0x13
     1ea:	9c 89       	ldd	r25, Y+20	; 0x14
     1ec:	01 97       	sbiw	r24, 0x01	; 1
     1ee:	9c 8b       	std	Y+20, r25	; 0x14
     1f0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1f2:	8b 89       	ldd	r24, Y+19	; 0x13
     1f4:	9c 89       	ldd	r25, Y+20	; 0x14
     1f6:	00 97       	sbiw	r24, 0x00	; 0
     1f8:	69 f7       	brne	.-38     	; 0x1d4 <LED_ALL_ON_OFF+0xd2>
     1fa:	14 c0       	rjmp	.+40     	; 0x224 <LED_ALL_ON_OFF+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1fc:	6d 89       	ldd	r22, Y+21	; 0x15
     1fe:	7e 89       	ldd	r23, Y+22	; 0x16
     200:	8f 89       	ldd	r24, Y+23	; 0x17
     202:	98 8d       	ldd	r25, Y+24	; 0x18
     204:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fixunssfsi>
     208:	dc 01       	movw	r26, r24
     20a:	cb 01       	movw	r24, r22
     20c:	9c 8b       	std	Y+20, r25	; 0x14
     20e:	8b 8b       	std	Y+19, r24	; 0x13
     210:	8b 89       	ldd	r24, Y+19	; 0x13
     212:	9c 89       	ldd	r25, Y+20	; 0x14
     214:	98 8b       	std	Y+16, r25	; 0x10
     216:	8f 87       	std	Y+15, r24	; 0x0f
     218:	8f 85       	ldd	r24, Y+15	; 0x0f
     21a:	98 89       	ldd	r25, Y+16	; 0x10
     21c:	01 97       	sbiw	r24, 0x01	; 1
     21e:	f1 f7       	brne	.-4      	; 0x21c <LED_ALL_ON_OFF+0x11a>
     220:	98 8b       	std	Y+16, r25	; 0x10
     222:	8f 87       	std	Y+15, r24	; 0x0f
   _delay_ms(100);
   PORTC = 0xFF;
     224:	e8 e2       	ldi	r30, 0x28	; 40
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	8f ef       	ldi	r24, 0xFF	; 255
     22a:	80 83       	st	Z, r24
   PORTB = PORTB&0x0F | 0x30;
     22c:	a5 e2       	ldi	r26, 0x25	; 37
     22e:	b0 e0       	ldi	r27, 0x00	; 0
     230:	e5 e2       	ldi	r30, 0x25	; 37
     232:	f0 e0       	ldi	r31, 0x00	; 0
     234:	80 81       	ld	r24, Z
     236:	8f 70       	andi	r24, 0x0F	; 15
     238:	80 63       	ori	r24, 0x30	; 48
     23a:	8c 93       	st	X, r24
     23c:	80 e0       	ldi	r24, 0x00	; 0
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	a8 ec       	ldi	r26, 0xC8	; 200
     242:	b2 e4       	ldi	r27, 0x42	; 66
     244:	8b 87       	std	Y+11, r24	; 0x0b
     246:	9c 87       	std	Y+12, r25	; 0x0c
     248:	ad 87       	std	Y+13, r26	; 0x0d
     24a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     24c:	6b 85       	ldd	r22, Y+11	; 0x0b
     24e:	7c 85       	ldd	r23, Y+12	; 0x0c
     250:	8d 85       	ldd	r24, Y+13	; 0x0d
     252:	9e 85       	ldd	r25, Y+14	; 0x0e
     254:	20 e0       	ldi	r18, 0x00	; 0
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	4a e7       	ldi	r20, 0x7A	; 122
     25a:	55 e4       	ldi	r21, 0x45	; 69
     25c:	0e 94 4d 04 	call	0x89a	; 0x89a <__mulsf3>
     260:	dc 01       	movw	r26, r24
     262:	cb 01       	movw	r24, r22
     264:	8f 83       	std	Y+7, r24	; 0x07
     266:	98 87       	std	Y+8, r25	; 0x08
     268:	a9 87       	std	Y+9, r26	; 0x09
     26a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     26c:	6f 81       	ldd	r22, Y+7	; 0x07
     26e:	78 85       	ldd	r23, Y+8	; 0x08
     270:	89 85       	ldd	r24, Y+9	; 0x09
     272:	9a 85       	ldd	r25, Y+10	; 0x0a
     274:	20 e0       	ldi	r18, 0x00	; 0
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	40 e8       	ldi	r20, 0x80	; 128
     27a:	5f e3       	ldi	r21, 0x3F	; 63
     27c:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__ltsf2>
     280:	88 23       	and	r24, r24
     282:	2c f4       	brge	.+10     	; 0x28e <LED_ALL_ON_OFF+0x18c>
		__ticks = 1;
     284:	81 e0       	ldi	r24, 0x01	; 1
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	9e 83       	std	Y+6, r25	; 0x06
     28a:	8d 83       	std	Y+5, r24	; 0x05
     28c:	3f c0       	rjmp	.+126    	; 0x30c <LED_ALL_ON_OFF+0x20a>
	else if (__tmp > 65535)
     28e:	6f 81       	ldd	r22, Y+7	; 0x07
     290:	78 85       	ldd	r23, Y+8	; 0x08
     292:	89 85       	ldd	r24, Y+9	; 0x09
     294:	9a 85       	ldd	r25, Y+10	; 0x0a
     296:	20 e0       	ldi	r18, 0x00	; 0
     298:	3f ef       	ldi	r19, 0xFF	; 255
     29a:	4f e7       	ldi	r20, 0x7F	; 127
     29c:	57 e4       	ldi	r21, 0x47	; 71
     29e:	0e 94 47 05 	call	0xa8e	; 0xa8e <__gtsf2>
     2a2:	18 16       	cp	r1, r24
     2a4:	4c f5       	brge	.+82     	; 0x2f8 <LED_ALL_ON_OFF+0x1f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2a6:	6b 85       	ldd	r22, Y+11	; 0x0b
     2a8:	7c 85       	ldd	r23, Y+12	; 0x0c
     2aa:	8d 85       	ldd	r24, Y+13	; 0x0d
     2ac:	9e 85       	ldd	r25, Y+14	; 0x0e
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	40 e2       	ldi	r20, 0x20	; 32
     2b4:	51 e4       	ldi	r21, 0x41	; 65
     2b6:	0e 94 4d 04 	call	0x89a	; 0x89a <__mulsf3>
     2ba:	dc 01       	movw	r26, r24
     2bc:	cb 01       	movw	r24, r22
     2be:	bc 01       	movw	r22, r24
     2c0:	cd 01       	movw	r24, r26
     2c2:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fixunssfsi>
     2c6:	dc 01       	movw	r26, r24
     2c8:	cb 01       	movw	r24, r22
     2ca:	9e 83       	std	Y+6, r25	; 0x06
     2cc:	8d 83       	std	Y+5, r24	; 0x05
     2ce:	0f c0       	rjmp	.+30     	; 0x2ee <LED_ALL_ON_OFF+0x1ec>
     2d0:	80 e9       	ldi	r24, 0x90	; 144
     2d2:	91 e0       	ldi	r25, 0x01	; 1
     2d4:	9c 83       	std	Y+4, r25	; 0x04
     2d6:	8b 83       	std	Y+3, r24	; 0x03
     2d8:	8b 81       	ldd	r24, Y+3	; 0x03
     2da:	9c 81       	ldd	r25, Y+4	; 0x04
     2dc:	01 97       	sbiw	r24, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <LED_ALL_ON_OFF+0x1da>
     2e0:	9c 83       	std	Y+4, r25	; 0x04
     2e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2e4:	8d 81       	ldd	r24, Y+5	; 0x05
     2e6:	9e 81       	ldd	r25, Y+6	; 0x06
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	9e 83       	std	Y+6, r25	; 0x06
     2ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2ee:	8d 81       	ldd	r24, Y+5	; 0x05
     2f0:	9e 81       	ldd	r25, Y+6	; 0x06
     2f2:	00 97       	sbiw	r24, 0x00	; 0
     2f4:	69 f7       	brne	.-38     	; 0x2d0 <LED_ALL_ON_OFF+0x1ce>
     2f6:	14 c0       	rjmp	.+40     	; 0x320 <LED_ALL_ON_OFF+0x21e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2f8:	6f 81       	ldd	r22, Y+7	; 0x07
     2fa:	78 85       	ldd	r23, Y+8	; 0x08
     2fc:	89 85       	ldd	r24, Y+9	; 0x09
     2fe:	9a 85       	ldd	r25, Y+10	; 0x0a
     300:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fixunssfsi>
     304:	dc 01       	movw	r26, r24
     306:	cb 01       	movw	r24, r22
     308:	9e 83       	std	Y+6, r25	; 0x06
     30a:	8d 83       	std	Y+5, r24	; 0x05
     30c:	8d 81       	ldd	r24, Y+5	; 0x05
     30e:	9e 81       	ldd	r25, Y+6	; 0x06
     310:	9a 83       	std	Y+2, r25	; 0x02
     312:	89 83       	std	Y+1, r24	; 0x01
     314:	89 81       	ldd	r24, Y+1	; 0x01
     316:	9a 81       	ldd	r25, Y+2	; 0x02
     318:	01 97       	sbiw	r24, 0x01	; 1
     31a:	f1 f7       	brne	.-4      	; 0x318 <LED_ALL_ON_OFF+0x216>
     31c:	9a 83       	std	Y+2, r25	; 0x02
     31e:	89 83       	std	Y+1, r24	; 0x01
   _delay_ms(100);
}
     320:	6f 96       	adiw	r28, 0x1f	; 31
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	de bf       	out	0x3e, r29	; 62
     328:	0f be       	out	0x3f, r0	; 63
     32a:	cd bf       	out	0x3d, r28	; 61
     32c:	cf 91       	pop	r28
     32e:	df 91       	pop	r29
     330:	08 95       	ret

00000332 <__vector_1>:

ISR(INT0_vect)
{
     332:	1f 92       	push	r1
     334:	0f 92       	push	r0
     336:	0f b6       	in	r0, 0x3f	; 63
     338:	0f 92       	push	r0
     33a:	11 24       	eor	r1, r1
     33c:	2f 93       	push	r18
     33e:	3f 93       	push	r19
     340:	4f 93       	push	r20
     342:	5f 93       	push	r21
     344:	6f 93       	push	r22
     346:	7f 93       	push	r23
     348:	8f 93       	push	r24
     34a:	9f 93       	push	r25
     34c:	af 93       	push	r26
     34e:	bf 93       	push	r27
     350:	ef 93       	push	r30
     352:	ff 93       	push	r31
     354:	df 93       	push	r29
     356:	cf 93       	push	r28
     358:	cd b7       	in	r28, 0x3d	; 61
     35a:	de b7       	in	r29, 0x3e	; 62
   cli();
     35c:	f8 94       	cli
   EIFR |=0x01;
     35e:	ac e3       	ldi	r26, 0x3C	; 60
     360:	b0 e0       	ldi	r27, 0x00	; 0
     362:	ec e3       	ldi	r30, 0x3C	; 60
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	81 60       	ori	r24, 0x01	; 1
     36a:	8c 93       	st	X, r24
   cnt = (++cnt)%4;
     36c:	80 91 0c 01 	lds	r24, 0x010C
     370:	90 91 0d 01 	lds	r25, 0x010D
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	90 93 0d 01 	sts	0x010D, r25
     37a:	80 93 0c 01 	sts	0x010C, r24
     37e:	80 91 0c 01 	lds	r24, 0x010C
     382:	90 91 0d 01 	lds	r25, 0x010D
     386:	24 e0       	ldi	r18, 0x04	; 4
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	b9 01       	movw	r22, r18
     38c:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__divmodhi4>
     390:	90 93 0d 01 	sts	0x010D, r25
     394:	80 93 0c 01 	sts	0x010C, r24
   EICRA = 0X03|(cnt<<2);
     398:	e9 e6       	ldi	r30, 0x69	; 105
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	80 91 0c 01 	lds	r24, 0x010C
     3a0:	90 91 0d 01 	lds	r25, 0x010D
     3a4:	88 0f       	add	r24, r24
     3a6:	99 1f       	adc	r25, r25
     3a8:	88 0f       	add	r24, r24
     3aa:	99 1f       	adc	r25, r25
     3ac:	83 60       	ori	r24, 0x03	; 3
     3ae:	80 83       	st	Z, r24
   disp_seg(cnt);
     3b0:	80 91 0c 01 	lds	r24, 0x010C
     3b4:	90 91 0d 01 	lds	r25, 0x010D
     3b8:	0e 94 53 00 	call	0xa6	; 0xa6 <disp_seg>
   in = INT0_SW;
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	80 93 0e 01 	sts	0x010E, r24
   sei();
     3c2:	78 94       	sei
   
}
     3c4:	cf 91       	pop	r28
     3c6:	df 91       	pop	r29
     3c8:	ff 91       	pop	r31
     3ca:	ef 91       	pop	r30
     3cc:	bf 91       	pop	r27
     3ce:	af 91       	pop	r26
     3d0:	9f 91       	pop	r25
     3d2:	8f 91       	pop	r24
     3d4:	7f 91       	pop	r23
     3d6:	6f 91       	pop	r22
     3d8:	5f 91       	pop	r21
     3da:	4f 91       	pop	r20
     3dc:	3f 91       	pop	r19
     3de:	2f 91       	pop	r18
     3e0:	0f 90       	pop	r0
     3e2:	0f be       	out	0x3f, r0	; 63
     3e4:	0f 90       	pop	r0
     3e6:	1f 90       	pop	r1
     3e8:	18 95       	reti

000003ea <__vector_2>:

ISR(INT1_vect)
{
     3ea:	1f 92       	push	r1
     3ec:	0f 92       	push	r0
     3ee:	0f b6       	in	r0, 0x3f	; 63
     3f0:	0f 92       	push	r0
     3f2:	11 24       	eor	r1, r1
     3f4:	8f 93       	push	r24
     3f6:	af 93       	push	r26
     3f8:	bf 93       	push	r27
     3fa:	ef 93       	push	r30
     3fc:	ff 93       	push	r31
     3fe:	df 93       	push	r29
     400:	cf 93       	push	r28
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
   cli();
     406:	f8 94       	cli
   EIFR |=0x02;
     408:	ac e3       	ldi	r26, 0x3C	; 60
     40a:	b0 e0       	ldi	r27, 0x00	; 0
     40c:	ec e3       	ldi	r30, 0x3C	; 60
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	80 81       	ld	r24, Z
     412:	82 60       	ori	r24, 0x02	; 2
     414:	8c 93       	st	X, r24
   in = INT1_SW;
     416:	82 e0       	ldi	r24, 0x02	; 2
     418:	80 93 0e 01 	sts	0x010E, r24
   sei();
     41c:	78 94       	sei
}
     41e:	cf 91       	pop	r28
     420:	df 91       	pop	r29
     422:	ff 91       	pop	r31
     424:	ef 91       	pop	r30
     426:	bf 91       	pop	r27
     428:	af 91       	pop	r26
     42a:	8f 91       	pop	r24
     42c:	0f 90       	pop	r0
     42e:	0f be       	out	0x3f, r0	; 63
     430:	0f 90       	pop	r0
     432:	1f 90       	pop	r1
     434:	18 95       	reti

00000436 <main>:

int main()
{
     436:	df 93       	push	r29
     438:	cf 93       	push	r28
     43a:	00 d0       	rcall	.+0      	; 0x43c <main+0x6>
     43c:	00 d0       	rcall	.+0      	; 0x43e <main+0x8>
     43e:	cd b7       	in	r28, 0x3d	; 61
     440:	de b7       	in	r29, 0x3e	; 62
   cli();
     442:	f8 94       	cli

   DDRD = 0xF3;
     444:	ea e2       	ldi	r30, 0x2A	; 42
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	83 ef       	ldi	r24, 0xF3	; 243
     44a:	80 83       	st	Z, r24
   DDRB = 0xFF;
     44c:	e4 e2       	ldi	r30, 0x24	; 36
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	8f ef       	ldi	r24, 0xFF	; 255
     452:	80 83       	st	Z, r24
   DDRC = 0xFF;
     454:	e7 e2       	ldi	r30, 0x27	; 39
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	8f ef       	ldi	r24, 0xFF	; 255
     45a:	80 83       	st	Z, r24
   PORTC = 0xFF;
     45c:	e8 e2       	ldi	r30, 0x28	; 40
     45e:	f0 e0       	ldi	r31, 0x00	; 0
     460:	8f ef       	ldi	r24, 0xFF	; 255
     462:	80 83       	st	Z, r24

   disp_seg(cnt);
     464:	80 91 0c 01 	lds	r24, 0x010C
     468:	90 91 0d 01 	lds	r25, 0x010D
     46c:	0e 94 53 00 	call	0xa6	; 0xa6 <disp_seg>

   EICRA = 0x03;
     470:	e9 e6       	ldi	r30, 0x69	; 105
     472:	f0 e0       	ldi	r31, 0x00	; 0
     474:	83 e0       	ldi	r24, 0x03	; 3
     476:	80 83       	st	Z, r24
   EIMSK = 0x03;
     478:	ed e3       	ldi	r30, 0x3D	; 61
     47a:	f0 e0       	ldi	r31, 0x00	; 0
     47c:	83 e0       	ldi	r24, 0x03	; 3
     47e:	80 83       	st	Z, r24
   EIFR = 0x03;
     480:	ec e3       	ldi	r30, 0x3C	; 60
     482:	f0 e0       	ldi	r31, 0x00	; 0
     484:	83 e0       	ldi	r24, 0x03	; 3
     486:	80 83       	st	Z, r24

   sei();
     488:	78 94       	sei


   while(1)
   {
      if(in == INT1_SW)
     48a:	80 91 0e 01 	lds	r24, 0x010E
     48e:	82 30       	cpi	r24, 0x02	; 2
     490:	e1 f7       	brne	.-8      	; 0x48a <main+0x54>
      {
         in = 0;
     492:	10 92 0e 01 	sts	0x010E, r1
         for(int i=0;i<10;i++)
     496:	1a 82       	std	Y+2, r1	; 0x02
     498:	19 82       	std	Y+1, r1	; 0x01
     49a:	21 c0       	rjmp	.+66     	; 0x4de <main+0xa8>
         {   
            if(in == INT0_SW|in == INT1_SW)
     49c:	80 91 0e 01 	lds	r24, 0x010E
     4a0:	1c 82       	std	Y+4, r1	; 0x04
     4a2:	81 30       	cpi	r24, 0x01	; 1
     4a4:	11 f4       	brne	.+4      	; 0x4aa <main+0x74>
     4a6:	81 e0       	ldi	r24, 0x01	; 1
     4a8:	8c 83       	std	Y+4, r24	; 0x04
     4aa:	80 91 0e 01 	lds	r24, 0x010E
     4ae:	1b 82       	std	Y+3, r1	; 0x03
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	11 f4       	brne	.+4      	; 0x4b8 <main+0x82>
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	9b 83       	std	Y+3, r25	; 0x03
     4b8:	8c 81       	ldd	r24, Y+4	; 0x04
     4ba:	9b 81       	ldd	r25, Y+3	; 0x03
     4bc:	89 2b       	or	r24, r25
     4be:	88 23       	and	r24, r24
     4c0:	39 f0       	breq	.+14     	; 0x4d0 <main+0x9a>
            {
               disp_seg(cnt);
     4c2:	80 91 0c 01 	lds	r24, 0x010C
     4c6:	90 91 0d 01 	lds	r25, 0x010D
     4ca:	0e 94 53 00 	call	0xa6	; 0xa6 <disp_seg>
     4ce:	0c c0       	rjmp	.+24     	; 0x4e8 <main+0xb2>
               break;
            }
            LED_ALL_ON_OFF();
     4d0:	0e 94 81 00 	call	0x102	; 0x102 <LED_ALL_ON_OFF>
   while(1)
   {
      if(in == INT1_SW)
      {
         in = 0;
         for(int i=0;i<10;i++)
     4d4:	89 81       	ldd	r24, Y+1	; 0x01
     4d6:	9a 81       	ldd	r25, Y+2	; 0x02
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	9a 83       	std	Y+2, r25	; 0x02
     4dc:	89 83       	std	Y+1, r24	; 0x01
     4de:	89 81       	ldd	r24, Y+1	; 0x01
     4e0:	9a 81       	ldd	r25, Y+2	; 0x02
     4e2:	8a 30       	cpi	r24, 0x0A	; 10
     4e4:	91 05       	cpc	r25, r1
     4e6:	d4 f2       	brlt	.-76     	; 0x49c <main+0x66>
               disp_seg(cnt);
               break;
            }
            LED_ALL_ON_OFF();
         }
         in = 0;
     4e8:	10 92 0e 01 	sts	0x010E, r1
     4ec:	ce cf       	rjmp	.-100    	; 0x48a <main+0x54>

000004ee <__fixunssfsi>:
     4ee:	ef 92       	push	r14
     4f0:	ff 92       	push	r15
     4f2:	0f 93       	push	r16
     4f4:	1f 93       	push	r17
     4f6:	7b 01       	movw	r14, r22
     4f8:	8c 01       	movw	r16, r24
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	40 e0       	ldi	r20, 0x00	; 0
     500:	5f e4       	ldi	r21, 0x4F	; 79
     502:	0e 94 77 05 	call	0xaee	; 0xaee <__gesf2>
     506:	88 23       	and	r24, r24
     508:	8c f0       	brlt	.+34     	; 0x52c <__fixunssfsi+0x3e>
     50a:	c8 01       	movw	r24, r16
     50c:	b7 01       	movw	r22, r14
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	40 e0       	ldi	r20, 0x00	; 0
     514:	5f e4       	ldi	r21, 0x4F	; 79
     516:	0e 94 ef 03 	call	0x7de	; 0x7de <__subsf3>
     51a:	0e 94 d7 05 	call	0xbae	; 0xbae <__fixsfsi>
     51e:	9b 01       	movw	r18, r22
     520:	ac 01       	movw	r20, r24
     522:	20 50       	subi	r18, 0x00	; 0
     524:	30 40       	sbci	r19, 0x00	; 0
     526:	40 40       	sbci	r20, 0x00	; 0
     528:	50 48       	sbci	r21, 0x80	; 128
     52a:	06 c0       	rjmp	.+12     	; 0x538 <__fixunssfsi+0x4a>
     52c:	c8 01       	movw	r24, r16
     52e:	b7 01       	movw	r22, r14
     530:	0e 94 d7 05 	call	0xbae	; 0xbae <__fixsfsi>
     534:	9b 01       	movw	r18, r22
     536:	ac 01       	movw	r20, r24
     538:	b9 01       	movw	r22, r18
     53a:	ca 01       	movw	r24, r20
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	ff 90       	pop	r15
     542:	ef 90       	pop	r14
     544:	08 95       	ret

00000546 <_fpadd_parts>:
     546:	a0 e0       	ldi	r26, 0x00	; 0
     548:	b0 e0       	ldi	r27, 0x00	; 0
     54a:	e9 ea       	ldi	r30, 0xA9	; 169
     54c:	f2 e0       	ldi	r31, 0x02	; 2
     54e:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__prologue_saves__>
     552:	dc 01       	movw	r26, r24
     554:	2b 01       	movw	r4, r22
     556:	fa 01       	movw	r30, r20
     558:	9c 91       	ld	r25, X
     55a:	92 30       	cpi	r25, 0x02	; 2
     55c:	08 f4       	brcc	.+2      	; 0x560 <_fpadd_parts+0x1a>
     55e:	39 c1       	rjmp	.+626    	; 0x7d2 <_fpadd_parts+0x28c>
     560:	eb 01       	movw	r28, r22
     562:	88 81       	ld	r24, Y
     564:	82 30       	cpi	r24, 0x02	; 2
     566:	08 f4       	brcc	.+2      	; 0x56a <_fpadd_parts+0x24>
     568:	33 c1       	rjmp	.+614    	; 0x7d0 <_fpadd_parts+0x28a>
     56a:	94 30       	cpi	r25, 0x04	; 4
     56c:	69 f4       	brne	.+26     	; 0x588 <_fpadd_parts+0x42>
     56e:	84 30       	cpi	r24, 0x04	; 4
     570:	09 f0       	breq	.+2      	; 0x574 <_fpadd_parts+0x2e>
     572:	2f c1       	rjmp	.+606    	; 0x7d2 <_fpadd_parts+0x28c>
     574:	11 96       	adiw	r26, 0x01	; 1
     576:	9c 91       	ld	r25, X
     578:	11 97       	sbiw	r26, 0x01	; 1
     57a:	89 81       	ldd	r24, Y+1	; 0x01
     57c:	98 17       	cp	r25, r24
     57e:	09 f4       	brne	.+2      	; 0x582 <_fpadd_parts+0x3c>
     580:	28 c1       	rjmp	.+592    	; 0x7d2 <_fpadd_parts+0x28c>
     582:	a4 e0       	ldi	r26, 0x04	; 4
     584:	b1 e0       	ldi	r27, 0x01	; 1
     586:	25 c1       	rjmp	.+586    	; 0x7d2 <_fpadd_parts+0x28c>
     588:	84 30       	cpi	r24, 0x04	; 4
     58a:	09 f4       	brne	.+2      	; 0x58e <_fpadd_parts+0x48>
     58c:	21 c1       	rjmp	.+578    	; 0x7d0 <_fpadd_parts+0x28a>
     58e:	82 30       	cpi	r24, 0x02	; 2
     590:	a9 f4       	brne	.+42     	; 0x5bc <_fpadd_parts+0x76>
     592:	92 30       	cpi	r25, 0x02	; 2
     594:	09 f0       	breq	.+2      	; 0x598 <_fpadd_parts+0x52>
     596:	1d c1       	rjmp	.+570    	; 0x7d2 <_fpadd_parts+0x28c>
     598:	9a 01       	movw	r18, r20
     59a:	ad 01       	movw	r20, r26
     59c:	88 e0       	ldi	r24, 0x08	; 8
     59e:	ea 01       	movw	r28, r20
     5a0:	09 90       	ld	r0, Y+
     5a2:	ae 01       	movw	r20, r28
     5a4:	e9 01       	movw	r28, r18
     5a6:	09 92       	st	Y+, r0
     5a8:	9e 01       	movw	r18, r28
     5aa:	81 50       	subi	r24, 0x01	; 1
     5ac:	c1 f7       	brne	.-16     	; 0x59e <_fpadd_parts+0x58>
     5ae:	e2 01       	movw	r28, r4
     5b0:	89 81       	ldd	r24, Y+1	; 0x01
     5b2:	11 96       	adiw	r26, 0x01	; 1
     5b4:	9c 91       	ld	r25, X
     5b6:	89 23       	and	r24, r25
     5b8:	81 83       	std	Z+1, r24	; 0x01
     5ba:	08 c1       	rjmp	.+528    	; 0x7cc <_fpadd_parts+0x286>
     5bc:	92 30       	cpi	r25, 0x02	; 2
     5be:	09 f4       	brne	.+2      	; 0x5c2 <_fpadd_parts+0x7c>
     5c0:	07 c1       	rjmp	.+526    	; 0x7d0 <_fpadd_parts+0x28a>
     5c2:	12 96       	adiw	r26, 0x02	; 2
     5c4:	2d 90       	ld	r2, X+
     5c6:	3c 90       	ld	r3, X
     5c8:	13 97       	sbiw	r26, 0x03	; 3
     5ca:	eb 01       	movw	r28, r22
     5cc:	8a 81       	ldd	r24, Y+2	; 0x02
     5ce:	9b 81       	ldd	r25, Y+3	; 0x03
     5d0:	14 96       	adiw	r26, 0x04	; 4
     5d2:	ad 90       	ld	r10, X+
     5d4:	bd 90       	ld	r11, X+
     5d6:	cd 90       	ld	r12, X+
     5d8:	dc 90       	ld	r13, X
     5da:	17 97       	sbiw	r26, 0x07	; 7
     5dc:	ec 80       	ldd	r14, Y+4	; 0x04
     5de:	fd 80       	ldd	r15, Y+5	; 0x05
     5e0:	0e 81       	ldd	r16, Y+6	; 0x06
     5e2:	1f 81       	ldd	r17, Y+7	; 0x07
     5e4:	91 01       	movw	r18, r2
     5e6:	28 1b       	sub	r18, r24
     5e8:	39 0b       	sbc	r19, r25
     5ea:	b9 01       	movw	r22, r18
     5ec:	37 ff       	sbrs	r19, 7
     5ee:	04 c0       	rjmp	.+8      	; 0x5f8 <_fpadd_parts+0xb2>
     5f0:	66 27       	eor	r22, r22
     5f2:	77 27       	eor	r23, r23
     5f4:	62 1b       	sub	r22, r18
     5f6:	73 0b       	sbc	r23, r19
     5f8:	60 32       	cpi	r22, 0x20	; 32
     5fa:	71 05       	cpc	r23, r1
     5fc:	0c f0       	brlt	.+2      	; 0x600 <_fpadd_parts+0xba>
     5fe:	61 c0       	rjmp	.+194    	; 0x6c2 <_fpadd_parts+0x17c>
     600:	12 16       	cp	r1, r18
     602:	13 06       	cpc	r1, r19
     604:	6c f5       	brge	.+90     	; 0x660 <_fpadd_parts+0x11a>
     606:	37 01       	movw	r6, r14
     608:	48 01       	movw	r8, r16
     60a:	06 2e       	mov	r0, r22
     60c:	04 c0       	rjmp	.+8      	; 0x616 <_fpadd_parts+0xd0>
     60e:	96 94       	lsr	r9
     610:	87 94       	ror	r8
     612:	77 94       	ror	r7
     614:	67 94       	ror	r6
     616:	0a 94       	dec	r0
     618:	d2 f7       	brpl	.-12     	; 0x60e <_fpadd_parts+0xc8>
     61a:	21 e0       	ldi	r18, 0x01	; 1
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	40 e0       	ldi	r20, 0x00	; 0
     620:	50 e0       	ldi	r21, 0x00	; 0
     622:	04 c0       	rjmp	.+8      	; 0x62c <_fpadd_parts+0xe6>
     624:	22 0f       	add	r18, r18
     626:	33 1f       	adc	r19, r19
     628:	44 1f       	adc	r20, r20
     62a:	55 1f       	adc	r21, r21
     62c:	6a 95       	dec	r22
     62e:	d2 f7       	brpl	.-12     	; 0x624 <_fpadd_parts+0xde>
     630:	21 50       	subi	r18, 0x01	; 1
     632:	30 40       	sbci	r19, 0x00	; 0
     634:	40 40       	sbci	r20, 0x00	; 0
     636:	50 40       	sbci	r21, 0x00	; 0
     638:	2e 21       	and	r18, r14
     63a:	3f 21       	and	r19, r15
     63c:	40 23       	and	r20, r16
     63e:	51 23       	and	r21, r17
     640:	21 15       	cp	r18, r1
     642:	31 05       	cpc	r19, r1
     644:	41 05       	cpc	r20, r1
     646:	51 05       	cpc	r21, r1
     648:	21 f0       	breq	.+8      	; 0x652 <_fpadd_parts+0x10c>
     64a:	21 e0       	ldi	r18, 0x01	; 1
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	40 e0       	ldi	r20, 0x00	; 0
     650:	50 e0       	ldi	r21, 0x00	; 0
     652:	79 01       	movw	r14, r18
     654:	8a 01       	movw	r16, r20
     656:	e6 28       	or	r14, r6
     658:	f7 28       	or	r15, r7
     65a:	08 29       	or	r16, r8
     65c:	19 29       	or	r17, r9
     65e:	3c c0       	rjmp	.+120    	; 0x6d8 <_fpadd_parts+0x192>
     660:	23 2b       	or	r18, r19
     662:	d1 f1       	breq	.+116    	; 0x6d8 <_fpadd_parts+0x192>
     664:	26 0e       	add	r2, r22
     666:	37 1e       	adc	r3, r23
     668:	35 01       	movw	r6, r10
     66a:	46 01       	movw	r8, r12
     66c:	06 2e       	mov	r0, r22
     66e:	04 c0       	rjmp	.+8      	; 0x678 <_fpadd_parts+0x132>
     670:	96 94       	lsr	r9
     672:	87 94       	ror	r8
     674:	77 94       	ror	r7
     676:	67 94       	ror	r6
     678:	0a 94       	dec	r0
     67a:	d2 f7       	brpl	.-12     	; 0x670 <_fpadd_parts+0x12a>
     67c:	21 e0       	ldi	r18, 0x01	; 1
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	40 e0       	ldi	r20, 0x00	; 0
     682:	50 e0       	ldi	r21, 0x00	; 0
     684:	04 c0       	rjmp	.+8      	; 0x68e <_fpadd_parts+0x148>
     686:	22 0f       	add	r18, r18
     688:	33 1f       	adc	r19, r19
     68a:	44 1f       	adc	r20, r20
     68c:	55 1f       	adc	r21, r21
     68e:	6a 95       	dec	r22
     690:	d2 f7       	brpl	.-12     	; 0x686 <_fpadd_parts+0x140>
     692:	21 50       	subi	r18, 0x01	; 1
     694:	30 40       	sbci	r19, 0x00	; 0
     696:	40 40       	sbci	r20, 0x00	; 0
     698:	50 40       	sbci	r21, 0x00	; 0
     69a:	2a 21       	and	r18, r10
     69c:	3b 21       	and	r19, r11
     69e:	4c 21       	and	r20, r12
     6a0:	5d 21       	and	r21, r13
     6a2:	21 15       	cp	r18, r1
     6a4:	31 05       	cpc	r19, r1
     6a6:	41 05       	cpc	r20, r1
     6a8:	51 05       	cpc	r21, r1
     6aa:	21 f0       	breq	.+8      	; 0x6b4 <_fpadd_parts+0x16e>
     6ac:	21 e0       	ldi	r18, 0x01	; 1
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	40 e0       	ldi	r20, 0x00	; 0
     6b2:	50 e0       	ldi	r21, 0x00	; 0
     6b4:	59 01       	movw	r10, r18
     6b6:	6a 01       	movw	r12, r20
     6b8:	a6 28       	or	r10, r6
     6ba:	b7 28       	or	r11, r7
     6bc:	c8 28       	or	r12, r8
     6be:	d9 28       	or	r13, r9
     6c0:	0b c0       	rjmp	.+22     	; 0x6d8 <_fpadd_parts+0x192>
     6c2:	82 15       	cp	r24, r2
     6c4:	93 05       	cpc	r25, r3
     6c6:	2c f0       	brlt	.+10     	; 0x6d2 <_fpadd_parts+0x18c>
     6c8:	1c 01       	movw	r2, r24
     6ca:	aa 24       	eor	r10, r10
     6cc:	bb 24       	eor	r11, r11
     6ce:	65 01       	movw	r12, r10
     6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <_fpadd_parts+0x192>
     6d2:	ee 24       	eor	r14, r14
     6d4:	ff 24       	eor	r15, r15
     6d6:	87 01       	movw	r16, r14
     6d8:	11 96       	adiw	r26, 0x01	; 1
     6da:	9c 91       	ld	r25, X
     6dc:	d2 01       	movw	r26, r4
     6de:	11 96       	adiw	r26, 0x01	; 1
     6e0:	8c 91       	ld	r24, X
     6e2:	98 17       	cp	r25, r24
     6e4:	09 f4       	brne	.+2      	; 0x6e8 <_fpadd_parts+0x1a2>
     6e6:	45 c0       	rjmp	.+138    	; 0x772 <_fpadd_parts+0x22c>
     6e8:	99 23       	and	r25, r25
     6ea:	39 f0       	breq	.+14     	; 0x6fa <_fpadd_parts+0x1b4>
     6ec:	a8 01       	movw	r20, r16
     6ee:	97 01       	movw	r18, r14
     6f0:	2a 19       	sub	r18, r10
     6f2:	3b 09       	sbc	r19, r11
     6f4:	4c 09       	sbc	r20, r12
     6f6:	5d 09       	sbc	r21, r13
     6f8:	06 c0       	rjmp	.+12     	; 0x706 <_fpadd_parts+0x1c0>
     6fa:	a6 01       	movw	r20, r12
     6fc:	95 01       	movw	r18, r10
     6fe:	2e 19       	sub	r18, r14
     700:	3f 09       	sbc	r19, r15
     702:	40 0b       	sbc	r20, r16
     704:	51 0b       	sbc	r21, r17
     706:	57 fd       	sbrc	r21, 7
     708:	08 c0       	rjmp	.+16     	; 0x71a <_fpadd_parts+0x1d4>
     70a:	11 82       	std	Z+1, r1	; 0x01
     70c:	33 82       	std	Z+3, r3	; 0x03
     70e:	22 82       	std	Z+2, r2	; 0x02
     710:	24 83       	std	Z+4, r18	; 0x04
     712:	35 83       	std	Z+5, r19	; 0x05
     714:	46 83       	std	Z+6, r20	; 0x06
     716:	57 83       	std	Z+7, r21	; 0x07
     718:	1d c0       	rjmp	.+58     	; 0x754 <_fpadd_parts+0x20e>
     71a:	81 e0       	ldi	r24, 0x01	; 1
     71c:	81 83       	std	Z+1, r24	; 0x01
     71e:	33 82       	std	Z+3, r3	; 0x03
     720:	22 82       	std	Z+2, r2	; 0x02
     722:	88 27       	eor	r24, r24
     724:	99 27       	eor	r25, r25
     726:	dc 01       	movw	r26, r24
     728:	82 1b       	sub	r24, r18
     72a:	93 0b       	sbc	r25, r19
     72c:	a4 0b       	sbc	r26, r20
     72e:	b5 0b       	sbc	r27, r21
     730:	84 83       	std	Z+4, r24	; 0x04
     732:	95 83       	std	Z+5, r25	; 0x05
     734:	a6 83       	std	Z+6, r26	; 0x06
     736:	b7 83       	std	Z+7, r27	; 0x07
     738:	0d c0       	rjmp	.+26     	; 0x754 <_fpadd_parts+0x20e>
     73a:	22 0f       	add	r18, r18
     73c:	33 1f       	adc	r19, r19
     73e:	44 1f       	adc	r20, r20
     740:	55 1f       	adc	r21, r21
     742:	24 83       	std	Z+4, r18	; 0x04
     744:	35 83       	std	Z+5, r19	; 0x05
     746:	46 83       	std	Z+6, r20	; 0x06
     748:	57 83       	std	Z+7, r21	; 0x07
     74a:	82 81       	ldd	r24, Z+2	; 0x02
     74c:	93 81       	ldd	r25, Z+3	; 0x03
     74e:	01 97       	sbiw	r24, 0x01	; 1
     750:	93 83       	std	Z+3, r25	; 0x03
     752:	82 83       	std	Z+2, r24	; 0x02
     754:	24 81       	ldd	r18, Z+4	; 0x04
     756:	35 81       	ldd	r19, Z+5	; 0x05
     758:	46 81       	ldd	r20, Z+6	; 0x06
     75a:	57 81       	ldd	r21, Z+7	; 0x07
     75c:	da 01       	movw	r26, r20
     75e:	c9 01       	movw	r24, r18
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	a1 09       	sbc	r26, r1
     764:	b1 09       	sbc	r27, r1
     766:	8f 5f       	subi	r24, 0xFF	; 255
     768:	9f 4f       	sbci	r25, 0xFF	; 255
     76a:	af 4f       	sbci	r26, 0xFF	; 255
     76c:	bf 43       	sbci	r27, 0x3F	; 63
     76e:	28 f3       	brcs	.-54     	; 0x73a <_fpadd_parts+0x1f4>
     770:	0b c0       	rjmp	.+22     	; 0x788 <_fpadd_parts+0x242>
     772:	91 83       	std	Z+1, r25	; 0x01
     774:	33 82       	std	Z+3, r3	; 0x03
     776:	22 82       	std	Z+2, r2	; 0x02
     778:	ea 0c       	add	r14, r10
     77a:	fb 1c       	adc	r15, r11
     77c:	0c 1d       	adc	r16, r12
     77e:	1d 1d       	adc	r17, r13
     780:	e4 82       	std	Z+4, r14	; 0x04
     782:	f5 82       	std	Z+5, r15	; 0x05
     784:	06 83       	std	Z+6, r16	; 0x06
     786:	17 83       	std	Z+7, r17	; 0x07
     788:	83 e0       	ldi	r24, 0x03	; 3
     78a:	80 83       	st	Z, r24
     78c:	24 81       	ldd	r18, Z+4	; 0x04
     78e:	35 81       	ldd	r19, Z+5	; 0x05
     790:	46 81       	ldd	r20, Z+6	; 0x06
     792:	57 81       	ldd	r21, Z+7	; 0x07
     794:	57 ff       	sbrs	r21, 7
     796:	1a c0       	rjmp	.+52     	; 0x7cc <_fpadd_parts+0x286>
     798:	c9 01       	movw	r24, r18
     79a:	aa 27       	eor	r26, r26
     79c:	97 fd       	sbrc	r25, 7
     79e:	a0 95       	com	r26
     7a0:	ba 2f       	mov	r27, r26
     7a2:	81 70       	andi	r24, 0x01	; 1
     7a4:	90 70       	andi	r25, 0x00	; 0
     7a6:	a0 70       	andi	r26, 0x00	; 0
     7a8:	b0 70       	andi	r27, 0x00	; 0
     7aa:	56 95       	lsr	r21
     7ac:	47 95       	ror	r20
     7ae:	37 95       	ror	r19
     7b0:	27 95       	ror	r18
     7b2:	82 2b       	or	r24, r18
     7b4:	93 2b       	or	r25, r19
     7b6:	a4 2b       	or	r26, r20
     7b8:	b5 2b       	or	r27, r21
     7ba:	84 83       	std	Z+4, r24	; 0x04
     7bc:	95 83       	std	Z+5, r25	; 0x05
     7be:	a6 83       	std	Z+6, r26	; 0x06
     7c0:	b7 83       	std	Z+7, r27	; 0x07
     7c2:	82 81       	ldd	r24, Z+2	; 0x02
     7c4:	93 81       	ldd	r25, Z+3	; 0x03
     7c6:	01 96       	adiw	r24, 0x01	; 1
     7c8:	93 83       	std	Z+3, r25	; 0x03
     7ca:	82 83       	std	Z+2, r24	; 0x02
     7cc:	df 01       	movw	r26, r30
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <_fpadd_parts+0x28c>
     7d0:	d2 01       	movw	r26, r4
     7d2:	cd 01       	movw	r24, r26
     7d4:	cd b7       	in	r28, 0x3d	; 61
     7d6:	de b7       	in	r29, 0x3e	; 62
     7d8:	e2 e1       	ldi	r30, 0x12	; 18
     7da:	0c 94 14 08 	jmp	0x1028	; 0x1028 <__epilogue_restores__>

000007de <__subsf3>:
     7de:	a0 e2       	ldi	r26, 0x20	; 32
     7e0:	b0 e0       	ldi	r27, 0x00	; 0
     7e2:	e5 ef       	ldi	r30, 0xF5	; 245
     7e4:	f3 e0       	ldi	r31, 0x03	; 3
     7e6:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__prologue_saves__+0x18>
     7ea:	69 83       	std	Y+1, r22	; 0x01
     7ec:	7a 83       	std	Y+2, r23	; 0x02
     7ee:	8b 83       	std	Y+3, r24	; 0x03
     7f0:	9c 83       	std	Y+4, r25	; 0x04
     7f2:	2d 83       	std	Y+5, r18	; 0x05
     7f4:	3e 83       	std	Y+6, r19	; 0x06
     7f6:	4f 83       	std	Y+7, r20	; 0x07
     7f8:	58 87       	std	Y+8, r21	; 0x08
     7fa:	e9 e0       	ldi	r30, 0x09	; 9
     7fc:	ee 2e       	mov	r14, r30
     7fe:	f1 2c       	mov	r15, r1
     800:	ec 0e       	add	r14, r28
     802:	fd 1e       	adc	r15, r29
     804:	ce 01       	movw	r24, r28
     806:	01 96       	adiw	r24, 0x01	; 1
     808:	b7 01       	movw	r22, r14
     80a:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     80e:	8e 01       	movw	r16, r28
     810:	0f 5e       	subi	r16, 0xEF	; 239
     812:	1f 4f       	sbci	r17, 0xFF	; 255
     814:	ce 01       	movw	r24, r28
     816:	05 96       	adiw	r24, 0x05	; 5
     818:	b8 01       	movw	r22, r16
     81a:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     81e:	8a 89       	ldd	r24, Y+18	; 0x12
     820:	91 e0       	ldi	r25, 0x01	; 1
     822:	89 27       	eor	r24, r25
     824:	8a 8b       	std	Y+18, r24	; 0x12
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	ae 01       	movw	r20, r28
     82c:	47 5e       	subi	r20, 0xE7	; 231
     82e:	5f 4f       	sbci	r21, 0xFF	; 255
     830:	0e 94 a3 02 	call	0x546	; 0x546 <_fpadd_parts>
     834:	0e 94 2b 06 	call	0xc56	; 0xc56 <__pack_f>
     838:	a0 96       	adiw	r28, 0x20	; 32
     83a:	e6 e0       	ldi	r30, 0x06	; 6
     83c:	0c 94 20 08 	jmp	0x1040	; 0x1040 <__epilogue_restores__+0x18>

00000840 <__addsf3>:
     840:	a0 e2       	ldi	r26, 0x20	; 32
     842:	b0 e0       	ldi	r27, 0x00	; 0
     844:	e6 e2       	ldi	r30, 0x26	; 38
     846:	f4 e0       	ldi	r31, 0x04	; 4
     848:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__prologue_saves__+0x18>
     84c:	69 83       	std	Y+1, r22	; 0x01
     84e:	7a 83       	std	Y+2, r23	; 0x02
     850:	8b 83       	std	Y+3, r24	; 0x03
     852:	9c 83       	std	Y+4, r25	; 0x04
     854:	2d 83       	std	Y+5, r18	; 0x05
     856:	3e 83       	std	Y+6, r19	; 0x06
     858:	4f 83       	std	Y+7, r20	; 0x07
     85a:	58 87       	std	Y+8, r21	; 0x08
     85c:	f9 e0       	ldi	r31, 0x09	; 9
     85e:	ef 2e       	mov	r14, r31
     860:	f1 2c       	mov	r15, r1
     862:	ec 0e       	add	r14, r28
     864:	fd 1e       	adc	r15, r29
     866:	ce 01       	movw	r24, r28
     868:	01 96       	adiw	r24, 0x01	; 1
     86a:	b7 01       	movw	r22, r14
     86c:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     870:	8e 01       	movw	r16, r28
     872:	0f 5e       	subi	r16, 0xEF	; 239
     874:	1f 4f       	sbci	r17, 0xFF	; 255
     876:	ce 01       	movw	r24, r28
     878:	05 96       	adiw	r24, 0x05	; 5
     87a:	b8 01       	movw	r22, r16
     87c:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     880:	c7 01       	movw	r24, r14
     882:	b8 01       	movw	r22, r16
     884:	ae 01       	movw	r20, r28
     886:	47 5e       	subi	r20, 0xE7	; 231
     888:	5f 4f       	sbci	r21, 0xFF	; 255
     88a:	0e 94 a3 02 	call	0x546	; 0x546 <_fpadd_parts>
     88e:	0e 94 2b 06 	call	0xc56	; 0xc56 <__pack_f>
     892:	a0 96       	adiw	r28, 0x20	; 32
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 20 08 	jmp	0x1040	; 0x1040 <__epilogue_restores__+0x18>

0000089a <__mulsf3>:
     89a:	a0 e2       	ldi	r26, 0x20	; 32
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__prologue_saves__>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	2d 83       	std	Y+5, r18	; 0x05
     8b0:	3e 83       	std	Y+6, r19	; 0x06
     8b2:	4f 83       	std	Y+7, r20	; 0x07
     8b4:	58 87       	std	Y+8, r21	; 0x08
     8b6:	ce 01       	movw	r24, r28
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	be 01       	movw	r22, r28
     8bc:	67 5f       	subi	r22, 0xF7	; 247
     8be:	7f 4f       	sbci	r23, 0xFF	; 255
     8c0:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     8c4:	ce 01       	movw	r24, r28
     8c6:	05 96       	adiw	r24, 0x05	; 5
     8c8:	be 01       	movw	r22, r28
     8ca:	6f 5e       	subi	r22, 0xEF	; 239
     8cc:	7f 4f       	sbci	r23, 0xFF	; 255
     8ce:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     8d2:	99 85       	ldd	r25, Y+9	; 0x09
     8d4:	92 30       	cpi	r25, 0x02	; 2
     8d6:	88 f0       	brcs	.+34     	; 0x8fa <__mulsf3+0x60>
     8d8:	89 89       	ldd	r24, Y+17	; 0x11
     8da:	82 30       	cpi	r24, 0x02	; 2
     8dc:	c8 f0       	brcs	.+50     	; 0x910 <__stack+0x11>
     8de:	94 30       	cpi	r25, 0x04	; 4
     8e0:	19 f4       	brne	.+6      	; 0x8e8 <__mulsf3+0x4e>
     8e2:	82 30       	cpi	r24, 0x02	; 2
     8e4:	51 f4       	brne	.+20     	; 0x8fa <__mulsf3+0x60>
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__mulsf3+0x56>
     8e8:	84 30       	cpi	r24, 0x04	; 4
     8ea:	29 f4       	brne	.+10     	; 0x8f6 <__mulsf3+0x5c>
     8ec:	92 30       	cpi	r25, 0x02	; 2
     8ee:	81 f4       	brne	.+32     	; 0x910 <__stack+0x11>
     8f0:	84 e0       	ldi	r24, 0x04	; 4
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	c6 c0       	rjmp	.+396    	; 0xa82 <__stack+0x183>
     8f6:	92 30       	cpi	r25, 0x02	; 2
     8f8:	49 f4       	brne	.+18     	; 0x90c <__stack+0xd>
     8fa:	20 e0       	ldi	r18, 0x00	; 0
     8fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     8fe:	8a 89       	ldd	r24, Y+18	; 0x12
     900:	98 13       	cpse	r25, r24
     902:	21 e0       	ldi	r18, 0x01	; 1
     904:	2a 87       	std	Y+10, r18	; 0x0a
     906:	ce 01       	movw	r24, r28
     908:	09 96       	adiw	r24, 0x09	; 9
     90a:	bb c0       	rjmp	.+374    	; 0xa82 <__stack+0x183>
     90c:	82 30       	cpi	r24, 0x02	; 2
     90e:	49 f4       	brne	.+18     	; 0x922 <__stack+0x23>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	9a 85       	ldd	r25, Y+10	; 0x0a
     914:	8a 89       	ldd	r24, Y+18	; 0x12
     916:	98 13       	cpse	r25, r24
     918:	21 e0       	ldi	r18, 0x01	; 1
     91a:	2a 8b       	std	Y+18, r18	; 0x12
     91c:	ce 01       	movw	r24, r28
     91e:	41 96       	adiw	r24, 0x11	; 17
     920:	b0 c0       	rjmp	.+352    	; 0xa82 <__stack+0x183>
     922:	2d 84       	ldd	r2, Y+13	; 0x0d
     924:	3e 84       	ldd	r3, Y+14	; 0x0e
     926:	4f 84       	ldd	r4, Y+15	; 0x0f
     928:	58 88       	ldd	r5, Y+16	; 0x10
     92a:	6d 88       	ldd	r6, Y+21	; 0x15
     92c:	7e 88       	ldd	r7, Y+22	; 0x16
     92e:	8f 88       	ldd	r8, Y+23	; 0x17
     930:	98 8c       	ldd	r9, Y+24	; 0x18
     932:	ee 24       	eor	r14, r14
     934:	ff 24       	eor	r15, r15
     936:	87 01       	movw	r16, r14
     938:	aa 24       	eor	r10, r10
     93a:	bb 24       	eor	r11, r11
     93c:	65 01       	movw	r12, r10
     93e:	40 e0       	ldi	r20, 0x00	; 0
     940:	50 e0       	ldi	r21, 0x00	; 0
     942:	60 e0       	ldi	r22, 0x00	; 0
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	e0 e0       	ldi	r30, 0x00	; 0
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	c1 01       	movw	r24, r2
     94c:	81 70       	andi	r24, 0x01	; 1
     94e:	90 70       	andi	r25, 0x00	; 0
     950:	89 2b       	or	r24, r25
     952:	e9 f0       	breq	.+58     	; 0x98e <__stack+0x8f>
     954:	e6 0c       	add	r14, r6
     956:	f7 1c       	adc	r15, r7
     958:	08 1d       	adc	r16, r8
     95a:	19 1d       	adc	r17, r9
     95c:	9a 01       	movw	r18, r20
     95e:	ab 01       	movw	r20, r22
     960:	2a 0d       	add	r18, r10
     962:	3b 1d       	adc	r19, r11
     964:	4c 1d       	adc	r20, r12
     966:	5d 1d       	adc	r21, r13
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	a0 e0       	ldi	r26, 0x00	; 0
     96e:	b0 e0       	ldi	r27, 0x00	; 0
     970:	e6 14       	cp	r14, r6
     972:	f7 04       	cpc	r15, r7
     974:	08 05       	cpc	r16, r8
     976:	19 05       	cpc	r17, r9
     978:	20 f4       	brcc	.+8      	; 0x982 <__stack+0x83>
     97a:	81 e0       	ldi	r24, 0x01	; 1
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	a0 e0       	ldi	r26, 0x00	; 0
     980:	b0 e0       	ldi	r27, 0x00	; 0
     982:	ba 01       	movw	r22, r20
     984:	a9 01       	movw	r20, r18
     986:	48 0f       	add	r20, r24
     988:	59 1f       	adc	r21, r25
     98a:	6a 1f       	adc	r22, r26
     98c:	7b 1f       	adc	r23, r27
     98e:	aa 0c       	add	r10, r10
     990:	bb 1c       	adc	r11, r11
     992:	cc 1c       	adc	r12, r12
     994:	dd 1c       	adc	r13, r13
     996:	97 fe       	sbrs	r9, 7
     998:	08 c0       	rjmp	.+16     	; 0x9aa <__stack+0xab>
     99a:	81 e0       	ldi	r24, 0x01	; 1
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	a0 e0       	ldi	r26, 0x00	; 0
     9a0:	b0 e0       	ldi	r27, 0x00	; 0
     9a2:	a8 2a       	or	r10, r24
     9a4:	b9 2a       	or	r11, r25
     9a6:	ca 2a       	or	r12, r26
     9a8:	db 2a       	or	r13, r27
     9aa:	31 96       	adiw	r30, 0x01	; 1
     9ac:	e0 32       	cpi	r30, 0x20	; 32
     9ae:	f1 05       	cpc	r31, r1
     9b0:	49 f0       	breq	.+18     	; 0x9c4 <__stack+0xc5>
     9b2:	66 0c       	add	r6, r6
     9b4:	77 1c       	adc	r7, r7
     9b6:	88 1c       	adc	r8, r8
     9b8:	99 1c       	adc	r9, r9
     9ba:	56 94       	lsr	r5
     9bc:	47 94       	ror	r4
     9be:	37 94       	ror	r3
     9c0:	27 94       	ror	r2
     9c2:	c3 cf       	rjmp	.-122    	; 0x94a <__stack+0x4b>
     9c4:	fa 85       	ldd	r31, Y+10	; 0x0a
     9c6:	ea 89       	ldd	r30, Y+18	; 0x12
     9c8:	2b 89       	ldd	r18, Y+19	; 0x13
     9ca:	3c 89       	ldd	r19, Y+20	; 0x14
     9cc:	8b 85       	ldd	r24, Y+11	; 0x0b
     9ce:	9c 85       	ldd	r25, Y+12	; 0x0c
     9d0:	28 0f       	add	r18, r24
     9d2:	39 1f       	adc	r19, r25
     9d4:	2e 5f       	subi	r18, 0xFE	; 254
     9d6:	3f 4f       	sbci	r19, 0xFF	; 255
     9d8:	17 c0       	rjmp	.+46     	; 0xa08 <__stack+0x109>
     9da:	ca 01       	movw	r24, r20
     9dc:	81 70       	andi	r24, 0x01	; 1
     9de:	90 70       	andi	r25, 0x00	; 0
     9e0:	89 2b       	or	r24, r25
     9e2:	61 f0       	breq	.+24     	; 0x9fc <__stack+0xfd>
     9e4:	16 95       	lsr	r17
     9e6:	07 95       	ror	r16
     9e8:	f7 94       	ror	r15
     9ea:	e7 94       	ror	r14
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	a0 e0       	ldi	r26, 0x00	; 0
     9f2:	b0 e8       	ldi	r27, 0x80	; 128
     9f4:	e8 2a       	or	r14, r24
     9f6:	f9 2a       	or	r15, r25
     9f8:	0a 2b       	or	r16, r26
     9fa:	1b 2b       	or	r17, r27
     9fc:	76 95       	lsr	r23
     9fe:	67 95       	ror	r22
     a00:	57 95       	ror	r21
     a02:	47 95       	ror	r20
     a04:	2f 5f       	subi	r18, 0xFF	; 255
     a06:	3f 4f       	sbci	r19, 0xFF	; 255
     a08:	77 fd       	sbrc	r23, 7
     a0a:	e7 cf       	rjmp	.-50     	; 0x9da <__stack+0xdb>
     a0c:	0c c0       	rjmp	.+24     	; 0xa26 <__stack+0x127>
     a0e:	44 0f       	add	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	66 1f       	adc	r22, r22
     a14:	77 1f       	adc	r23, r23
     a16:	17 fd       	sbrc	r17, 7
     a18:	41 60       	ori	r20, 0x01	; 1
     a1a:	ee 0c       	add	r14, r14
     a1c:	ff 1c       	adc	r15, r15
     a1e:	00 1f       	adc	r16, r16
     a20:	11 1f       	adc	r17, r17
     a22:	21 50       	subi	r18, 0x01	; 1
     a24:	30 40       	sbci	r19, 0x00	; 0
     a26:	40 30       	cpi	r20, 0x00	; 0
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	59 07       	cpc	r21, r25
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	69 07       	cpc	r22, r25
     a30:	90 e4       	ldi	r25, 0x40	; 64
     a32:	79 07       	cpc	r23, r25
     a34:	60 f3       	brcs	.-40     	; 0xa0e <__stack+0x10f>
     a36:	2b 8f       	std	Y+27, r18	; 0x1b
     a38:	3c 8f       	std	Y+28, r19	; 0x1c
     a3a:	db 01       	movw	r26, r22
     a3c:	ca 01       	movw	r24, r20
     a3e:	8f 77       	andi	r24, 0x7F	; 127
     a40:	90 70       	andi	r25, 0x00	; 0
     a42:	a0 70       	andi	r26, 0x00	; 0
     a44:	b0 70       	andi	r27, 0x00	; 0
     a46:	80 34       	cpi	r24, 0x40	; 64
     a48:	91 05       	cpc	r25, r1
     a4a:	a1 05       	cpc	r26, r1
     a4c:	b1 05       	cpc	r27, r1
     a4e:	61 f4       	brne	.+24     	; 0xa68 <__stack+0x169>
     a50:	47 fd       	sbrc	r20, 7
     a52:	0a c0       	rjmp	.+20     	; 0xa68 <__stack+0x169>
     a54:	e1 14       	cp	r14, r1
     a56:	f1 04       	cpc	r15, r1
     a58:	01 05       	cpc	r16, r1
     a5a:	11 05       	cpc	r17, r1
     a5c:	29 f0       	breq	.+10     	; 0xa68 <__stack+0x169>
     a5e:	40 5c       	subi	r20, 0xC0	; 192
     a60:	5f 4f       	sbci	r21, 0xFF	; 255
     a62:	6f 4f       	sbci	r22, 0xFF	; 255
     a64:	7f 4f       	sbci	r23, 0xFF	; 255
     a66:	40 78       	andi	r20, 0x80	; 128
     a68:	1a 8e       	std	Y+26, r1	; 0x1a
     a6a:	fe 17       	cp	r31, r30
     a6c:	11 f0       	breq	.+4      	; 0xa72 <__stack+0x173>
     a6e:	81 e0       	ldi	r24, 0x01	; 1
     a70:	8a 8f       	std	Y+26, r24	; 0x1a
     a72:	4d 8f       	std	Y+29, r20	; 0x1d
     a74:	5e 8f       	std	Y+30, r21	; 0x1e
     a76:	6f 8f       	std	Y+31, r22	; 0x1f
     a78:	78 a3       	std	Y+32, r23	; 0x20
     a7a:	83 e0       	ldi	r24, 0x03	; 3
     a7c:	89 8f       	std	Y+25, r24	; 0x19
     a7e:	ce 01       	movw	r24, r28
     a80:	49 96       	adiw	r24, 0x19	; 25
     a82:	0e 94 2b 06 	call	0xc56	; 0xc56 <__pack_f>
     a86:	a0 96       	adiw	r28, 0x20	; 32
     a88:	e2 e1       	ldi	r30, 0x12	; 18
     a8a:	0c 94 14 08 	jmp	0x1028	; 0x1028 <__epilogue_restores__>

00000a8e <__gtsf2>:
     a8e:	a8 e1       	ldi	r26, 0x18	; 24
     a90:	b0 e0       	ldi	r27, 0x00	; 0
     a92:	ed e4       	ldi	r30, 0x4D	; 77
     a94:	f5 e0       	ldi	r31, 0x05	; 5
     a96:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__prologue_saves__+0x18>
     a9a:	69 83       	std	Y+1, r22	; 0x01
     a9c:	7a 83       	std	Y+2, r23	; 0x02
     a9e:	8b 83       	std	Y+3, r24	; 0x03
     aa0:	9c 83       	std	Y+4, r25	; 0x04
     aa2:	2d 83       	std	Y+5, r18	; 0x05
     aa4:	3e 83       	std	Y+6, r19	; 0x06
     aa6:	4f 83       	std	Y+7, r20	; 0x07
     aa8:	58 87       	std	Y+8, r21	; 0x08
     aaa:	89 e0       	ldi	r24, 0x09	; 9
     aac:	e8 2e       	mov	r14, r24
     aae:	f1 2c       	mov	r15, r1
     ab0:	ec 0e       	add	r14, r28
     ab2:	fd 1e       	adc	r15, r29
     ab4:	ce 01       	movw	r24, r28
     ab6:	01 96       	adiw	r24, 0x01	; 1
     ab8:	b7 01       	movw	r22, r14
     aba:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     abe:	8e 01       	movw	r16, r28
     ac0:	0f 5e       	subi	r16, 0xEF	; 239
     ac2:	1f 4f       	sbci	r17, 0xFF	; 255
     ac4:	ce 01       	movw	r24, r28
     ac6:	05 96       	adiw	r24, 0x05	; 5
     ac8:	b8 01       	movw	r22, r16
     aca:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     ace:	89 85       	ldd	r24, Y+9	; 0x09
     ad0:	82 30       	cpi	r24, 0x02	; 2
     ad2:	40 f0       	brcs	.+16     	; 0xae4 <__gtsf2+0x56>
     ad4:	89 89       	ldd	r24, Y+17	; 0x11
     ad6:	82 30       	cpi	r24, 0x02	; 2
     ad8:	28 f0       	brcs	.+10     	; 0xae4 <__gtsf2+0x56>
     ada:	c7 01       	movw	r24, r14
     adc:	b8 01       	movw	r22, r16
     ade:	0e 94 78 07 	call	0xef0	; 0xef0 <__fpcmp_parts_f>
     ae2:	01 c0       	rjmp	.+2      	; 0xae6 <__gtsf2+0x58>
     ae4:	8f ef       	ldi	r24, 0xFF	; 255
     ae6:	68 96       	adiw	r28, 0x18	; 24
     ae8:	e6 e0       	ldi	r30, 0x06	; 6
     aea:	0c 94 20 08 	jmp	0x1040	; 0x1040 <__epilogue_restores__+0x18>

00000aee <__gesf2>:
     aee:	a8 e1       	ldi	r26, 0x18	; 24
     af0:	b0 e0       	ldi	r27, 0x00	; 0
     af2:	ed e7       	ldi	r30, 0x7D	; 125
     af4:	f5 e0       	ldi	r31, 0x05	; 5
     af6:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__prologue_saves__+0x18>
     afa:	69 83       	std	Y+1, r22	; 0x01
     afc:	7a 83       	std	Y+2, r23	; 0x02
     afe:	8b 83       	std	Y+3, r24	; 0x03
     b00:	9c 83       	std	Y+4, r25	; 0x04
     b02:	2d 83       	std	Y+5, r18	; 0x05
     b04:	3e 83       	std	Y+6, r19	; 0x06
     b06:	4f 83       	std	Y+7, r20	; 0x07
     b08:	58 87       	std	Y+8, r21	; 0x08
     b0a:	89 e0       	ldi	r24, 0x09	; 9
     b0c:	e8 2e       	mov	r14, r24
     b0e:	f1 2c       	mov	r15, r1
     b10:	ec 0e       	add	r14, r28
     b12:	fd 1e       	adc	r15, r29
     b14:	ce 01       	movw	r24, r28
     b16:	01 96       	adiw	r24, 0x01	; 1
     b18:	b7 01       	movw	r22, r14
     b1a:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     b1e:	8e 01       	movw	r16, r28
     b20:	0f 5e       	subi	r16, 0xEF	; 239
     b22:	1f 4f       	sbci	r17, 0xFF	; 255
     b24:	ce 01       	movw	r24, r28
     b26:	05 96       	adiw	r24, 0x05	; 5
     b28:	b8 01       	movw	r22, r16
     b2a:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     b2e:	89 85       	ldd	r24, Y+9	; 0x09
     b30:	82 30       	cpi	r24, 0x02	; 2
     b32:	40 f0       	brcs	.+16     	; 0xb44 <__gesf2+0x56>
     b34:	89 89       	ldd	r24, Y+17	; 0x11
     b36:	82 30       	cpi	r24, 0x02	; 2
     b38:	28 f0       	brcs	.+10     	; 0xb44 <__gesf2+0x56>
     b3a:	c7 01       	movw	r24, r14
     b3c:	b8 01       	movw	r22, r16
     b3e:	0e 94 78 07 	call	0xef0	; 0xef0 <__fpcmp_parts_f>
     b42:	01 c0       	rjmp	.+2      	; 0xb46 <__gesf2+0x58>
     b44:	8f ef       	ldi	r24, 0xFF	; 255
     b46:	68 96       	adiw	r28, 0x18	; 24
     b48:	e6 e0       	ldi	r30, 0x06	; 6
     b4a:	0c 94 20 08 	jmp	0x1040	; 0x1040 <__epilogue_restores__+0x18>

00000b4e <__ltsf2>:
     b4e:	a8 e1       	ldi	r26, 0x18	; 24
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	ed ea       	ldi	r30, 0xAD	; 173
     b54:	f5 e0       	ldi	r31, 0x05	; 5
     b56:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__prologue_saves__+0x18>
     b5a:	69 83       	std	Y+1, r22	; 0x01
     b5c:	7a 83       	std	Y+2, r23	; 0x02
     b5e:	8b 83       	std	Y+3, r24	; 0x03
     b60:	9c 83       	std	Y+4, r25	; 0x04
     b62:	2d 83       	std	Y+5, r18	; 0x05
     b64:	3e 83       	std	Y+6, r19	; 0x06
     b66:	4f 83       	std	Y+7, r20	; 0x07
     b68:	58 87       	std	Y+8, r21	; 0x08
     b6a:	89 e0       	ldi	r24, 0x09	; 9
     b6c:	e8 2e       	mov	r14, r24
     b6e:	f1 2c       	mov	r15, r1
     b70:	ec 0e       	add	r14, r28
     b72:	fd 1e       	adc	r15, r29
     b74:	ce 01       	movw	r24, r28
     b76:	01 96       	adiw	r24, 0x01	; 1
     b78:	b7 01       	movw	r22, r14
     b7a:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     b7e:	8e 01       	movw	r16, r28
     b80:	0f 5e       	subi	r16, 0xEF	; 239
     b82:	1f 4f       	sbci	r17, 0xFF	; 255
     b84:	ce 01       	movw	r24, r28
     b86:	05 96       	adiw	r24, 0x05	; 5
     b88:	b8 01       	movw	r22, r16
     b8a:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     b8e:	89 85       	ldd	r24, Y+9	; 0x09
     b90:	82 30       	cpi	r24, 0x02	; 2
     b92:	40 f0       	brcs	.+16     	; 0xba4 <__ltsf2+0x56>
     b94:	89 89       	ldd	r24, Y+17	; 0x11
     b96:	82 30       	cpi	r24, 0x02	; 2
     b98:	28 f0       	brcs	.+10     	; 0xba4 <__ltsf2+0x56>
     b9a:	c7 01       	movw	r24, r14
     b9c:	b8 01       	movw	r22, r16
     b9e:	0e 94 78 07 	call	0xef0	; 0xef0 <__fpcmp_parts_f>
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <__ltsf2+0x58>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	68 96       	adiw	r28, 0x18	; 24
     ba8:	e6 e0       	ldi	r30, 0x06	; 6
     baa:	0c 94 20 08 	jmp	0x1040	; 0x1040 <__epilogue_restores__+0x18>

00000bae <__fixsfsi>:
     bae:	ac e0       	ldi	r26, 0x0C	; 12
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	ed ed       	ldi	r30, 0xDD	; 221
     bb4:	f5 e0       	ldi	r31, 0x05	; 5
     bb6:	0c 94 08 08 	jmp	0x1010	; 0x1010 <__prologue_saves__+0x20>
     bba:	69 83       	std	Y+1, r22	; 0x01
     bbc:	7a 83       	std	Y+2, r23	; 0x02
     bbe:	8b 83       	std	Y+3, r24	; 0x03
     bc0:	9c 83       	std	Y+4, r25	; 0x04
     bc2:	ce 01       	movw	r24, r28
     bc4:	01 96       	adiw	r24, 0x01	; 1
     bc6:	be 01       	movw	r22, r28
     bc8:	6b 5f       	subi	r22, 0xFB	; 251
     bca:	7f 4f       	sbci	r23, 0xFF	; 255
     bcc:	0e 94 00 07 	call	0xe00	; 0xe00 <__unpack_f>
     bd0:	8d 81       	ldd	r24, Y+5	; 0x05
     bd2:	82 30       	cpi	r24, 0x02	; 2
     bd4:	61 f1       	breq	.+88     	; 0xc2e <__fixsfsi+0x80>
     bd6:	82 30       	cpi	r24, 0x02	; 2
     bd8:	50 f1       	brcs	.+84     	; 0xc2e <__fixsfsi+0x80>
     bda:	84 30       	cpi	r24, 0x04	; 4
     bdc:	21 f4       	brne	.+8      	; 0xbe6 <__fixsfsi+0x38>
     bde:	8e 81       	ldd	r24, Y+6	; 0x06
     be0:	88 23       	and	r24, r24
     be2:	51 f1       	breq	.+84     	; 0xc38 <__fixsfsi+0x8a>
     be4:	2e c0       	rjmp	.+92     	; 0xc42 <__fixsfsi+0x94>
     be6:	2f 81       	ldd	r18, Y+7	; 0x07
     be8:	38 85       	ldd	r19, Y+8	; 0x08
     bea:	37 fd       	sbrc	r19, 7
     bec:	20 c0       	rjmp	.+64     	; 0xc2e <__fixsfsi+0x80>
     bee:	6e 81       	ldd	r22, Y+6	; 0x06
     bf0:	2f 31       	cpi	r18, 0x1F	; 31
     bf2:	31 05       	cpc	r19, r1
     bf4:	1c f0       	brlt	.+6      	; 0xbfc <__fixsfsi+0x4e>
     bf6:	66 23       	and	r22, r22
     bf8:	f9 f0       	breq	.+62     	; 0xc38 <__fixsfsi+0x8a>
     bfa:	23 c0       	rjmp	.+70     	; 0xc42 <__fixsfsi+0x94>
     bfc:	8e e1       	ldi	r24, 0x1E	; 30
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	82 1b       	sub	r24, r18
     c02:	93 0b       	sbc	r25, r19
     c04:	29 85       	ldd	r18, Y+9	; 0x09
     c06:	3a 85       	ldd	r19, Y+10	; 0x0a
     c08:	4b 85       	ldd	r20, Y+11	; 0x0b
     c0a:	5c 85       	ldd	r21, Y+12	; 0x0c
     c0c:	04 c0       	rjmp	.+8      	; 0xc16 <__fixsfsi+0x68>
     c0e:	56 95       	lsr	r21
     c10:	47 95       	ror	r20
     c12:	37 95       	ror	r19
     c14:	27 95       	ror	r18
     c16:	8a 95       	dec	r24
     c18:	d2 f7       	brpl	.-12     	; 0xc0e <__fixsfsi+0x60>
     c1a:	66 23       	and	r22, r22
     c1c:	b1 f0       	breq	.+44     	; 0xc4a <__fixsfsi+0x9c>
     c1e:	50 95       	com	r21
     c20:	40 95       	com	r20
     c22:	30 95       	com	r19
     c24:	21 95       	neg	r18
     c26:	3f 4f       	sbci	r19, 0xFF	; 255
     c28:	4f 4f       	sbci	r20, 0xFF	; 255
     c2a:	5f 4f       	sbci	r21, 0xFF	; 255
     c2c:	0e c0       	rjmp	.+28     	; 0xc4a <__fixsfsi+0x9c>
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	40 e0       	ldi	r20, 0x00	; 0
     c34:	50 e0       	ldi	r21, 0x00	; 0
     c36:	09 c0       	rjmp	.+18     	; 0xc4a <__fixsfsi+0x9c>
     c38:	2f ef       	ldi	r18, 0xFF	; 255
     c3a:	3f ef       	ldi	r19, 0xFF	; 255
     c3c:	4f ef       	ldi	r20, 0xFF	; 255
     c3e:	5f e7       	ldi	r21, 0x7F	; 127
     c40:	04 c0       	rjmp	.+8      	; 0xc4a <__fixsfsi+0x9c>
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	40 e0       	ldi	r20, 0x00	; 0
     c48:	50 e8       	ldi	r21, 0x80	; 128
     c4a:	b9 01       	movw	r22, r18
     c4c:	ca 01       	movw	r24, r20
     c4e:	2c 96       	adiw	r28, 0x0c	; 12
     c50:	e2 e0       	ldi	r30, 0x02	; 2
     c52:	0c 94 24 08 	jmp	0x1048	; 0x1048 <__epilogue_restores__+0x20>

00000c56 <__pack_f>:
     c56:	df 92       	push	r13
     c58:	ef 92       	push	r14
     c5a:	ff 92       	push	r15
     c5c:	0f 93       	push	r16
     c5e:	1f 93       	push	r17
     c60:	fc 01       	movw	r30, r24
     c62:	e4 80       	ldd	r14, Z+4	; 0x04
     c64:	f5 80       	ldd	r15, Z+5	; 0x05
     c66:	06 81       	ldd	r16, Z+6	; 0x06
     c68:	17 81       	ldd	r17, Z+7	; 0x07
     c6a:	d1 80       	ldd	r13, Z+1	; 0x01
     c6c:	80 81       	ld	r24, Z
     c6e:	82 30       	cpi	r24, 0x02	; 2
     c70:	48 f4       	brcc	.+18     	; 0xc84 <__pack_f+0x2e>
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	a0 e1       	ldi	r26, 0x10	; 16
     c78:	b0 e0       	ldi	r27, 0x00	; 0
     c7a:	e8 2a       	or	r14, r24
     c7c:	f9 2a       	or	r15, r25
     c7e:	0a 2b       	or	r16, r26
     c80:	1b 2b       	or	r17, r27
     c82:	a5 c0       	rjmp	.+330    	; 0xdce <__pack_f+0x178>
     c84:	84 30       	cpi	r24, 0x04	; 4
     c86:	09 f4       	brne	.+2      	; 0xc8a <__pack_f+0x34>
     c88:	9f c0       	rjmp	.+318    	; 0xdc8 <__pack_f+0x172>
     c8a:	82 30       	cpi	r24, 0x02	; 2
     c8c:	21 f4       	brne	.+8      	; 0xc96 <__pack_f+0x40>
     c8e:	ee 24       	eor	r14, r14
     c90:	ff 24       	eor	r15, r15
     c92:	87 01       	movw	r16, r14
     c94:	05 c0       	rjmp	.+10     	; 0xca0 <__pack_f+0x4a>
     c96:	e1 14       	cp	r14, r1
     c98:	f1 04       	cpc	r15, r1
     c9a:	01 05       	cpc	r16, r1
     c9c:	11 05       	cpc	r17, r1
     c9e:	19 f4       	brne	.+6      	; 0xca6 <__pack_f+0x50>
     ca0:	e0 e0       	ldi	r30, 0x00	; 0
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	96 c0       	rjmp	.+300    	; 0xdd2 <__pack_f+0x17c>
     ca6:	62 81       	ldd	r22, Z+2	; 0x02
     ca8:	73 81       	ldd	r23, Z+3	; 0x03
     caa:	9f ef       	ldi	r25, 0xFF	; 255
     cac:	62 38       	cpi	r22, 0x82	; 130
     cae:	79 07       	cpc	r23, r25
     cb0:	0c f0       	brlt	.+2      	; 0xcb4 <__pack_f+0x5e>
     cb2:	5b c0       	rjmp	.+182    	; 0xd6a <__pack_f+0x114>
     cb4:	22 e8       	ldi	r18, 0x82	; 130
     cb6:	3f ef       	ldi	r19, 0xFF	; 255
     cb8:	26 1b       	sub	r18, r22
     cba:	37 0b       	sbc	r19, r23
     cbc:	2a 31       	cpi	r18, 0x1A	; 26
     cbe:	31 05       	cpc	r19, r1
     cc0:	2c f0       	brlt	.+10     	; 0xccc <__pack_f+0x76>
     cc2:	20 e0       	ldi	r18, 0x00	; 0
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	40 e0       	ldi	r20, 0x00	; 0
     cc8:	50 e0       	ldi	r21, 0x00	; 0
     cca:	2a c0       	rjmp	.+84     	; 0xd20 <__pack_f+0xca>
     ccc:	b8 01       	movw	r22, r16
     cce:	a7 01       	movw	r20, r14
     cd0:	02 2e       	mov	r0, r18
     cd2:	04 c0       	rjmp	.+8      	; 0xcdc <__pack_f+0x86>
     cd4:	76 95       	lsr	r23
     cd6:	67 95       	ror	r22
     cd8:	57 95       	ror	r21
     cda:	47 95       	ror	r20
     cdc:	0a 94       	dec	r0
     cde:	d2 f7       	brpl	.-12     	; 0xcd4 <__pack_f+0x7e>
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	a0 e0       	ldi	r26, 0x00	; 0
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	04 c0       	rjmp	.+8      	; 0xcf2 <__pack_f+0x9c>
     cea:	88 0f       	add	r24, r24
     cec:	99 1f       	adc	r25, r25
     cee:	aa 1f       	adc	r26, r26
     cf0:	bb 1f       	adc	r27, r27
     cf2:	2a 95       	dec	r18
     cf4:	d2 f7       	brpl	.-12     	; 0xcea <__pack_f+0x94>
     cf6:	01 97       	sbiw	r24, 0x01	; 1
     cf8:	a1 09       	sbc	r26, r1
     cfa:	b1 09       	sbc	r27, r1
     cfc:	8e 21       	and	r24, r14
     cfe:	9f 21       	and	r25, r15
     d00:	a0 23       	and	r26, r16
     d02:	b1 23       	and	r27, r17
     d04:	00 97       	sbiw	r24, 0x00	; 0
     d06:	a1 05       	cpc	r26, r1
     d08:	b1 05       	cpc	r27, r1
     d0a:	21 f0       	breq	.+8      	; 0xd14 <__pack_f+0xbe>
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	a0 e0       	ldi	r26, 0x00	; 0
     d12:	b0 e0       	ldi	r27, 0x00	; 0
     d14:	9a 01       	movw	r18, r20
     d16:	ab 01       	movw	r20, r22
     d18:	28 2b       	or	r18, r24
     d1a:	39 2b       	or	r19, r25
     d1c:	4a 2b       	or	r20, r26
     d1e:	5b 2b       	or	r21, r27
     d20:	da 01       	movw	r26, r20
     d22:	c9 01       	movw	r24, r18
     d24:	8f 77       	andi	r24, 0x7F	; 127
     d26:	90 70       	andi	r25, 0x00	; 0
     d28:	a0 70       	andi	r26, 0x00	; 0
     d2a:	b0 70       	andi	r27, 0x00	; 0
     d2c:	80 34       	cpi	r24, 0x40	; 64
     d2e:	91 05       	cpc	r25, r1
     d30:	a1 05       	cpc	r26, r1
     d32:	b1 05       	cpc	r27, r1
     d34:	39 f4       	brne	.+14     	; 0xd44 <__pack_f+0xee>
     d36:	27 ff       	sbrs	r18, 7
     d38:	09 c0       	rjmp	.+18     	; 0xd4c <__pack_f+0xf6>
     d3a:	20 5c       	subi	r18, 0xC0	; 192
     d3c:	3f 4f       	sbci	r19, 0xFF	; 255
     d3e:	4f 4f       	sbci	r20, 0xFF	; 255
     d40:	5f 4f       	sbci	r21, 0xFF	; 255
     d42:	04 c0       	rjmp	.+8      	; 0xd4c <__pack_f+0xf6>
     d44:	21 5c       	subi	r18, 0xC1	; 193
     d46:	3f 4f       	sbci	r19, 0xFF	; 255
     d48:	4f 4f       	sbci	r20, 0xFF	; 255
     d4a:	5f 4f       	sbci	r21, 0xFF	; 255
     d4c:	e0 e0       	ldi	r30, 0x00	; 0
     d4e:	f0 e0       	ldi	r31, 0x00	; 0
     d50:	20 30       	cpi	r18, 0x00	; 0
     d52:	a0 e0       	ldi	r26, 0x00	; 0
     d54:	3a 07       	cpc	r19, r26
     d56:	a0 e0       	ldi	r26, 0x00	; 0
     d58:	4a 07       	cpc	r20, r26
     d5a:	a0 e4       	ldi	r26, 0x40	; 64
     d5c:	5a 07       	cpc	r21, r26
     d5e:	10 f0       	brcs	.+4      	; 0xd64 <__pack_f+0x10e>
     d60:	e1 e0       	ldi	r30, 0x01	; 1
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	79 01       	movw	r14, r18
     d66:	8a 01       	movw	r16, r20
     d68:	27 c0       	rjmp	.+78     	; 0xdb8 <__pack_f+0x162>
     d6a:	60 38       	cpi	r22, 0x80	; 128
     d6c:	71 05       	cpc	r23, r1
     d6e:	64 f5       	brge	.+88     	; 0xdc8 <__pack_f+0x172>
     d70:	fb 01       	movw	r30, r22
     d72:	e1 58       	subi	r30, 0x81	; 129
     d74:	ff 4f       	sbci	r31, 0xFF	; 255
     d76:	d8 01       	movw	r26, r16
     d78:	c7 01       	movw	r24, r14
     d7a:	8f 77       	andi	r24, 0x7F	; 127
     d7c:	90 70       	andi	r25, 0x00	; 0
     d7e:	a0 70       	andi	r26, 0x00	; 0
     d80:	b0 70       	andi	r27, 0x00	; 0
     d82:	80 34       	cpi	r24, 0x40	; 64
     d84:	91 05       	cpc	r25, r1
     d86:	a1 05       	cpc	r26, r1
     d88:	b1 05       	cpc	r27, r1
     d8a:	39 f4       	brne	.+14     	; 0xd9a <__pack_f+0x144>
     d8c:	e7 fe       	sbrs	r14, 7
     d8e:	0d c0       	rjmp	.+26     	; 0xdaa <__pack_f+0x154>
     d90:	80 e4       	ldi	r24, 0x40	; 64
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	a0 e0       	ldi	r26, 0x00	; 0
     d96:	b0 e0       	ldi	r27, 0x00	; 0
     d98:	04 c0       	rjmp	.+8      	; 0xda2 <__pack_f+0x14c>
     d9a:	8f e3       	ldi	r24, 0x3F	; 63
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	a0 e0       	ldi	r26, 0x00	; 0
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e8 0e       	add	r14, r24
     da4:	f9 1e       	adc	r15, r25
     da6:	0a 1f       	adc	r16, r26
     da8:	1b 1f       	adc	r17, r27
     daa:	17 ff       	sbrs	r17, 7
     dac:	05 c0       	rjmp	.+10     	; 0xdb8 <__pack_f+0x162>
     dae:	16 95       	lsr	r17
     db0:	07 95       	ror	r16
     db2:	f7 94       	ror	r15
     db4:	e7 94       	ror	r14
     db6:	31 96       	adiw	r30, 0x01	; 1
     db8:	87 e0       	ldi	r24, 0x07	; 7
     dba:	16 95       	lsr	r17
     dbc:	07 95       	ror	r16
     dbe:	f7 94       	ror	r15
     dc0:	e7 94       	ror	r14
     dc2:	8a 95       	dec	r24
     dc4:	d1 f7       	brne	.-12     	; 0xdba <__pack_f+0x164>
     dc6:	05 c0       	rjmp	.+10     	; 0xdd2 <__pack_f+0x17c>
     dc8:	ee 24       	eor	r14, r14
     dca:	ff 24       	eor	r15, r15
     dcc:	87 01       	movw	r16, r14
     dce:	ef ef       	ldi	r30, 0xFF	; 255
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	6e 2f       	mov	r22, r30
     dd4:	67 95       	ror	r22
     dd6:	66 27       	eor	r22, r22
     dd8:	67 95       	ror	r22
     dda:	90 2f       	mov	r25, r16
     ddc:	9f 77       	andi	r25, 0x7F	; 127
     dde:	d7 94       	ror	r13
     de0:	dd 24       	eor	r13, r13
     de2:	d7 94       	ror	r13
     de4:	8e 2f       	mov	r24, r30
     de6:	86 95       	lsr	r24
     de8:	49 2f       	mov	r20, r25
     dea:	46 2b       	or	r20, r22
     dec:	58 2f       	mov	r21, r24
     dee:	5d 29       	or	r21, r13
     df0:	b7 01       	movw	r22, r14
     df2:	ca 01       	movw	r24, r20
     df4:	1f 91       	pop	r17
     df6:	0f 91       	pop	r16
     df8:	ff 90       	pop	r15
     dfa:	ef 90       	pop	r14
     dfc:	df 90       	pop	r13
     dfe:	08 95       	ret

00000e00 <__unpack_f>:
     e00:	fc 01       	movw	r30, r24
     e02:	db 01       	movw	r26, r22
     e04:	40 81       	ld	r20, Z
     e06:	51 81       	ldd	r21, Z+1	; 0x01
     e08:	22 81       	ldd	r18, Z+2	; 0x02
     e0a:	62 2f       	mov	r22, r18
     e0c:	6f 77       	andi	r22, 0x7F	; 127
     e0e:	70 e0       	ldi	r23, 0x00	; 0
     e10:	22 1f       	adc	r18, r18
     e12:	22 27       	eor	r18, r18
     e14:	22 1f       	adc	r18, r18
     e16:	93 81       	ldd	r25, Z+3	; 0x03
     e18:	89 2f       	mov	r24, r25
     e1a:	88 0f       	add	r24, r24
     e1c:	82 2b       	or	r24, r18
     e1e:	28 2f       	mov	r18, r24
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	99 1f       	adc	r25, r25
     e24:	99 27       	eor	r25, r25
     e26:	99 1f       	adc	r25, r25
     e28:	11 96       	adiw	r26, 0x01	; 1
     e2a:	9c 93       	st	X, r25
     e2c:	11 97       	sbiw	r26, 0x01	; 1
     e2e:	21 15       	cp	r18, r1
     e30:	31 05       	cpc	r19, r1
     e32:	a9 f5       	brne	.+106    	; 0xe9e <__unpack_f+0x9e>
     e34:	41 15       	cp	r20, r1
     e36:	51 05       	cpc	r21, r1
     e38:	61 05       	cpc	r22, r1
     e3a:	71 05       	cpc	r23, r1
     e3c:	11 f4       	brne	.+4      	; 0xe42 <__unpack_f+0x42>
     e3e:	82 e0       	ldi	r24, 0x02	; 2
     e40:	37 c0       	rjmp	.+110    	; 0xeb0 <__unpack_f+0xb0>
     e42:	82 e8       	ldi	r24, 0x82	; 130
     e44:	9f ef       	ldi	r25, 0xFF	; 255
     e46:	13 96       	adiw	r26, 0x03	; 3
     e48:	9c 93       	st	X, r25
     e4a:	8e 93       	st	-X, r24
     e4c:	12 97       	sbiw	r26, 0x02	; 2
     e4e:	9a 01       	movw	r18, r20
     e50:	ab 01       	movw	r20, r22
     e52:	67 e0       	ldi	r22, 0x07	; 7
     e54:	22 0f       	add	r18, r18
     e56:	33 1f       	adc	r19, r19
     e58:	44 1f       	adc	r20, r20
     e5a:	55 1f       	adc	r21, r21
     e5c:	6a 95       	dec	r22
     e5e:	d1 f7       	brne	.-12     	; 0xe54 <__unpack_f+0x54>
     e60:	83 e0       	ldi	r24, 0x03	; 3
     e62:	8c 93       	st	X, r24
     e64:	0d c0       	rjmp	.+26     	; 0xe80 <__unpack_f+0x80>
     e66:	22 0f       	add	r18, r18
     e68:	33 1f       	adc	r19, r19
     e6a:	44 1f       	adc	r20, r20
     e6c:	55 1f       	adc	r21, r21
     e6e:	12 96       	adiw	r26, 0x02	; 2
     e70:	8d 91       	ld	r24, X+
     e72:	9c 91       	ld	r25, X
     e74:	13 97       	sbiw	r26, 0x03	; 3
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	13 96       	adiw	r26, 0x03	; 3
     e7a:	9c 93       	st	X, r25
     e7c:	8e 93       	st	-X, r24
     e7e:	12 97       	sbiw	r26, 0x02	; 2
     e80:	20 30       	cpi	r18, 0x00	; 0
     e82:	80 e0       	ldi	r24, 0x00	; 0
     e84:	38 07       	cpc	r19, r24
     e86:	80 e0       	ldi	r24, 0x00	; 0
     e88:	48 07       	cpc	r20, r24
     e8a:	80 e4       	ldi	r24, 0x40	; 64
     e8c:	58 07       	cpc	r21, r24
     e8e:	58 f3       	brcs	.-42     	; 0xe66 <__unpack_f+0x66>
     e90:	14 96       	adiw	r26, 0x04	; 4
     e92:	2d 93       	st	X+, r18
     e94:	3d 93       	st	X+, r19
     e96:	4d 93       	st	X+, r20
     e98:	5c 93       	st	X, r21
     e9a:	17 97       	sbiw	r26, 0x07	; 7
     e9c:	08 95       	ret
     e9e:	2f 3f       	cpi	r18, 0xFF	; 255
     ea0:	31 05       	cpc	r19, r1
     ea2:	79 f4       	brne	.+30     	; 0xec2 <__unpack_f+0xc2>
     ea4:	41 15       	cp	r20, r1
     ea6:	51 05       	cpc	r21, r1
     ea8:	61 05       	cpc	r22, r1
     eaa:	71 05       	cpc	r23, r1
     eac:	19 f4       	brne	.+6      	; 0xeb4 <__unpack_f+0xb4>
     eae:	84 e0       	ldi	r24, 0x04	; 4
     eb0:	8c 93       	st	X, r24
     eb2:	08 95       	ret
     eb4:	64 ff       	sbrs	r22, 4
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <__unpack_f+0xbe>
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	8c 93       	st	X, r24
     ebc:	12 c0       	rjmp	.+36     	; 0xee2 <__unpack_f+0xe2>
     ebe:	1c 92       	st	X, r1
     ec0:	10 c0       	rjmp	.+32     	; 0xee2 <__unpack_f+0xe2>
     ec2:	2f 57       	subi	r18, 0x7F	; 127
     ec4:	30 40       	sbci	r19, 0x00	; 0
     ec6:	13 96       	adiw	r26, 0x03	; 3
     ec8:	3c 93       	st	X, r19
     eca:	2e 93       	st	-X, r18
     ecc:	12 97       	sbiw	r26, 0x02	; 2
     ece:	83 e0       	ldi	r24, 0x03	; 3
     ed0:	8c 93       	st	X, r24
     ed2:	87 e0       	ldi	r24, 0x07	; 7
     ed4:	44 0f       	add	r20, r20
     ed6:	55 1f       	adc	r21, r21
     ed8:	66 1f       	adc	r22, r22
     eda:	77 1f       	adc	r23, r23
     edc:	8a 95       	dec	r24
     ede:	d1 f7       	brne	.-12     	; 0xed4 <__unpack_f+0xd4>
     ee0:	70 64       	ori	r23, 0x40	; 64
     ee2:	14 96       	adiw	r26, 0x04	; 4
     ee4:	4d 93       	st	X+, r20
     ee6:	5d 93       	st	X+, r21
     ee8:	6d 93       	st	X+, r22
     eea:	7c 93       	st	X, r23
     eec:	17 97       	sbiw	r26, 0x07	; 7
     eee:	08 95       	ret

00000ef0 <__fpcmp_parts_f>:
     ef0:	1f 93       	push	r17
     ef2:	dc 01       	movw	r26, r24
     ef4:	fb 01       	movw	r30, r22
     ef6:	9c 91       	ld	r25, X
     ef8:	92 30       	cpi	r25, 0x02	; 2
     efa:	08 f4       	brcc	.+2      	; 0xefe <__fpcmp_parts_f+0xe>
     efc:	47 c0       	rjmp	.+142    	; 0xf8c <__fpcmp_parts_f+0x9c>
     efe:	80 81       	ld	r24, Z
     f00:	82 30       	cpi	r24, 0x02	; 2
     f02:	08 f4       	brcc	.+2      	; 0xf06 <__fpcmp_parts_f+0x16>
     f04:	43 c0       	rjmp	.+134    	; 0xf8c <__fpcmp_parts_f+0x9c>
     f06:	94 30       	cpi	r25, 0x04	; 4
     f08:	51 f4       	brne	.+20     	; 0xf1e <__fpcmp_parts_f+0x2e>
     f0a:	11 96       	adiw	r26, 0x01	; 1
     f0c:	1c 91       	ld	r17, X
     f0e:	84 30       	cpi	r24, 0x04	; 4
     f10:	99 f5       	brne	.+102    	; 0xf78 <__fpcmp_parts_f+0x88>
     f12:	81 81       	ldd	r24, Z+1	; 0x01
     f14:	68 2f       	mov	r22, r24
     f16:	70 e0       	ldi	r23, 0x00	; 0
     f18:	61 1b       	sub	r22, r17
     f1a:	71 09       	sbc	r23, r1
     f1c:	3f c0       	rjmp	.+126    	; 0xf9c <__fpcmp_parts_f+0xac>
     f1e:	84 30       	cpi	r24, 0x04	; 4
     f20:	21 f0       	breq	.+8      	; 0xf2a <__fpcmp_parts_f+0x3a>
     f22:	92 30       	cpi	r25, 0x02	; 2
     f24:	31 f4       	brne	.+12     	; 0xf32 <__fpcmp_parts_f+0x42>
     f26:	82 30       	cpi	r24, 0x02	; 2
     f28:	b9 f1       	breq	.+110    	; 0xf98 <__fpcmp_parts_f+0xa8>
     f2a:	81 81       	ldd	r24, Z+1	; 0x01
     f2c:	88 23       	and	r24, r24
     f2e:	89 f1       	breq	.+98     	; 0xf92 <__fpcmp_parts_f+0xa2>
     f30:	2d c0       	rjmp	.+90     	; 0xf8c <__fpcmp_parts_f+0x9c>
     f32:	11 96       	adiw	r26, 0x01	; 1
     f34:	1c 91       	ld	r17, X
     f36:	11 97       	sbiw	r26, 0x01	; 1
     f38:	82 30       	cpi	r24, 0x02	; 2
     f3a:	f1 f0       	breq	.+60     	; 0xf78 <__fpcmp_parts_f+0x88>
     f3c:	81 81       	ldd	r24, Z+1	; 0x01
     f3e:	18 17       	cp	r17, r24
     f40:	d9 f4       	brne	.+54     	; 0xf78 <__fpcmp_parts_f+0x88>
     f42:	12 96       	adiw	r26, 0x02	; 2
     f44:	2d 91       	ld	r18, X+
     f46:	3c 91       	ld	r19, X
     f48:	13 97       	sbiw	r26, 0x03	; 3
     f4a:	82 81       	ldd	r24, Z+2	; 0x02
     f4c:	93 81       	ldd	r25, Z+3	; 0x03
     f4e:	82 17       	cp	r24, r18
     f50:	93 07       	cpc	r25, r19
     f52:	94 f0       	brlt	.+36     	; 0xf78 <__fpcmp_parts_f+0x88>
     f54:	28 17       	cp	r18, r24
     f56:	39 07       	cpc	r19, r25
     f58:	bc f0       	brlt	.+46     	; 0xf88 <__fpcmp_parts_f+0x98>
     f5a:	14 96       	adiw	r26, 0x04	; 4
     f5c:	8d 91       	ld	r24, X+
     f5e:	9d 91       	ld	r25, X+
     f60:	0d 90       	ld	r0, X+
     f62:	bc 91       	ld	r27, X
     f64:	a0 2d       	mov	r26, r0
     f66:	24 81       	ldd	r18, Z+4	; 0x04
     f68:	35 81       	ldd	r19, Z+5	; 0x05
     f6a:	46 81       	ldd	r20, Z+6	; 0x06
     f6c:	57 81       	ldd	r21, Z+7	; 0x07
     f6e:	28 17       	cp	r18, r24
     f70:	39 07       	cpc	r19, r25
     f72:	4a 07       	cpc	r20, r26
     f74:	5b 07       	cpc	r21, r27
     f76:	18 f4       	brcc	.+6      	; 0xf7e <__fpcmp_parts_f+0x8e>
     f78:	11 23       	and	r17, r17
     f7a:	41 f0       	breq	.+16     	; 0xf8c <__fpcmp_parts_f+0x9c>
     f7c:	0a c0       	rjmp	.+20     	; 0xf92 <__fpcmp_parts_f+0xa2>
     f7e:	82 17       	cp	r24, r18
     f80:	93 07       	cpc	r25, r19
     f82:	a4 07       	cpc	r26, r20
     f84:	b5 07       	cpc	r27, r21
     f86:	40 f4       	brcc	.+16     	; 0xf98 <__fpcmp_parts_f+0xa8>
     f88:	11 23       	and	r17, r17
     f8a:	19 f0       	breq	.+6      	; 0xf92 <__fpcmp_parts_f+0xa2>
     f8c:	61 e0       	ldi	r22, 0x01	; 1
     f8e:	70 e0       	ldi	r23, 0x00	; 0
     f90:	05 c0       	rjmp	.+10     	; 0xf9c <__fpcmp_parts_f+0xac>
     f92:	6f ef       	ldi	r22, 0xFF	; 255
     f94:	7f ef       	ldi	r23, 0xFF	; 255
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <__fpcmp_parts_f+0xac>
     f98:	60 e0       	ldi	r22, 0x00	; 0
     f9a:	70 e0       	ldi	r23, 0x00	; 0
     f9c:	cb 01       	movw	r24, r22
     f9e:	1f 91       	pop	r17
     fa0:	08 95       	ret

00000fa2 <__divmodhi4>:
     fa2:	97 fb       	bst	r25, 7
     fa4:	09 2e       	mov	r0, r25
     fa6:	07 26       	eor	r0, r23
     fa8:	0a d0       	rcall	.+20     	; 0xfbe <__divmodhi4_neg1>
     faa:	77 fd       	sbrc	r23, 7
     fac:	04 d0       	rcall	.+8      	; 0xfb6 <__divmodhi4_neg2>
     fae:	0c d0       	rcall	.+24     	; 0xfc8 <__udivmodhi4>
     fb0:	06 d0       	rcall	.+12     	; 0xfbe <__divmodhi4_neg1>
     fb2:	00 20       	and	r0, r0
     fb4:	1a f4       	brpl	.+6      	; 0xfbc <__divmodhi4_exit>

00000fb6 <__divmodhi4_neg2>:
     fb6:	70 95       	com	r23
     fb8:	61 95       	neg	r22
     fba:	7f 4f       	sbci	r23, 0xFF	; 255

00000fbc <__divmodhi4_exit>:
     fbc:	08 95       	ret

00000fbe <__divmodhi4_neg1>:
     fbe:	f6 f7       	brtc	.-4      	; 0xfbc <__divmodhi4_exit>
     fc0:	90 95       	com	r25
     fc2:	81 95       	neg	r24
     fc4:	9f 4f       	sbci	r25, 0xFF	; 255
     fc6:	08 95       	ret

00000fc8 <__udivmodhi4>:
     fc8:	aa 1b       	sub	r26, r26
     fca:	bb 1b       	sub	r27, r27
     fcc:	51 e1       	ldi	r21, 0x11	; 17
     fce:	07 c0       	rjmp	.+14     	; 0xfde <__udivmodhi4_ep>

00000fd0 <__udivmodhi4_loop>:
     fd0:	aa 1f       	adc	r26, r26
     fd2:	bb 1f       	adc	r27, r27
     fd4:	a6 17       	cp	r26, r22
     fd6:	b7 07       	cpc	r27, r23
     fd8:	10 f0       	brcs	.+4      	; 0xfde <__udivmodhi4_ep>
     fda:	a6 1b       	sub	r26, r22
     fdc:	b7 0b       	sbc	r27, r23

00000fde <__udivmodhi4_ep>:
     fde:	88 1f       	adc	r24, r24
     fe0:	99 1f       	adc	r25, r25
     fe2:	5a 95       	dec	r21
     fe4:	a9 f7       	brne	.-22     	; 0xfd0 <__udivmodhi4_loop>
     fe6:	80 95       	com	r24
     fe8:	90 95       	com	r25
     fea:	bc 01       	movw	r22, r24
     fec:	cd 01       	movw	r24, r26
     fee:	08 95       	ret

00000ff0 <__prologue_saves__>:
     ff0:	2f 92       	push	r2
     ff2:	3f 92       	push	r3
     ff4:	4f 92       	push	r4
     ff6:	5f 92       	push	r5
     ff8:	6f 92       	push	r6
     ffa:	7f 92       	push	r7
     ffc:	8f 92       	push	r8
     ffe:	9f 92       	push	r9
    1000:	af 92       	push	r10
    1002:	bf 92       	push	r11
    1004:	cf 92       	push	r12
    1006:	df 92       	push	r13
    1008:	ef 92       	push	r14
    100a:	ff 92       	push	r15
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	ca 1b       	sub	r28, r26
    101a:	db 0b       	sbc	r29, r27
    101c:	0f b6       	in	r0, 0x3f	; 63
    101e:	f8 94       	cli
    1020:	de bf       	out	0x3e, r29	; 62
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	cd bf       	out	0x3d, r28	; 61
    1026:	09 94       	ijmp

00001028 <__epilogue_restores__>:
    1028:	2a 88       	ldd	r2, Y+18	; 0x12
    102a:	39 88       	ldd	r3, Y+17	; 0x11
    102c:	48 88       	ldd	r4, Y+16	; 0x10
    102e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1030:	6e 84       	ldd	r6, Y+14	; 0x0e
    1032:	7d 84       	ldd	r7, Y+13	; 0x0d
    1034:	8c 84       	ldd	r8, Y+12	; 0x0c
    1036:	9b 84       	ldd	r9, Y+11	; 0x0b
    1038:	aa 84       	ldd	r10, Y+10	; 0x0a
    103a:	b9 84       	ldd	r11, Y+9	; 0x09
    103c:	c8 84       	ldd	r12, Y+8	; 0x08
    103e:	df 80       	ldd	r13, Y+7	; 0x07
    1040:	ee 80       	ldd	r14, Y+6	; 0x06
    1042:	fd 80       	ldd	r15, Y+5	; 0x05
    1044:	0c 81       	ldd	r16, Y+4	; 0x04
    1046:	1b 81       	ldd	r17, Y+3	; 0x03
    1048:	aa 81       	ldd	r26, Y+2	; 0x02
    104a:	b9 81       	ldd	r27, Y+1	; 0x01
    104c:	ce 0f       	add	r28, r30
    104e:	d1 1d       	adc	r29, r1
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	ed 01       	movw	r28, r26
    105c:	08 95       	ret

0000105e <_exit>:
    105e:	f8 94       	cli

00001060 <__stop_program>:
    1060:	ff cf       	rjmp	.-2      	; 0x1060 <__stop_program>
