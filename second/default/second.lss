
second.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000286  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000002da  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000034  00000000  00000000  000002fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000074b  00000000  00000000  0000032e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000013c  00000000  00000000  00000a79  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000004f8  00000000  00000000  00000bb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  000010b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000ba  00000000  00000000  000010f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000468  00000000  00000000  000011aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 000000d8  00000000  00000000  00001612  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 3e 01 	call	0x27c	; 0x27c <main>
  78:	0c 94 41 01 	jmp	0x282	; 0x282 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ledmain>:
#define F_CPU 16000000UL
#include<util/delay.h>

int ledmain()
{
	DDRD = 0xFF; 
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
  84:	20 e0       	ldi	r18, 0x00	; 0
  86:	30 e0       	ldi	r19, 0x00	; 0
	
	for(int i=0 ; i<3 ; i++)
	{
		int val = 0xAA;
		PORTD = val;
  88:	7a ea       	ldi	r23, 0xAA	; 170
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  8a:	40 e9       	ldi	r20, 0x90	; 144
  8c:	51 e0       	ldi	r21, 0x01	; 1
		_delay_ms(500);
		PORTD = ~val; 
  8e:	65 e5       	ldi	r22, 0x55	; 85
	DDRD = 0xFF; 
	
	for(int i=0 ; i<3 ; i++)
	{
		int val = 0xAA;
		PORTD = val;
  90:	7b b9       	out	0x0b, r23	; 11
  92:	88 e8       	ldi	r24, 0x88	; 136
  94:	93 e1       	ldi	r25, 0x13	; 19
  96:	fa 01       	movw	r30, r20
  98:	31 97       	sbiw	r30, 0x01	; 1
  9a:	f1 f7       	brne	.-4      	; 0x98 <ledmain+0x18>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  9c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  9e:	d9 f7       	brne	.-10     	; 0x96 <ledmain+0x16>
		_delay_ms(500);
		PORTD = ~val; 
  a0:	6b b9       	out	0x0b, r22	; 11
  a2:	88 e8       	ldi	r24, 0x88	; 136
  a4:	93 e1       	ldi	r25, 0x13	; 19
  a6:	fa 01       	movw	r30, r20
  a8:	31 97       	sbiw	r30, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <ledmain+0x28>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ac:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ae:	d9 f7       	brne	.-10     	; 0xa6 <ledmain+0x26>

int ledmain()
{
	DDRD = 0xFF; 
	
	for(int i=0 ; i<3 ; i++)
  b0:	2f 5f       	subi	r18, 0xFF	; 255
  b2:	3f 4f       	sbci	r19, 0xFF	; 255
  b4:	23 30       	cpi	r18, 0x03	; 3
  b6:	31 05       	cpc	r19, r1
  b8:	59 f7       	brne	.-42     	; 0x90 <ledmain+0x10>
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	30 e0       	ldi	r19, 0x00	; 0
	}

	
	for(int i=0 ; i<4 ; i++)
	{
		PORTD = 0xF0;
  be:	70 ef       	ldi	r23, 0xF0	; 240
  c0:	40 e9       	ldi	r20, 0x90	; 144
  c2:	51 e0       	ldi	r21, 0x01	; 1
		_delay_ms(500);
		PORTD = 0x0F; 
  c4:	6f e0       	ldi	r22, 0x0F	; 15
	}

	
	for(int i=0 ; i<4 ; i++)
	{
		PORTD = 0xF0;
  c6:	7b b9       	out	0x0b, r23	; 11
  c8:	88 e8       	ldi	r24, 0x88	; 136
  ca:	93 e1       	ldi	r25, 0x13	; 19
  cc:	fa 01       	movw	r30, r20
  ce:	31 97       	sbiw	r30, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <ledmain+0x4e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  d4:	d9 f7       	brne	.-10     	; 0xcc <ledmain+0x4c>
		_delay_ms(500);
		PORTD = 0x0F; 
  d6:	6b b9       	out	0x0b, r22	; 11
  d8:	88 e8       	ldi	r24, 0x88	; 136
  da:	93 e1       	ldi	r25, 0x13	; 19
  dc:	fa 01       	movw	r30, r20
  de:	31 97       	sbiw	r30, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <ledmain+0x5e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  e2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  e4:	d9 f7       	brne	.-10     	; 0xdc <ledmain+0x5c>
		PORTD = ~val; 
		_delay_ms(500);
	}

	
	for(int i=0 ; i<4 ; i++)
  e6:	2f 5f       	subi	r18, 0xFF	; 255
  e8:	3f 4f       	sbci	r19, 0xFF	; 255
  ea:	24 30       	cpi	r18, 0x04	; 4
  ec:	31 05       	cpc	r19, r1
  ee:	59 f7       	brne	.-42     	; 0xc6 <ledmain+0x46>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
		_delay_ms(500);
	}

	for(int i=0 ; i<5 ; i++)
	{
		PORTD = 0xC3;
  f4:	73 ec       	ldi	r23, 0xC3	; 195
  f6:	40 e9       	ldi	r20, 0x90	; 144
  f8:	51 e0       	ldi	r21, 0x01	; 1
		_delay_ms(500);
		PORTD = 0x3C; 
  fa:	6c e3       	ldi	r22, 0x3C	; 60
		_delay_ms(500);
	}

	for(int i=0 ; i<5 ; i++)
	{
		PORTD = 0xC3;
  fc:	7b b9       	out	0x0b, r23	; 11
  fe:	88 e8       	ldi	r24, 0x88	; 136
 100:	93 e1       	ldi	r25, 0x13	; 19
 102:	fa 01       	movw	r30, r20
 104:	31 97       	sbiw	r30, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <ledmain+0x84>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 108:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 10a:	d9 f7       	brne	.-10     	; 0x102 <ledmain+0x82>
		_delay_ms(500);
		PORTD = 0x3C; 
 10c:	6b b9       	out	0x0b, r22	; 11
 10e:	88 e8       	ldi	r24, 0x88	; 136
 110:	93 e1       	ldi	r25, 0x13	; 19
 112:	fa 01       	movw	r30, r20
 114:	31 97       	sbiw	r30, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <ledmain+0x94>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 118:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 11a:	d9 f7       	brne	.-10     	; 0x112 <ledmain+0x92>
		_delay_ms(500);
		PORTD = 0x0F; 
		_delay_ms(500);
	}

	for(int i=0 ; i<5 ; i++)
 11c:	2f 5f       	subi	r18, 0xFF	; 255
 11e:	3f 4f       	sbci	r19, 0xFF	; 255
 120:	25 30       	cpi	r18, 0x05	; 5
 122:	31 05       	cpc	r19, r1
 124:	59 f7       	brne	.-42     	; 0xfc <ledmain+0x7c>
		PORTD = 0xC3;
		_delay_ms(500);
		PORTD = 0x3C; 
		_delay_ms(500);
	}
	PORTD = 0xFF;
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	8b b9       	out	0x0b, r24	; 11
}
 12a:	08 95       	ret

0000012c <ledshift>:

int ledshift()
{
	DDRD = 0xFF; 
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	8a b9       	out	0x0a, r24	; 10

		PORTD = 0xFE;
 130:	8e ef       	ldi	r24, 0xFE	; 254
 132:	8b b9       	out	0x0b, r24	; 11
 134:	88 e8       	ldi	r24, 0x88	; 136
 136:	93 e1       	ldi	r25, 0x13	; 19
 138:	20 e9       	ldi	r18, 0x90	; 144
 13a:	31 e0       	ldi	r19, 0x01	; 1
 13c:	f9 01       	movw	r30, r18
 13e:	31 97       	sbiw	r30, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <ledshift+0x12>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 142:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 144:	d9 f7       	brne	.-10     	; 0x13c <ledshift+0x10>
		_delay_ms(500);
		PORTD = 0xFD;
 146:	8d ef       	ldi	r24, 0xFD	; 253
 148:	8b b9       	out	0x0b, r24	; 11
 14a:	88 e8       	ldi	r24, 0x88	; 136
 14c:	93 e1       	ldi	r25, 0x13	; 19
 14e:	20 e9       	ldi	r18, 0x90	; 144
 150:	31 e0       	ldi	r19, 0x01	; 1
 152:	f9 01       	movw	r30, r18
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <ledshift+0x28>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 158:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 15a:	d9 f7       	brne	.-10     	; 0x152 <ledshift+0x26>
		_delay_ms(500);
		PORTD = 0xFB;
 15c:	8b ef       	ldi	r24, 0xFB	; 251
 15e:	8b b9       	out	0x0b, r24	; 11
 160:	88 e8       	ldi	r24, 0x88	; 136
 162:	93 e1       	ldi	r25, 0x13	; 19
 164:	20 e9       	ldi	r18, 0x90	; 144
 166:	31 e0       	ldi	r19, 0x01	; 1
 168:	f9 01       	movw	r30, r18
 16a:	31 97       	sbiw	r30, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <ledshift+0x3e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 16e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 170:	d9 f7       	brne	.-10     	; 0x168 <ledshift+0x3c>
		_delay_ms(500);
		PORTD = 0xF7;
 172:	87 ef       	ldi	r24, 0xF7	; 247
 174:	8b b9       	out	0x0b, r24	; 11
 176:	88 e8       	ldi	r24, 0x88	; 136
 178:	93 e1       	ldi	r25, 0x13	; 19
 17a:	20 e9       	ldi	r18, 0x90	; 144
 17c:	31 e0       	ldi	r19, 0x01	; 1
 17e:	f9 01       	movw	r30, r18
 180:	31 97       	sbiw	r30, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <ledshift+0x54>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 184:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 186:	d9 f7       	brne	.-10     	; 0x17e <ledshift+0x52>
		_delay_ms(500);
		PORTD = 0xEF;
 188:	8f ee       	ldi	r24, 0xEF	; 239
 18a:	8b b9       	out	0x0b, r24	; 11
 18c:	88 e8       	ldi	r24, 0x88	; 136
 18e:	93 e1       	ldi	r25, 0x13	; 19
 190:	20 e9       	ldi	r18, 0x90	; 144
 192:	31 e0       	ldi	r19, 0x01	; 1
 194:	f9 01       	movw	r30, r18
 196:	31 97       	sbiw	r30, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <ledshift+0x6a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 19a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 19c:	d9 f7       	brne	.-10     	; 0x194 <ledshift+0x68>
		_delay_ms(500);
		PORTD = 0xDF;
 19e:	8f ed       	ldi	r24, 0xDF	; 223
 1a0:	8b b9       	out	0x0b, r24	; 11
 1a2:	88 e8       	ldi	r24, 0x88	; 136
 1a4:	93 e1       	ldi	r25, 0x13	; 19
 1a6:	20 e9       	ldi	r18, 0x90	; 144
 1a8:	31 e0       	ldi	r19, 0x01	; 1
 1aa:	f9 01       	movw	r30, r18
 1ac:	31 97       	sbiw	r30, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <ledshift+0x80>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1b0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1b2:	d9 f7       	brne	.-10     	; 0x1aa <ledshift+0x7e>
		_delay_ms(500);
		PORTD = 0xBF;
 1b4:	8f eb       	ldi	r24, 0xBF	; 191
 1b6:	8b b9       	out	0x0b, r24	; 11
 1b8:	88 e8       	ldi	r24, 0x88	; 136
 1ba:	93 e1       	ldi	r25, 0x13	; 19
 1bc:	20 e9       	ldi	r18, 0x90	; 144
 1be:	31 e0       	ldi	r19, 0x01	; 1
 1c0:	f9 01       	movw	r30, r18
 1c2:	31 97       	sbiw	r30, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <ledshift+0x96>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1c8:	d9 f7       	brne	.-10     	; 0x1c0 <ledshift+0x94>
		_delay_ms(500);
		PORTD = 0x7F;
 1ca:	8f e7       	ldi	r24, 0x7F	; 127
 1cc:	8b b9       	out	0x0b, r24	; 11
 1ce:	88 e8       	ldi	r24, 0x88	; 136
 1d0:	93 e1       	ldi	r25, 0x13	; 19
 1d2:	20 e9       	ldi	r18, 0x90	; 144
 1d4:	31 e0       	ldi	r19, 0x01	; 1
 1d6:	f9 01       	movw	r30, r18
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <ledshift+0xac>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1dc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1de:	d9 f7       	brne	.-10     	; 0x1d6 <ledshift+0xaa>
		_delay_ms(500);
		PORTD = 0xBF;
 1e0:	8f eb       	ldi	r24, 0xBF	; 191
 1e2:	8b b9       	out	0x0b, r24	; 11
 1e4:	88 e8       	ldi	r24, 0x88	; 136
 1e6:	93 e1       	ldi	r25, 0x13	; 19
 1e8:	20 e9       	ldi	r18, 0x90	; 144
 1ea:	31 e0       	ldi	r19, 0x01	; 1
 1ec:	f9 01       	movw	r30, r18
 1ee:	31 97       	sbiw	r30, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <ledshift+0xc2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1f2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1f4:	d9 f7       	brne	.-10     	; 0x1ec <ledshift+0xc0>
		_delay_ms(500);
		PORTD = 0xDF;
 1f6:	8f ed       	ldi	r24, 0xDF	; 223
 1f8:	8b b9       	out	0x0b, r24	; 11
 1fa:	88 e8       	ldi	r24, 0x88	; 136
 1fc:	93 e1       	ldi	r25, 0x13	; 19
 1fe:	20 e9       	ldi	r18, 0x90	; 144
 200:	31 e0       	ldi	r19, 0x01	; 1
 202:	f9 01       	movw	r30, r18
 204:	31 97       	sbiw	r30, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <ledshift+0xd8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 208:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 20a:	d9 f7       	brne	.-10     	; 0x202 <ledshift+0xd6>
		_delay_ms(500);
		PORTD = 0xEF;
 20c:	8f ee       	ldi	r24, 0xEF	; 239
 20e:	8b b9       	out	0x0b, r24	; 11
 210:	88 e8       	ldi	r24, 0x88	; 136
 212:	93 e1       	ldi	r25, 0x13	; 19
 214:	20 e9       	ldi	r18, 0x90	; 144
 216:	31 e0       	ldi	r19, 0x01	; 1
 218:	f9 01       	movw	r30, r18
 21a:	31 97       	sbiw	r30, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <ledshift+0xee>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 21e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 220:	d9 f7       	brne	.-10     	; 0x218 <ledshift+0xec>
		_delay_ms(500);
		PORTD = 0xF7;
 222:	87 ef       	ldi	r24, 0xF7	; 247
 224:	8b b9       	out	0x0b, r24	; 11
 226:	88 e8       	ldi	r24, 0x88	; 136
 228:	93 e1       	ldi	r25, 0x13	; 19
 22a:	20 e9       	ldi	r18, 0x90	; 144
 22c:	31 e0       	ldi	r19, 0x01	; 1
 22e:	f9 01       	movw	r30, r18
 230:	31 97       	sbiw	r30, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <ledshift+0x104>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 234:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 236:	d9 f7       	brne	.-10     	; 0x22e <ledshift+0x102>
		_delay_ms(500);
		PORTD = 0xFB;
 238:	8b ef       	ldi	r24, 0xFB	; 251
 23a:	8b b9       	out	0x0b, r24	; 11
 23c:	88 e8       	ldi	r24, 0x88	; 136
 23e:	93 e1       	ldi	r25, 0x13	; 19
 240:	20 e9       	ldi	r18, 0x90	; 144
 242:	31 e0       	ldi	r19, 0x01	; 1
 244:	f9 01       	movw	r30, r18
 246:	31 97       	sbiw	r30, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <ledshift+0x11a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 24a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 24c:	d9 f7       	brne	.-10     	; 0x244 <ledshift+0x118>
		_delay_ms(500);
		PORTD = 0xFD;
 24e:	8d ef       	ldi	r24, 0xFD	; 253
 250:	8b b9       	out	0x0b, r24	; 11
 252:	88 e8       	ldi	r24, 0x88	; 136
 254:	93 e1       	ldi	r25, 0x13	; 19
 256:	20 e9       	ldi	r18, 0x90	; 144
 258:	31 e0       	ldi	r19, 0x01	; 1
 25a:	f9 01       	movw	r30, r18
 25c:	31 97       	sbiw	r30, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <ledshift+0x130>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 260:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 262:	d9 f7       	brne	.-10     	; 0x25a <ledshift+0x12e>
		_delay_ms(500);
		PORTD = 0xFE;
 264:	8e ef       	ldi	r24, 0xFE	; 254
 266:	8b b9       	out	0x0b, r24	; 11
 268:	88 e8       	ldi	r24, 0x88	; 136
 26a:	93 e1       	ldi	r25, 0x13	; 19
 26c:	20 e9       	ldi	r18, 0x90	; 144
 26e:	31 e0       	ldi	r19, 0x01	; 1
 270:	f9 01       	movw	r30, r18
 272:	31 97       	sbiw	r30, 0x01	; 1
 274:	f1 f7       	brne	.-4      	; 0x272 <ledshift+0x146>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 276:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 278:	d9 f7       	brne	.-10     	; 0x270 <ledshift+0x144>
		_delay_ms(500);	
	
}
 27a:	08 95       	ret

0000027c <main>:

void main()
{
	ledshift();
 27c:	0e 94 96 00 	call	0x12c	; 0x12c <ledshift>
}
 280:	08 95       	ret

00000282 <_exit>:
 282:	f8 94       	cli

00000284 <__stop_program>:
 284:	ff cf       	rjmp	.-2      	; 0x284 <__stop_program>
